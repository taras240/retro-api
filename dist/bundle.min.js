/*! For license information please see bundle.min.js.LICENSE.txt */
(()=>{"use strict";var e={d:(t,s)=>{for(var i in s)e.o(s,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:s[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{Js:()=>Ot,$W:()=>Nt,ve:()=>Ft,ui:()=>kt,VL:()=>xt});const t=Object.freeze({default:{mainColor:"#171A21",secondaryColor:"#202329",accentColor:"#3663D8",fontColor:"#d6d6d6"},white:{mainColor:"#FFFFFF",secondaryColor:"#F0F0F0",accentColor:"#007ACC",fontColor:"#000000"},black:{mainColor:"#050505",secondaryColor:"#202329",accentColor:"#0a7ff5",fontColor:"#ffffff",selectionColor:"rgba(10, 127, 245, 0.1)"},contrastGreen:{mainColor:"#000000",secondaryColor:"#1a1a1a",accentColor:"#FFD700",fontColor:"#00FF00"},blue:{mainColor:"#070F2B",secondaryColor:"#1B1A55",accentColor:"#535C91",fontColor:"#eeeeee"},retro:{mainColor:"#1D2B53",secondaryColor:"#333A73",accentColor:"#387ADF",fontColor:"#cdcdcd"},vintage:{mainColor:"#222831",secondaryColor:"#31363F",accentColor:"#76ABAE",fontColor:"#eeeeee"},lightblue:{mainColor:"#A0E9FF",secondaryColor:"#89CFF3",accentColor:"#00A9FF",fontColor:"#000000"},synthwave:{mainColor:"#5D0E41",secondaryColor:"#A0153E",accentColor:"#FF204E",fontColor:"#dedede"},brown:{mainColor:"#481E14",secondaryColor:"#9B3922",accentColor:"#B35C1E",fontColor:"#eeeeee"}}),s={default:"",Roboto:"https://fonts.googleapis.com/css2?family=Roboto:wght@100..900&display=swap","Pixelify Sans":"https://fonts.googleapis.com/css2?family=Pixelify+Sans&display=swap",Jaro:"https://fonts.googleapis.com/css2?family=Jaro&display=swap",Oxygen:"https://fonts.googleapis.com/css2?family=Oxygen:wght@300;400;700&display=swap",Nunito:"https://fonts.googleapis.com/css2?family=Nunito:wght@200..1000&display=swap"};function i(){return new Promise(((e,t)=>{const s=indexedDB.open("retrocheevosDB",1);s.onupgradeneeded=e=>{e.target.result.createObjectStore("handles")},s.onsuccess=t=>e(t.target.result),s.onerror=e=>t(e.target.error)}))}const n={panel:"./elements/side-panel.elem",status:"./elements/status.elem",note:"./elements/note.elem",statusV2:"./elements/statusV2.elem"};const a={1:"Compilation",2:"Strategy",3:"Casino",4:"Music",5:"Action",6:"Platformer",7:"Puzzle",8:"Quiz",9:"Shooter",10:"Vehicle Simulation",11:"Construction and Management Simulation",12:"Fighting",13:"Sports",14:"Role-Playing",15:"Racing",16:"Beat 'em Up",17:"Adventure",18:"Education",19:"Life Simulation",20:"Board Game",21:"Stealth",22:"Pinball",23:"Flight Simulator",24:"Visual Novel",25:"Horror",26:"Sandbox",27:"Party",28:"MMO"};function o(e,t=!1){if(!isFinite(e))return"";const s=e<0;e=Math.abs(e);let i=Math.floor(e/3600),n=Math.floor(e%3600/60),a=e%60;i=i.toString().padStart(2,"0"),n=n.toString().padStart(2,"0"),a=a.toString().padStart(2,"0");const o=`${s?"-":""}${i>0?i+":":""}${n}:${a}`;return t?0==i?o:`${s?"-":""}${i}<i class="time__blinked-dots">:</i>${n}`:o}function r(e){if(!e)return"--/--";e=+e;let t=Math.floor(e/3600),s=Math.floor(e%3600/60);return t?`${t}h${s}m`:s?`${s}min${s>1?"s":""}`:`${e%60}secs`}function l(e,t){const s={day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit",hour12:!1,...t};!/(\+00\:00$)|(z$)/gi.test(e)&&(e+="+00:00");const i=new Date(e);if(isNaN(i.getTime()))return"";return i.toLocaleDateString("uk-UA",s)}function c(e){return new Date(e).toLocaleDateString("uk-UA")}const h={11:"rank x",10:"rank sss",9:"rank ss",8:"rank s",7:"rank a",6:"rank b",5:"rank c",4:"rank d"},d=(Object.fromEntries(Object.entries(h).map((([e,t])=>[e,`mastery: ${t}`]))),Object.freeze({KILLER:"killer",PACIFIST:"pacifist",SCORE:"score",TIMETRIAL:"timetrial",NO_DEATH:"no-death",NO_DAMAGE:"no-damage",COLLECTOR:"collector",BOSSFIGHT:"bossfight"})),m={1:"Mega Drive",2:"Nintendo 64",3:"SNES",4:"Game Boy",5:"GBA",6:"GBC",7:"NES",8:"PC Engine",9:"Sega CD",10:"32X",11:"Master System",12:"PlayStation",13:"Atari Lynx",14:"Neo Geo Pocket",15:"Game Gear",16:"Game Cube",17:"Atari Jaguar",18:"Nintendo DS",21:"PS2",23:"Magnavox Odyssey 2",24:"Pokemon Mini",25:"Atari 2600",27:"Arcade",28:"Virtual Boy",29:"MSX",33:"SG-1000",37:"Amstrad CPC",38:"Apple II",39:"Saturn",40:"Dreamcast",41:"PSP",43:"3DO",44:"ColecoVision",45:"Intellivision",46:"Vectrex",47:"PC-8000/8800",49:"PC-FX",51:"Atari 7800",53:"WonderSwan",56:"Neo Geo CD",57:"Fairchild Channel F",63:"Watara Supervision",69:"Mega Duck",71:"Arduboy",72:"WASM-4",73:"Arcadia 2001",74:"Interton VC 4000",75:"Elektor TV Games Computer",76:"PC Engine CD/TurboGrafx-CD",77:"Atari Jaguar CD",78:"Nintendo DSi",80:"Uzebox",101:"Events",102:"Standalone"},g={1:{Name:"Genesis/Mega Drive",IconURL:"https://static.retroachievements.org/assets/images/system/md.png"},2:{Name:"Nintendo 64",IconURL:"https://static.retroachievements.org/assets/images/system/n64.png"},3:{Name:"SNES/Super Famicom",IconURL:"https://static.retroachievements.org/assets/images/system/snes.png"},4:{Name:"Game Boy",IconURL:"https://static.retroachievements.org/assets/images/system/gb.png"},5:{Name:"Game Boy Advance",IconURL:"https://static.retroachievements.org/assets/images/system/gba.png"},6:{Name:"Game Boy Color",IconURL:"https://static.retroachievements.org/assets/images/system/gbc.png"},7:{Name:"NES/Famicom",IconURL:"https://static.retroachievements.org/assets/images/system/nes.png"},8:{Name:"PC Engine/TurboGrafx-16",IconURL:"https://static.retroachievements.org/assets/images/system/pce.png"},9:{Name:"Sega CD",IconURL:"https://static.retroachievements.org/assets/images/system/scd.png"},10:{Name:"32X",IconURL:"https://static.retroachievements.org/assets/images/system/32x.png"},11:{Name:"Master System",IconURL:"https://static.retroachievements.org/assets/images/system/sms.png"},12:{Name:"PlayStation",IconURL:"https://static.retroachievements.org/assets/images/system/ps1.png"},13:{Name:"Atari Lynx",IconURL:"https://static.retroachievements.org/assets/images/system/lynx.png"},14:{Name:"Neo Geo Pocket",IconURL:"https://static.retroachievements.org/assets/images/system/ngp.png"},15:{Name:"Game Gear",IconURL:"https://static.retroachievements.org/assets/images/system/gg.png"},16:{Name:"GameCube",IconURL:"https://static.retroachievements.org/assets/images/system/gc.png"},17:{Name:"Atari Jaguar",IconURL:"https://static.retroachievements.org/assets/images/system/jag.png"},18:{Name:"Nintendo DS",IconURL:"https://static.retroachievements.org/assets/images/system/ds.png"},19:{Name:"Wii",IconURL:"https://static.retroachievements.org/assets/images/system/wii.png"},20:{Name:"Wii U",IconURL:"https://static.retroachievements.org/assets/images/system/wiiu.png"},21:{Name:"PlayStation 2",IconURL:"https://static.retroachievements.org/assets/images/system/ps2.png"},22:{Name:"Xbox",IconURL:"https://static.retroachievements.org/assets/images/system/xbox.png"},23:{Name:"Magnavox Odyssey 2",IconURL:"https://static.retroachievements.org/assets/images/system/mo2.png"},24:{Name:"Pokemon Mini",IconURL:"https://static.retroachievements.org/assets/images/system/mini.png"},25:{Name:"Atari 2600",IconURL:"https://static.retroachievements.org/assets/images/system/2600.png"},26:{Name:"DOS",IconURL:"https://static.retroachievements.org/assets/images/system/dos.png"},27:{Name:"Arcade",IconURL:"https://static.retroachievements.org/assets/images/system/arc.png"},28:{Name:"Virtual Boy",IconURL:"https://static.retroachievements.org/assets/images/system/vb.png"},29:{Name:"MSX",IconURL:"https://static.retroachievements.org/assets/images/system/msx.png"},30:{Name:"Commodore 64",IconURL:"https://static.retroachievements.org/assets/images/system/c64.png"},31:{Name:"ZX81",IconURL:"https://static.retroachievements.org/assets/images/system/zx81.png"},32:{Name:"Oric",IconURL:"https://static.retroachievements.org/assets/images/system/oric.png"},33:{Name:"SG-1000",IconURL:"https://static.retroachievements.org/assets/images/system/sg1k.png"},34:{Name:"VIC-20",IconURL:"https://static.retroachievements.org/assets/images/system/vic-20.png"},35:{Name:"Amiga",IconURL:"https://static.retroachievements.org/assets/images/system/amiga.png"},36:{Name:"Atari ST",IconURL:"https://static.retroachievements.org/assets/images/system/ast.png"},37:{Name:"Amstrad CPC",IconURL:"https://static.retroachievements.org/assets/images/system/cpc.png"},38:{Name:"Apple II",IconURL:"https://static.retroachievements.org/assets/images/system/a2.png"},39:{Name:"Saturn",IconURL:"https://static.retroachievements.org/assets/images/system/sat.png"},40:{Name:"Dreamcast",IconURL:"https://static.retroachievements.org/assets/images/system/dc.png"},41:{Name:"PlayStation Portable",IconURL:"https://static.retroachievements.org/assets/images/system/psp.png"},42:{Name:"Philips CD-i",IconURL:"https://static.retroachievements.org/assets/images/system/cd-i.png"},43:{Name:"3DO Interactive Multiplayer",IconURL:"https://static.retroachievements.org/assets/images/system/3do.png"},44:{Name:"ColecoVision",IconURL:"https://static.retroachievements.org/assets/images/system/cv.png"},45:{Name:"Intellivision",IconURL:"https://static.retroachievements.org/assets/images/system/intv.png"},46:{Name:"Vectrex",IconURL:"https://static.retroachievements.org/assets/images/system/vect.png"},47:{Name:"PC-8000/8800",IconURL:"https://static.retroachievements.org/assets/images/system/8088.png"},48:{Name:"PC-9800",IconURL:"https://static.retroachievements.org/assets/images/system/9800.png"},49:{Name:"PC-FX",IconURL:"https://static.retroachievements.org/assets/images/system/pc-fx.png"},50:{Name:"Atari 5200",IconURL:"https://static.retroachievements.org/assets/images/system/5200.png"},51:{Name:"Atari 7800",IconURL:"https://static.retroachievements.org/assets/images/system/7800.png"},52:{Name:"Sharp X68000",IconURL:"https://static.retroachievements.org/assets/images/system/x68k.png"},53:{Name:"WonderSwan",IconURL:"https://static.retroachievements.org/assets/images/system/ws.png"},54:{Name:"Cassette Vision",IconURL:"https://static.retroachievements.org/assets/images/system/ecv.png"},55:{Name:"Super Cassette Vision",IconURL:"https://static.retroachievements.org/assets/images/system/escv.png"},56:{Name:"Neo Geo CD",IconURL:"https://static.retroachievements.org/assets/images/system/ngcd.png"},57:{Name:"Fairchild Channel F",IconURL:"https://static.retroachievements.org/assets/images/system/chf.png"},58:{Name:"FM Towns",IconURL:"https://static.retroachievements.org/assets/images/system/fm-towns.png"},59:{Name:"ZX Spectrum",IconURL:"https://static.retroachievements.org/assets/images/system/zxs.png"},60:{Name:"Game & Watch",IconURL:"https://static.retroachievements.org/assets/images/system/g&w.png"},61:{Name:"Nokia N-Gage",IconURL:"https://static.retroachievements.org/assets/images/system/n-gage.png"},62:{Name:"Nintendo 3DS",IconURL:"https://static.retroachievements.org/assets/images/system/3ds.png"},63:{Name:"Watara Supervision",IconURL:"https://static.retroachievements.org/assets/images/system/wsv.png"},64:{Name:"Sharp X1",IconURL:"https://static.retroachievements.org/assets/images/system/x1.png"},65:{Name:"TIC-80",IconURL:"https://static.retroachievements.org/assets/images/system/tic-80.png"},66:{Name:"Thomson TO8",IconURL:"https://static.retroachievements.org/assets/images/system/to8.png"},67:{Name:"PC-6000",IconURL:"https://static.retroachievements.org/assets/images/system/pc-6000.png"},68:{Name:"Sega Pico",IconURL:"https://static.retroachievements.org/assets/images/system/pico.png"},69:{Name:"Mega Duck",IconURL:"https://static.retroachievements.org/assets/images/system/duck.png"},70:{Name:"Zeebo",IconURL:"https://static.retroachievements.org/assets/images/system/zeebo.png"},71:{Name:"Arduboy",IconURL:"https://static.retroachievements.org/assets/images/system/ard.png"},72:{Name:"WASM-4",IconURL:"https://static.retroachievements.org/assets/images/system/wasm4.png"},73:{Name:"Arcadia 2001",IconURL:"https://static.retroachievements.org/assets/images/system/a2001.png"},74:{Name:"Interton VC 4000",IconURL:"https://static.retroachievements.org/assets/images/system/vc4000.png"},75:{Name:"Elektor TV Games Computer",IconURL:"https://static.retroachievements.org/assets/images/system/elek.png"},76:{Name:"PC Engine CD/TurboGrafx-CD",IconURL:"https://static.retroachievements.org/assets/images/system/pccd.png"},77:{Name:"Atari Jaguar CD",IconURL:"https://static.retroachievements.org/assets/images/system/jcd.png"},78:{Name:"Nintendo DSi",IconURL:"https://static.retroachievements.org/assets/images/system/dsi.png"},79:{Name:"TI-83",IconURL:"https://static.retroachievements.org/assets/images/system/ti-83.png"},80:{Name:"Uzebox",IconURL:"https://static.retroachievements.org/assets/images/system/uze.png"},81:{Name:"Famicom Disk System",IconURL:"https://static.retroachievements.org/assets/images/system/fds.png"},100:{Name:"Hubs",IconURL:"https://static.retroachievements.org/assets/images/system/hubs.png"},101:{Name:"Events",IconURL:"https://static.retroachievements.org/assets/images/system/events.png"},102:{Name:"Standalone",IconURL:"https://static.retroachievements.org/assets/images/system/exe.png"}},u=({icon:e,label:t="",hint:s=""})=>`<p class="signed-icon" data-title="${s}">${e}${t}</p>`,p=e=>u({icon:w.cheevos,label:e,hint:kt.lang.cheevosCount}),v=e=>u({icon:w.points,label:e,hint:kt.lang.points}),E=e=>u({icon:w.retropoints,label:e,hint:kt.lang.retropoints}),f=e=>u({icon:w.rarity,label:e,hint:kt.lang.unlockRate}),_=e=>u({icon:w.retroRatio,label:e,hint:kt.lang.trueRatio}),y=e=>u({icon:w.date,label:e,hint:kt.lang.date}),T=e=>e?u({icon:w.time,label:e,hint:kt.lang.time}):"",A=e=>u({icon:w.rating,label:e,hint:kt.lang.gameRating}),S=e=>u({icon:w.platform(e),label:g[e].Name,hint:e}),b=e=>`<i>${e}</i>`,w={flag:'<i class="description-icon map-icon"></i>',time:b("⏰"),level:b("🚩"),points:b("💰"),retropoints:b("⚡️"),cheevos:b("⭐"),trueratio:b("💎"),players:b("👥"),date:b("📅"),rating:b("🔥"),rarity:b("📈"),retroRatio:b("💎"),cheevoType:e=>`<i class=" description-icon ${e??"none"}" data-title="[${e??"none"}]"></i> `,chat:'<i class="description-icon link_icon chat-icon"></i>',award:e=>e?`<i class="description-icon award-type__icon ${e}_icon"></i>`:"",favourite:'<i class="description-icon favourite_icon"></i>',apply:'<i class="description-icon link_icon apply-icon"></i>',search:'<i class="description-icon link_icon search-icon google_link"></i>',link:'<i class="description-icon link_icon ra-link_icon"></i>',platform:e=>`<img class="image-icon console-icon" src="${g[e].IconURL}">`},C={[d.KILLER]:'<i class="cheevo-genre__icon">💀</i>',[d.PACIFIST]:'<i class="cheevo-genre__icon">☮️</i>',[d.SCORE]:'<i class="cheevo-genre__icon">💲</i>',[d.TIMETRIAL]:'<i class="cheevo-genre__icon">⏳</i>',[d.NO_DEATH]:'<i class="cheevo-genre__icon">👼</i>',[d.NO_DAMAGE]:'<i class="cheevo-genre__icon">❤️</i>',[d.COLLECTOR]:'<i class="cheevo-genre__icon">👑</i>',[d.BOSSFIGHT]:'<i class="cheevo-genre__icon">😈</i>'};function I(e,t="gameTitle"){return e?.reduce(((e,s)=>{if(!s)return e;if(""==(s=s.toString()).trim())return e;const i=P[t](s);return e.push(i),e}),[]).join(" ")}const P={default:e=>L({text:e}),infoBadge:e=>L({text:e,classes:["badge_transparent"]}),selection:e=>L({text:e,classes:["badge_selection"]}),black:e=>L({text:e,classes:["badge_black"]}),gold:e=>L({text:e,classes:["badge_gold"]}),gameTitle:e=>L({text:e,classes:[e.toLowerCase().replace(/[\s\'\"\`]/g,"-")]}),gameGenre:e=>L({text:e,classes:["game-title_genre"]}),cheevoLevel:(e,t)=>`<div \n            class="${t?"target-level-badge":""} badge badge_gold" \n            data-title="${ui.lang.level}" >\n            ${w.flag}${e}\n        </div>`,difficultBadge:(e,t="")=>{if(""==e)return"";return`\n            <p class="badge difficult-badge__${e}" >\n                ${t} ${h[e]}\n                    </p >\n            `},hltbBadge:(e,t="")=>P.gold(`HLTB: ${e} `),buttonGenreBadge:(e,t)=>L({text:e,classes:["target-genre-badge","badge-bold","badge_gold","badge-button"],event:`onclick="${t}"`,dataProp:`data-genre="${e}"`})},L=({text:e,classes:t,hint:s,event:i,dataProp:n})=>`<i class="${["badge",...t].join(" ")}" ${s?`data-title="${s}"`:""} ${i||""} ${n||""}>${e.trim()}</i>`,D=e=>P.gold(e);const $=({event:e,onChange:t,id:s,checked:i,label:n,name:a,isRadio:o})=>`\n        <div class="${o?"radio":"checkbox"}-input_container">\n            <input ${[`type="${o?"radio":"checkbox"}"`,s&&`id="${s}"`,`name="${a||s}"`,e,t&&`onchange="${t}"`,i&&"checked"].filter(Boolean).join(" ")}\n            >\n            <label class="checkbox-input" ${s?`for="${s}"`:""}>\n                ${n}\n            </label>\n        </div>\n    `,R=({prefix:e,title:t,id:s,value:i,label:n,onChange:a,isNumber:o,isSearch:r,placeholder:l})=>`\n        <input ${[`type="${o?"number":r?"search":"text"}"`,(t||e)&&`data-title="${t||e}"`,'class="text-input"',s&&`id="${s}"`,void 0!==i&&`value="${i}"`,n&&`placeholder="${n}"`,a&&`onchange="${a}"`].filter(Boolean).join(" ")}\n        />\n    `,N=({id:e,label:t,selectValues:s})=>`\n        <button class="select-button" id="${e}" onclick="this.classList.toggle('extended'); event.stopPropagation();">\n            <div class="select-label">${t}</div>\n            <div class="select-menu">\n                ${s?.map((e=>(({name:e,checked:t,event:s,label:i,id:n,type:a})=>`<li class="context-menu_item">\n                    <input ${[n&&`id="${n}"`,`type="${a||"radio"}"`,e&&`name="${e}"`,t&&"checked",s].filter(Boolean).join(" ")}></input>\n                    <label class="context-menu_${a||"radio"}" for="${n}">\n                        ${i}\n                    </label>\n                </li>\n            `)(e))).join("\n")}\n            </div>\n        </button>\n    `,k=e=>{switch(e.type){case O.TEXT_INPUT:return R(e);case O.SEARCH_INPUT:return t=e,R({...t,isSearch:!0});case O.NUM_INPUT:return(e=>R({...e,isNumber:!0}))(e);case O.BUTTON:return(({event:e,onClick:t,label:s,id:i})=>`\n        <button ${[i&&`id="${i}"`,'class="button-input"',e,t&&`onclick="${t}"`].filter(Boolean).join(" ")}>\n            ${s}\n        </button>\n    `)(e);case O.CHECKBOX:return $(e);case O.STATEBOX:return(({state:e,type:t,value:s,id:i,event:n,label:a,sectionCode:o})=>`\n    <div \n        class="statebox statebox__container checkbox-input" \n        data-state="${e??0}" \n        data-value="${s}" \n        data-event="${n}"\n        id="${i+o}"\n        <p class="statebox__label">${a}</p>\n    </div>\n`)(e);case O.RADIO:return(e=>$({...e,isRadio:!0}))(e);case O.SELECTOR:return N(e);case O.GROUP:return(({label:e})=>`\n       <div class="group-header">${e}</div>\n    `)(e);case O.COLOR:return(({onChange:e,value:t,id:s,label:i})=>{const n=`const container = this.closest('.color-input__container');\n    if (container) container.style.setProperty('--color', this.value);\n     container.querySelector('.text-input').value = this.value;container.querySelector('.color-input').value = this.value;${e}`;return`\n        <div class="color-input__container" style="--color:${t}">\n            <div class="color-input__preview" onclick="this.nextElementSibling.click()"></div>\n            <input \n                type="color" \n                class="color-input" \n                onchange="${n}" \n                value="${t}" \n                id="${s}" \n                data-title="${i}" \n            />\n            ${R({title:i,label:t,value:t,onChange:n})}\n        </div>\n    `})(e);default:return`[${e.type} N/A]`}var t},O=Object.freeze({CHECKBOX:"checkbox",STATEBOX:"statebox",RADIO:"radio",NUM_INPUT:"number",TEXT_INPUT:"text",SEARCH_INPUT:"search",SELECTOR:"selector",BUTTON:"button",GROUP:"group",COLOR:"color"}),x=({menuItems:e,sectionCode:t="",isSubmenu:s=!1})=>{const i=document.createElement("ul");return i.className=s?"context-menu_item-menu context-submenu":"achievement_context-menu context-menu hidden",e.forEach((e=>{const s=e.hasOwnProperty("elements");let n=document.createElement("li");n.className=`context-menu_item ${s&&"expandable"}`,s?(n.innerHTML+=e.label,n.appendChild(x({menuItems:e.elements,isSubmenu:!0,sectionCode:t}))):n.innerHTML+=H[e.type](e),i.appendChild(n)})),i.addEventListener("contextmenu",(e=>e.stopPropagation())),i.addEventListener("mousedown",(e=>e.stopPropagation())),kt.AUTOCLOSE_CONTEXTMENU||i.addEventListener("click",(e=>e.stopPropagation())),i.querySelectorAll(".context-menu_statebox")?.forEach((e=>e.addEventListener("click",M))),i},H={[O.CHECKBOX]:({type:e,name:t,id:s,checked:i,event:n,label:a,sectionCode:o=""})=>`\n        <input \n            type="${e}" \n            name="${t||s}${o}" \n            id="${s}${o}" \n            ${n??""}\n            ${i?"checked":""} \n            ></input>\n        <label class="context-menu_${e}" for="${s}${o}">${a}</label>`,radio:e=>H.checkbox(e),statebox:({state:e,type:t,value:s,id:i,event:n,label:a,sectionCode:o=""})=>`\n        <div \n            class="context-menu_statebox" \n            data-state="${e??0}" \n            data-value="${s}" \n            data-event="${n}"\n            id="${i+o}"\n            <p class="statebox__label">${a}</p>\n        </div>\n    `,[O.NUM_INPUT]:({prefix:e,type:t,id:s,event:i,title:n,value:a,postfix:o,sectionCode:r=""})=>`\n        ${e}\n        <input \n            class="context-menu_${t}" \n            id="${s}-${r}" \n            type="number" \n            data-title="${n}" \n            value="${a??""}" \n            ${i||""} \n            onclick="event.stopPropagation()">\n                ${o??""} \n        </input>`,[O.TEXT_INPUT]:({prefix:e,type:t,id:s,event:i,title:n,value:a,postfix:o,sectionCode:r=""})=>`\n        ${e}\n        <input \n            class="context-menu_${t}" \n            id="${s}-${r}" \n            type="text" \n            data-title="${n}" \n            value="${a??""}" \n            ${i||""} \n            onclick="event.stopPropagation()">\n                ${o??""} \n        </input>`,range:({prefix:e,event:t,minRange:s,maxRange:i,value:n,id:a,sectionCode:o=""})=>`\n        ${e}\n        <input \n            class="slider" \n            id="${a}-${o}"\n            type="range" \n            ${t??""} \n            min="${s}" \n            max="${i}" \n            value="${n}">`,button:({type:e,id:t,sectionCode:s,event:i,label:n=""})=>`\n            <button \n                class="context-menu_${e}" \n                id="${t}-${s}" \n                ${i??""} \n                type="button"\n            >\n                ${n??"NOLABEL"}\n            </button>`};function M(e){const t=e.target,s=+t.dataset.state,i=1===s?-1:s+1,n=t.dataset.value;t.dataset.state=i,t.dataset.event&&new Function("event","state","filterName",t.dataset.event)(e,i,n)}const U=Object.freeze({AWARD:"award",CHEEVO:"cheevo",GAME:"game",STATS:"stats"}),G=e=>new Promise((t=>setTimeout(t,e))),B=e=>`https://media.retroachievements.org/Badge/${e}.png`,F=e=>`https://media.retroachievements.org${e}`,V=e=>`https://retroachievements.org/game/${e}`,W=e=>`https://retroachievements.org/achievement/${e}`,q=Object.freeze({MASTERED:"mastered",COMPLETED:"completed",BEATEN:"beaten",BEATEN_SOFTCORE:"beaten-softcore"});let z=[];function j(e){e.forEach((e=>{z.push(e),1===z.length&&K()}))}async function K(){const{fsAlertDuration:e,fsNewCheevo:t,fsNewAward:s}=Ft,{app:i}=kt,n=()=>P.default(kt.lang.casual),a=(e,t)=>{const{ImageIcon:s,FixedTitle:a}=e,{MASTERED:o,COMPLETED:r,BEATEN:l,BEATEN_SOFTCORE:c}=q,h={[o]:kt.lang.masteryUnlocked,[r]:`${kt.lang.masteryUnlocked} ${n()}`,[l]:kt.lang.gameBeaten,[c]:`${kt.lang.gameBeaten} ${n()}`};i.querySelectorAll(".fs-alert__container").forEach((e=>e.remove()));const d=document.createElement("div");return d.className="fs-alert__container",d.innerHTML=`\n            <div class="fs-alert__main-content">\n                <div class="fs-alert__border fs-alert__border-top"></div>\n                <div class="fs-alert__header">${h[t]}</div>\n                <div class="fs-alert__sub-border "></div>\n                <div class="fs-alert__image-container">\n                    <div class="fs-alert__light"></div>\n                    <img src="${F(s)}" alt="" class="fs-alert__image">\n                    <div class="fs-alert__blick"></div>\n                </div>\n                <div class="fs-alert__description">${a}</div>\n                <div class="fs-alert__border fs-alert__border-botton"></div>\n            </div>\n        `,d},o=({isHardcoreEarned:e,Title:t,BadgeName:s,Points:a,TrueRatio:o,rateEarned:r,rateEarnedHardcore:l,difficulty:c,Description:h})=>{i.querySelectorAll(".fs-alert__container").forEach((e=>e.remove()));const d=document.createElement("div");d.className="fs-alert__container";const m=e?kt.lang.achievementUnlocked:`${kt.lang.achievementUnlocked} ${n()}`;return d.innerHTML=`\n            <div class="fs-alert__main-content">\n                <div class="fs-alert__border fs-alert__border-top"></div>\n                <div class="fs-alert__header">${m}</div>\n                <div class="fs-alert__sub-border"></div>\n                <div class="fs-alert__image-container">\n                    <div class="fs-alert__light"></div>\n                    <img src="${B(s)}" alt="" class="fs-alert__image">\n                    <div class="fs-alert__blick"></div>\n                </div>\n                <div class="fs-alert__title">\n                    ${t}\n                </div>\n                <div class="fs-alert__border fs-alert__border-botton"></div>\n                <div class="fs-alert__description">\n                    ${h}\n                </div>\n            </div>\n        `,d};for(;z.length>0;){if(alert=z[0],alert.type===U.CHEEVO&&!t||alert.type===U.AWARD&&!s){z.shift();continue}let n;switch(alert.type){case U.AWARD:n=a(alert.value,alert.award);break;case U.CHEEVO:n=o(alert.value)}i.appendChild(n),await G(1e3*e).then((async()=>{n?.classList.add("hide-fs-alert"),await G(1e3)})).then((()=>{n?.remove(),z.shift()}))}}const X=16766720,Y=12632256,Z="https://taras240.github.io/retro-api/assets/img/overlay_sets/mario_q/q.png";async function J({message:e="",type:t,value:s,award:i,id:n}){const a=Ft.targetUser||Nt.USER_NAME,r=Ft.discordWebhook;if(!r)return;let l={};const c=xt.GAME_DATA;switch(t){case U.GAME:l=(e=>({header:`${a} has launched the game: \n${e.Title}`,description:`\n          Platform: ${e.ConsoleName}\n          Realeased: ${e.Released}\n          Achievements: ${e.NumAwardedToUserHardcore} / ${e.NumAchievements}\n          Points: ${e.earnedStats.hard.points} / ${e.earnedStats.soft.points} / ${e.totalPoints}\n          Retropoints:  ${e.earnedStats.hard.retropoints} / ${e.TotalRetropoints}\n        `,color:65280,url:V(e.ID),image:F(e.ImageIcon)}))(c);break;case U.AWARD:await G(2e3),l=((e,t)=>({header:`${a} has ${t.toUpperCase()} the game: \n${e.Title}`,description:`\n          Earned in: ${o(e.TimePlayed)}\n          Platform: ${e.ConsoleName}\n          Realeased: ${e.Released}\n          Achievements: ${e?.earnedStats?.hard.count} / ${e?.earnedStats?.soft.count} / ${e.NumAchievements}\n          Points: ${e.earnedStats.hard.points} / ${e.earnedStats.soft.points} / ${e.totalPoints}\n          Retropoints: ${e.earnedStats.hard.retropoints} / ${e.TotalRetropoints}\n        `,color:"beaten"==t||"mastered"==t?X:Y,url:V(e.ID),image:F(e.ImageIcon)}))(c,i);break;case U.CHEEVO:l=((e,t)=>{const s=Nt.aotw?.ID==t.ID,i=`${a} unlocked ${s?"'Achievement of the Week'":"cheevo"}${t.isHardcoreEarned?"":" (casual mode)"}: \n${t.Title}`,n=`\n        Game: [${e.Title}](${V(e.ID)})\n        Unlocked in: ${o(e.TimePlayed)}\n        Description: ${t.Description}\n        Points: ${t.Points}\n        Retropoints:  ${t.TrueRatio}\n        `;return{header:i,description:n,color:t.isHardcoreEarned?X:Y,url:W(t?.ID),image:t.prevSrc}})(c,s)}const h={username:"RETROCHEEVOS",avatar_url:Z,embeds:[{thumbnail:{url:l.image},title:l.header,url:l.url,color:l.color,description:l.description.replace(/\n[ \t]*/g,"\n"),footer:{text:"retrocheevos.vercel.app"},timestamp:(new Date).toISOString()}]};fetch(r,{body:JSON.stringify(h),headers:{"Content-Type":"application/json"},method:"POST"}).then((function(e){})).catch((function(e){console.log(e)}))}function Q(e,t){const s=new Blob([e],{type:"text/csv;charset=utf-8;"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`${t}.csv`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}const ee={completion:async function(){const e=await Ot.SAVED_COMPLETION_PROGRESS,t=e?.Results.map((e=>({Title:e.Title,ID:e.GameID,Platform:m[e.ConsoleID],Award:e.HighestAwardKind,AwardDate:e.HighestAwardDate&&new Date(e.HighestAwardDate).toLocaleString(),LastEarnedDate:e.MostRecentAwardedDate&&new Date(e.MostRecentAwardedDate).toLocaleString(),TotalAchievements:e.NumAchievements,EarnedAchievements:e.NumAwardedHardcore,EarnedAchievementsSoftcore:e.NumAwarded,PlayedTime:o(Nt.gamesDB[e.GameID]?.TimePlayed),Notes:Nt.gamformatTimeesDB[e.GameID]?.notes?.replace(/;|\n/g," ")})));if(!t||0==t.length)return;const s=[...Object.keys(t[0])],i=t.map((e=>[e.Title,e.ID,e.Platform,e.Award,e.AwardDate,e.LastEarnedDate,e.TotalAchievements,e.EarnedAchievements,e.EarnedAchievementsSoftcore,e.PlayedTime,e.Notes]));Q([s.join(";"),...i.map((e=>e.join(";")))].join("\n"),"completion")},wantToPlay:async function(){const e=await Ot.getWantToPlayGamesList({count:500}),t=e?.map((e=>({Title:e.Title,ID:e.ID,ConsoleName:m[e.ConsoleID],AchievementsPublished:e.AchievementsPublished}))),s=[...Object.keys(t[0])],i=t.map((e=>[e.Title,e.ID,e.ConsoleName,e.AchievementsPublished]));Q([s.join(";"),...i.map((e=>e.join(";")))].join("\n"),"wantToPlay")}};async function te({direction:e}){const t=localStorage.getItem("retroApiConfig"),s=JSON.parse(t);switch(s.apiWorker&&delete s.apiWorker.completionProgress,s.version=ui.VERSION,e){case"file":!function(e,t){const s=new Blob([JSON.stringify(e)],{type:"text/json;charset=utf-8;"}),i=URL.createObjectURL(s),n=document.createElement("a");n.href=i,n.download=`${t}.json`,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i)}(s,`RCSettings_v${s.version}`);break;case"clipboard":await async function(e){if(navigator.clipboard)await navigator.clipboard.writeText(e);else{const t=document.createElement("textarea");t.value=e,t.style.position="fixed",document.body.appendChild(t),t.focus(),t.select();try{document.execCommand("copy")}catch(e){console.error("Не вдалося скопіювати (fallback):",e)}document.body.removeChild(t)}}(t);break;case"discord":!function({jsonData:e,fileName:t,message:s}){const i=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),n=new FormData;n.append("file",i,`${t}.json`),n.append("payload_json",JSON.stringify({username:"RETROCHEEVOS",avatar_url:Z})),fetch(Ft.discordWebhook,{method:"POST",body:n}).then((e=>{if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);console.log("Файл відправлено успішно!")})).catch((e=>console.error("Помилка при відправці:",e)))}({jsonData:s,fileName:`RCSettings_v${s.version}`,message:"retrocheevos settings file"})}}function se({x:e,y:t,stickySection:s}){const{clientHeight:i,clientWidth:n}=s;let a=t,o=e;if(!1===Nt.ui.isWindowsSticky)return{newXPos:o,newYPos:a};const r=kt.STICK_TOLERANCE,l=kt.STICK_MARGIN,c=[{check:e=>Math.abs(t+i-e.offsetTop-e.clientHeight)<r,action:e=>a=e.offsetTop+e.clientHeight-i},{check:e=>Math.abs(t-e.offsetTop)<r,action:e=>a=e.offsetTop},{check:e=>Math.abs(t-e.offsetTop-e.clientHeight)<r,action:e=>a=e.offsetTop+e.clientHeight+l},{check:e=>Math.abs(t+i-e.offsetTop)<r,action:e=>a=e.offsetTop-i-l},{check:t=>Math.abs(e+n-t.offsetLeft-t.clientWidth)<r,action:e=>o=e.offsetLeft+e.clientWidth-n},{check:t=>Math.abs(e-t.offsetLeft)<r,action:e=>o=e.offsetLeft},{check:t=>Math.abs(e+n-t.offsetLeft)<r,action:e=>o=e.offsetLeft-n-l},{check:t=>Math.abs(e-t.offsetLeft-t.clientWidth)<r,action:e=>o=e.offsetLeft+e.clientWidth+l}];return document.querySelectorAll(".section").forEach((e=>{s!=e&&c.forEach((({check:t,action:s})=>t(e)&&s(e)))})),o=Math.abs(window.innerWidth-o-n)<r?window.innerWidth-n:o,o=Math.abs(o)<r?0:o,a=Math.abs(window.innerHeight-a-i)<r?window.innerHeight-i:a,a=Math.abs(a)<r?0:a,{newXPos:o,newYPos:a}}function ie(e,t){const s=t=>{!function(e,t,s,i){e.preventDefault();const n=e.clientX-t,a=e.clientY-s,{newXPos:o,newYPos:r}=se({x:n,y:a,stickySection:i});i.style.left=o+"px",i.style.top=r+"px"}(t,c,h,e)},i=e=>{e.preventDefault(),n(),a()},n=()=>{e.classList.remove("dragable"),o.removeEventListener("mousemove",s),o.removeEventListener("mouseup",i)},a=()=>{Nt.setNewPosition({id:e.id,xPos:e.style.left,yPos:e.style.top})},{app:o}=kt,{left:r,top:l}=e.getBoundingClientRect(),c=t.clientX-r,h=t.clientY-l;e.classList.add("dragable"),o.addEventListener("mousemove",s),o.addEventListener("mouseup",i)}const ne={top:"N",left:"W",right:"E",bottom:"S",topRight:"NE",topLeft:"NW",bottomRight:"SE",bottomLeft:"SW"};function ae({event:e,section:t,callback:s,resizeDirection:i=ne.bottomRight}){const{app:n}=kt,a=parseInt(window.getComputedStyle(t).minWidth??10);let o={startWidth:t.clientWidth,startHeight:t.clientHeight,windowTop:t.offsetTop,windowLeft:t.offsetLeft,startX:e.clientX,startY:e.clientY,minWidth:a};const r=e=>{t.classList.add("resized",`resised-${i}`),function(e,t,s,i=ne.bottomRight){let{startWidth:n,startHeight:a,windowLeft:o,windowTop:r,startX:l,startY:c,minWidth:h}=t;const d=o+n,m=r+a;let g=r,u=o,p=i.includes(ne.right)?e.clientX-l:l-e.clientX,v=i.includes(ne.bottom)?e.clientY-c:c-e.clientY,E=n,f=a;i.includes(ne.top)&&(g-=v);i.includes(ne.left)&&(u-=p);let{newXPos:_,newYPos:y}=se({x:u,y:g,stickySection:s});i.includes(ne.top)&&(v=m-y-a);i.includes(ne.left)&&(p=d-_-n);2===i.length?(E+=p,f+=v):["E","W"].includes(i)?E+=p:f+=v;let{newHeight:T,newWidth:A}=function({width:e,height:t,stickySection:s}){const{offsetTop:i,offsetLeft:n}=s;let a=e,o=t;if(!1===Nt.ui.isWindowsSticky)return{newWidth:a,newHeight:o};const{STICK_TOLERANCE:r,STICK_MARGIN:l}=kt,c=[{check:e=>Math.abs(i+t-e.offsetTop-e.clientHeight)<r,action:e=>o=e.offsetTop+e.clientHeight-i},{check:e=>Math.abs(i+t-e.offsetTop)<r,action:e=>o=e.offsetTop-i-l},{check:t=>Math.abs(n+e-t.offsetLeft-t.clientWidth)<r,action:e=>a=e.offsetLeft+e.clientWidth-n},{check:t=>Math.abs(n+e-t.offsetLeft)<r,action:e=>a=e.offsetLeft-n-l}];return document.querySelectorAll(".section").forEach((e=>{s!=e&&c.forEach((({check:t,action:s})=>t(e)&&s(e)))})),a=Math.abs(window.innerWidth-n-a)<r?window.innerWidth-n:a,o=Math.abs(window.innerHeight-i-o)<r?window.innerHeight-i:o,{newWidth:a,newHeight:o}}({width:E,height:f,stickySection:s});if(h>=A)return;s.style.width=`${A}px`,s.style.height=`${T}px`,s.style.left=_+"px",s.style.top=y+"px"}(e,o,t,i)},l=e=>{s&&s(),t.classList.remove("resized",`resised-${[i]}`),c(),h()},c=()=>{n.removeEventListener("mousemove",r),n.removeEventListener("mouseup",l)},h=()=>{Nt.setNewPosition({id:t.id,width:t.clientWidth,height:t.clientHeight,xPos:t.style.left,yPos:t.style.top})};n.addEventListener("mousemove",r),n.addEventListener("mouseup",l)}const oe=(e,t)=>{const{left:s,top:i,width:n,height:a}=t.getBoundingClientRect(),o=s,r=i,l=s+n,c=i+a,h=e.clientX-o<=5,d=l-e.clientX<=5,m=e.clientY-r<=5,g=c-e.clientY<=5;let u="";return m?u=ne.top:g&&(u=ne.bottom),h?u+=ne.left:d&&(u+=ne.right),u},re=(e,t,s)=>`\n    <button \n        class="${e?"game-props-button":"edit-cheevo-button"} header-button header-icon edit-icon"\n        data-title="${kt.lang.editPropsHint}" \n        ${e?"":`data-cheevo-id="${t}"`} \n        onclick="${s}">\n    </button>\n`,le=(e,t=[])=>`<button class="comments-button header-button header-icon chat-icon ${t.join(" ")}" data-title="${kt.lang.showCommentsHint}" onclick="${e}"></button>`,ce=e=>re(!0),he=(e,t)=>re(!1,e,t),de=e=>`<button class="header-button header-icon tweak-button tweak-icon" data-title="${kt.lang.widgetConfigHint}" onclick="${e}"></button>`,me=()=>`<button class="header-button header-icon  delete-icon delete-from-target" data-title="${kt.lang.removeFromTargetHint}"></button>`,ge=e=>`<button class="header-icon header-button close-icon" onclick="${e}" data-title="${kt.lang.close}"></button>`,ue=(e,t)=>`<button class="header-button header-icon sort-icon" id="${e}-sort-button" data-title="${kt.lang.sort}"></button>`,pe=(e,t)=>`<button class="header-button header-icon filter-icon" id="${e}-filter-button" data-title="${kt.lang.filter}"></button>`,ve=(e,t)=>`<button class="header-button header-icon external-icon" id="${e}-external_window-button" data-title="Open in external window"></button>`,Ee=e=>`<button class="header-button header-icon update-icon" data-title="${kt.lang.forceReloadHint}" onclick="${e}"></button>`,fe=e=>`\n        <button class="header-button header-icon fullscreen-button fullscreen-icon" data-title="${kt.lang.fullscreen}" onclick="${e}"></button>\n    `;class _e{widgetIcon={imageSource:"../assets/img/gamepad.svg",iconID:"widget-id",iconClass:"gamepad-icon",onChangeEvent:""};uiProps=new Proxy({},{get:(e,t)=>{const s=this.uiDefaultValues[t]??!0;return Nt.getUIProperty({sectionID:this.sectionID,property:t})??s},set:(e,t,s)=>{const i=this.uiValuePreprocessors[t];"function"==typeof i&&(s=i(s)),Nt.saveUIProperty({sectionID:this.sectionID,property:t,value:s});const n=this.uiSetCallbacks?.[t];return"function"==typeof n?n.call(this,s):this.setElementsValues(),!0}});uiDefaultValues={};uiSetCallbacks={};uiValuePreprocessors={};get VISIBLE(){return!this.section.classList.contains("hidden")&&!!Nt.ui[this.section?.id]}set VISIBLE(e){At.switchSectionVisibility({section:this.section,visible:e}),this.widgetIcon.element&&(this.widgetIcon.element.checked=e)}constructor(){}addEvents(){this.section.addEventListener("mousedown",(e=>{const t=oe(e,this.section);0===e.button&&(e.target.matches(".close-icon")?this.close():e.target.matches(".tweak-button")?this.contextMenuItems&&kt.settings.openSettings(this.contextMenuItems):e.target.matches(".resizer")||t?(this.section.classList.add("resized"),ae({event:e,section:this.section,resizeDirection:e.target.matches(".resizer")?ne.bottomRight:t,callback:this.resizeCallback})):e.target.closest(".header-container")&&ie(this.section,e))})),this.section.addEventListener("mousemove",(e=>{this.section.classList.remove(...Object.values(ne).map((e=>"hover-"+e)),"resize-hover","grab-hover");let t=oe(e,this.section);t?this.section.classList.add(`hover-${t}`,"resize-hover"):e.target.closest(".header-container")&&this.section.classList.add("grab-hover")})),this.section.addEventListener("mouseleave",(e=>{this.section.classList.remove(...Object.values(ne).map((e=>"hover-"+e)),"resize-hover")})),Array.isArray(this.contextMenuItems)&&this.section.addEventListener("contextmenu",(e=>{kt.showContextmenu({event:e,menuItems:this.contextMenuItems,sectionCode:this.CLONE_NUMBER||""})}))}addWidgetIcon(){const e=!1===Nt.ui?.[this.section?.id]?.hidden??!this.VISIBLE,{iconID:t,onChangeEvent:s,description:i,iconClass:n,badgeLabel:a}=this.widgetIcon,o=document.querySelector(".buttons-block__shortcuts"),r=document.createElement("div");r.classList.add("setting-radio-group"),r.innerHTML=`\n            <input type="checkbox" name="${t}" id="${t}" onchange="${s}" ${e?"checked":""}></input>\n            <label class="side-panel_input" data-title="${i}" for="${t}">\n                    <i class="side-panel__icon ${n}"></i>\n            </label>\n            <div class="side-panel__badge">\n                ${a?P.black(a):""}\n            </div>`,o.appendChild(r),this.widgetIcon.element=document.getElementById(t)}generateWidgetElement({classes:e,id:t,title:s,headerElementsHtml:i,contentClasses:n}){const a=document.createElement("section");return a.classList.add(...e),a.id=t,a.innerHTML=`\n            <div class="header-container">\n                <div class="header-icon ${this.widgetIcon.iconClass}"></div>\n                <h2 class="widget-header-text">${s}</h2>\n                ${i??""}\n                ${ge()}\n            </div>\n            <div class="${n?n.join(" "):"widget-content__container"}"></div>\n            <div class="resizer">\n            </div>`,a}open(){}close(){this.VISIBLE=!1}}const ye=Object.freeze({PROGRESSION:"progression",MISSABLE:"missable",WIN:"win_condition"});const Te={earned:({DateEarnedHardcore:e})=>e,earnedSoftcore:({DateEarned:e,DateEarnedHardcore:t})=>!t&&e,notEarned:({DateEarnedHardcore:e,DateEarned:t})=>!e&&!t,missable:({Type:e})=>e===ye.MISSABLE,progression:({Type:e})=>e===ye.PROGRESSION||e===ye.WIN,typeless:e=>!Te.progression(e)&&!Te.missable(e),all:()=>!0,genre:({genres:e,genre:t})=>e?.includes(t),level:({level:e},{targetLevel:t})=>parseInt(e)===parseInt(t),leveless:({level:e})=>!e},Ae=Object.freeze({UNLOCKED:"earned",UNLOCKED_SOFT:"earnedSoftcore",MISSABLE:"missable",PROGRESSION:"progression"}),Se="all",be="genre";async function we({container:e,itemClassName:t,sortMethod:s,reverse:i,strictMode:n=!1,animationDuration:a}){const o=[...e.querySelectorAll(t)].sort(((e,t)=>s(e.dataset,t.dataset,i,n)));a?await async function(e,t,s=500){const i=[...e.children],n=new Map;i.forEach((e=>{n.set(e,e.getBoundingClientRect())})),t.forEach((t=>e.appendChild(t))),t.forEach((async(e,t)=>{e.style.zIndex=1e3-t,setTimeout((()=>e.style.removeProperty("z-index")),s+100);const i=n.get(e),a=e.getBoundingClientRect(),o=i.left-a.left,r=i.top-a.top;e.style.transform=`translate(${o}px, ${r}px)`,e.style.transition="transform 0s",e.offsetHeight,e.style.transition=`transform ${s}ms`,e.style.transform=""})),await G(s+100)}(e,o,a):(e.innerHTML="",o.forEach((t=>{e.appendChild(t)})))}function Ce(e){return new Date(e)}const Ie={latestHardcore:(e,t,s=1,i=!1)=>{if(e.DateEarnedHardcore||t.DateEarnedHardcore){const s=e.DateEarnedHardcore?Ce(e.DateEarnedHardcore):-1/0;return(t.DateEarnedHardcore?Ce(t.DateEarnedHardcore):-1/0)-s}return Ie.latest(e,t)},latest:(e,t,s=1,i=!1)=>{const n=e.DateEarnedHardcore?Ce(e.DateEarnedHardcore):e.DateEarned?Ce(e.DateEarned):0,a=t.DateEarnedHardcore?Ce(t.DateEarnedHardcore):t.DateEarned?Ce(t.DateEarned):0;return i&&n*a==0&&n+a!==0?a?1:-1:(a-n)*s},raLatest:(e,t,s=1,i)=>Ie.latest(e,t,-1,!0)*s,earnedCount:(e,t,s=1)=>(t.NumAwardedHardcore-e.NumAwardedHardcore)*s,unlockRate:(e,t,s=1)=>Ie.earnedCount(e,t,s),rarest:(e,t,s=1)=>Ie.earnedCount(e,t,s),points:(e,t,s=1)=>(e.Points-t.Points)*s,truepoints:(e,t,s=1)=>(e.TrueRatio-t.TrueRatio)*s,trueRatio:(e,t,s=1)=>(e.TrueRatio/e.Points-t.TrueRatio/t.Points)*s,default:(e,t,s=1)=>0!=e.DisplayOrder?(e.DisplayOrder-t.DisplayOrder)*s:Ie.unlockRate(e,t,s),id:(e,t)=>e.ID-t.ID,disable:(e,t)=>0,level:(e,t,s,i=!1)=>!i||e.level&&t.level||!e.level&&!t.level?e.level||t.level?e.level?t.level?(e.level-t.level)*s:-1*s:1*s:i?0:Ie.default(e,t,s):t.level?1:-1,timeToUnlock:(e,t,s,i=!1)=>!i||e.timeToUnlock&&t.timeToUnlock||!e.timeToUnlock&&!t.timeToUnlock?e.timeToUnlock||t.timeToUnlock?e.timeToUnlock?t.timeToUnlock?(e.timeToUnlock-t.timeToUnlock)*s:-1*s:1*s:i?0:Ie.difficulty(e,t,s):t.timeToUnlock?1:-1,difficulty:(e,t,s)=>{let i=e.difficulty-t.difficulty;return 0==i&&(i=t.NumAwardedHardcore-e.NumAwardedHardcore),i*s},rating:(e,t)=>t.Rating-e.Rating,achievementsCount:(e,t)=>parseInt(e.NumAchievements)-parseInt(t.NumAchievements),title:(e,t)=>{let s=e.FixedTitle.toUpperCase(),i=t.FixedTitle.toUpperCase();return s<i?-1:s>i?1:0},award:(e,t)=>{const s={mastered:5,completed:4,"beaten-hardcore":3,"beaten-softcore":2,started:1},i=s[t.Award]??0,n=s[e.Award]??0,a=new Date(t.MostRecentAwardedDate),o=new Date(e.MostRecentAwardedDate);return i-n!=0?i-n:a-o},date:(e,t)=>(e.Date?Ce(e.Date):-1/0)-(t.Date?Ce(t.Date):-1/0)},Pe=Object.freeze({TIME_TO_UNLOCK:"timeToUnlock",UNLOCK_DATE:"latest",UNLOCK_DATE_RA:"raLatest",TRUE_RATIO:"trueRatio",DIFFICULTY:"difficulty",UNLOCK_RATE:"unlockRate",POINTS:"points",TRUE_POINTS:"truepoints",DEFAULT:"default",LEVEL:"level"}),Le="latest",De="points",$e="default",Re="date";function Ne({container:e,itemClassName:t,filters:s,isHide:i}){const n=e.querySelectorAll(t),a=s&&Object.values(s)?.filter((e=>1==e?.state)),o=s&&Object.values(s)?.filter((e=>-1==e?.state));n.forEach((e=>e.classList.remove("hidden","removed")));a?.length>0&&n.forEach((e=>e.classList.add("hidden",i?"removed":"f"))),a?.forEach((e=>{n.forEach((t=>{Te[e.filterName]({...t.dataset,...e})&&t.classList.remove("hidden","removed")}))})),o?.forEach((e=>{n.forEach((t=>{Te[e.filterName](t.dataset)&&t.classList.add("hidden",i?"removed":"f")}))}))}const ke=Object.freeze({UNLOCK_STATUS:"unlockStatus",TYPE:"type",LEVEL:"level"});async function Oe({container:e,element:t,scrollByX:s=!0,scrollByY:i=!0}){if(!e||!t)return;const n=e.getBoundingClientRect(),a=t.getBoundingClientRect(),o=a.top-n.top+e.scrollTop-e.clientHeight/2+t.offsetHeight/2,r=a.left-n.left+e.scrollLeft-e.clientWidth/2+t.offsetWidth/2;e.scrollTo({top:i?o:e.scrollTop,left:s?r:e.scrollLeft,behavior:"smooth"}),await G(600)}const xe="border",He={DISABLED:"disabled",BLUR:"blur",GRAYSCALE:"grayscale",OPACITY:"opacity"};class Me extends _e{widgetIcon={description:"cheevos widget",iconClass:"achievements-icon"};filters={};get contextMenuItems(){return[{label:kt.lang.style,elements:[{type:O.CHECKBOX,id:"context-show-load-anim",label:kt.lang.showLoadAnimation,checked:this.uiProps.showLoadAnimation,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.showLoadAnimation = this.checked"`},{type:O.CHECKBOX,id:"context-show-mario",label:kt.lang.unlockAnimation,checked:this.uiProps.showMario,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.showMario = this.checked"`},{type:O.CHECKBOX,id:"context_autoscroll-achieves",label:kt.lang.autoscroll,checked:this.uiProps.autoscroll,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.autoscroll = this.checked;"`},{type:O.CHECKBOX,id:"context_stretch-achieves",label:kt.lang.stretch,checked:this.uiProps.stretchAchievements,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.stretchAchievements = this.checked;"`},{prefix:kt.lang.minSize,postfix:"px",type:O.NUM_INPUT,id:"context-menu_min-size",label:kt.lang.minSize,value:this.uiProps.ACHIV_MIN_SIZE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.ACHIV_MIN_SIZE = this.value;"`,onChange:`ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.ACHIV_MIN_SIZE = this.value;`},{prefix:kt.lang.maxSize,postfix:"px",type:O.NUM_INPUT,id:"context-menu_max-size",label:kt.lang.maxSize,value:this.uiProps.ACHIV_MAX_SIZE,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.ACHIV_MAX_SIZE = this.value;"`,onChange:`ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.ACHIV_MAX_SIZE = this.value;`}]},{label:kt.lang.elements,elements:[{label:kt.lang.showHeader,type:O.CHECKBOX,id:"context_hide-achivs-header",checked:this.uiProps.showHeader,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.showHeader = this.checked;"`},{label:kt.lang.showBackground,type:O.CHECKBOX,id:"context_show-bg",checked:this.uiProps.bgVisibility,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.bgVisibility = this.checked;"`}]},{label:kt.lang.overlay,elements:[{type:O.CHECKBOX,id:"context-hide-unearned",label:kt.lang.showOverlay,checked:this.uiProps.showPrevOverlay,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.showPrevOverlay = this.checked"`},...Object.values(He).map((e=>({type:O.RADIO,name:`${this.sectionID}-context-preview-filter`,id:`${this.sectionID}-context-preview-filter-${e}`,label:e,checked:this.uiProps.lockedPreviewFilter===e,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.lockedPreviewFilter = '${e}';"`})))]},this.contextSortMenu(),this.contextFilterMenu(),{label:kt.lang.groupBy,elements:[{type:O.CHECKBOX,id:"context-grouping",label:kt.lang.groupElements,checked:this.uiProps.isGrouping,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.isGrouping = this.checked;"`},...Object.values(ke).map((e=>({type:O.RADIO,name:`${this.sectionID}-context-group`,id:`${this.sectionID}-context-group-${e}`,label:kt.lang[e],value:e,checked:this.uiProps.groupBy===e,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.groupBy = '${e}';"`}))),{type:O.CHECKBOX,id:"context-grouping-title",label:kt.lang.showCheevosGroupTitle,checked:this.uiProps.showGroupHeader,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.showGroupHeader = this.checked;"`}]}]}contextSortMenu=()=>({label:kt.lang.sort,elements:[...Object.values(Pe).map((e=>({type:O.RADIO,name:`${this.sectionID}-context-sort`,id:`${this.sectionID}-context-sort-${e}`,label:kt.lang[e],checked:this.uiProps.sortName===e,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.sortName = '${e}';"`}))),{type:O.CHECKBOX,id:"context-reverse-sort",label:kt.lang.reverse,checked:-1==this.uiProps.reverseSort,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.reverseSort = this.checked"`},{type:O.CHECKBOX,id:"context-strict-sort",label:kt.lang.strictMode,checked:this.uiProps.strictSort,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.strictSort = this.checked"`}]});contextFilterMenu=()=>({label:kt.lang.filter,elements:[...Object.values(Ae).map((e=>({type:O.STATEBOX,name:`${this.sectionID}-context-filter`,id:`${this.sectionID}-context-filter-${e}`,label:kt.lang[e],value:e,state:`${this.uiProps.filters[e]?.state??0}`,event:`ui.achievementsBlock[${this.CLONE_NUMBER}].setFilter({ state, filterName })`}))),{type:O.CHECKBOX,id:"context-hide-filtered",label:kt.lang.hideFiltered,checked:this.uiProps.hideFiltered,event:`onchange="ui.achievementsBlock[${this.CLONE_NUMBER}].uiProps.hideFiltered = this.checked;"`}]});uiDefaultValues={showHeader:!0,overlayType:xe,ACHIV_MIN_SIZE:60,ACHIV_MAX_SIZE:128,stretchAchievements:!1,isGrouping:!1,groupBy:ke.UNLOCK_STATUS,autoscroll:!0,showPrevOverlay:!0,showMario:!0,showLoadAnimation:!1,showGroupHeader:!0,sortName:Le,reverseSort:1,strictSort:!1,filterBy:Se,hideFiltered:!1,reverseFilter:!1,lockedPreviewFilter:He.GRAYSCALE};uiSetCallbacks={ACHIV_MIN_SIZE(e){this.fitSizeVertically()},ACHIV_MAX_SIZE(e){this.fitSizeVertically()},isGrouping(e){this.groupCheevos()},groupBy(){this.groupCheevos()},showGroupHeader(e){this.groupCheevos()},autoscroll(e){e?this.startAutoScroll():this.stopAutoScroll()},showPrevOverlay(e){this.container.querySelectorAll(".achiv-block").forEach((t=>t.classList.toggle("overlay",e)))},sortName(e){this.applySorting()},reverseSort(){this.applySorting()},strictSort(){this.applySorting()},filterBy(e){this.applyFiltering()},hideFiltered(e){this.applyFiltering()},lockedPreviewFilter(){this.setElementsValues()}};uiValuePreprocessors={ACHIV_MIN_SIZE:e=>e<=10?10:e,ACHIV_MAX_SIZE:e=>e<=20?20:e,reverseSort:e=>e?-1:1};get SECTION_NAME(){return 0===this.CLONE_NUMBER?"achievements_section":`achievements_section-${this.CLONE_NUMBER}`}get CLONE_NUMBER(){return this._cloneNumber}set CLONE_NUMBER(e){this._cloneNumber=e?.length?e.length:0,this.widgetIcon={...this.widgetIcon,iconID:`side-panel__cheevos-${this.CLONE_NUMBER}`,onChangeEvent:`ui.achievementsBlock[${this.CLONE_NUMBER}].VISIBLE = this.checked`}}constructor(e=!1){super(),this.CLONE_NUMBER=kt.achievementsBlock,this.isClone=e,this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=this.generateNewWidget({}),this.sectionID=this.section.id,document.querySelector(".wrapper").appendChild(this.section),this.container=this.section.querySelector(".achievements-container"),this.resizer=this.section.querySelector(`#achivs-resizer${this.CLONE_NUMBER}`),this.resizeCallback=()=>this.fitSizeVertically(!0)}addEvents(){super.addEvents(),this.section.querySelector(`#${this.SECTION_NAME}-filter-button`).addEventListener("click",(e=>{kt.showContextmenu({event:e,menuItems:this.contextFilterMenu().elements,sectionCode:this.SECTION_NAME})})),this.section.querySelector(`#${this.SECTION_NAME}-sort-button`).addEventListener("click",(e=>{kt.showContextmenu({event:e,menuItems:this.contextSortMenu().elements,sectionCode:this.SECTION_NAME})})),new Sortable(this.container,{group:{name:"cheevos",pull:"clone",push:"false"},animation:100,chosenClass:"dragged",onEnd:()=>kt.addEvents()})}setElementsValues(){this.section.classList.toggle("hide-bg",!this.uiProps.bgVisibility),this.section.classList.toggle("compact",!this.uiProps.showHeader),this.container.style.alignContent=this.uiProps.stretchAchievements?"space-around":"start",this.container.style.justifyContent=this.uiProps.stretchAchievements?"space-around":"center",this.section.dataset.previewFilter=this.uiProps.lockedPreviewFilter}setValues(){At.applyPosition({widget:this}),this.setElementsValues(),Nt.ui[this.SECTION_NAME]&&(this.section.style.top=Nt.ui[this.SECTION_NAME].y??"0px",this.section.style.left=Nt.ui[this.SECTION_NAME].x??"0px",this.section.style.height=Nt.ui[this.SECTION_NAME].height??"600px",this.section.style.width=Nt.ui[this.SECTION_NAME].width??"350px"),this.uiProps.autoscroll&&this.startAutoScroll(),this.filters=Nt.getUIProperty({sectionID:this.section.id,property:"filters"})??{}}parseGameAchievements(e){(()=>{this.container.innerHTML=""})(),(e=>{Object.values(e.Achievements).forEach((e=>{const t=this.generateAchievement(e);this.container.appendChild(t)})),this.groupCheevos()})(e),this.fitSizeVertically(),this.applyFiltering(),this.applySorting({animation:0}),this.uiProps.showLoadAnimation&&this.doLoadAnimation(),this.startAutoScroll()}generateAchievement(e){const t=document.createElement("li");var s;return s=this,t.classList.add("achiv-block"),t.classList.toggle("start-load-anim",s.uiProps.showLoadAnimation),t.classList.toggle("overlay",s.uiProps.showPrevOverlay),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isHardcoreEarned),t.classList.toggle("rare",e.difficulty>7),t.dataset.achivId=e.ID,t.dataset.Points=e.Points,t.dataset.TrueRatio=e.TrueRatio,e.TrueRatio>50&&(t.dataset.rarity="normal"),e.TrueRatio>150&&(t.dataset.rarity="rare"),e.TrueRatio>300&&(t.dataset.rarity="mythycal"),t.dataset.DisplayOrder=e.DisplayOrder,t.dataset.Type=e.Type,t.dataset.difficulty=e.difficulty,e.level&&(t.dataset.level=e.level),t.dataset.NumAwardedHardcore=e.NumAwardedHardcore,e.DateEarnedHardcore&&(t.dataset.DateEarnedHardcore=e.DateEarnedHardcore),e.DateEarned&&(t.dataset.DateEarned=e.DateEarned),t.dataset.timeToUnlock=e.timeToUnlock,t.innerHTML=`\n        <div class="preview-container">\n          <img class="achiv-preview" src="${e.prevSrc}"  alt="${e.Title} icon"/>\n          <div class="prev-lock-overlay"></div>\n        </div>\n        `,t}fitSizeVertically(e=!1){const{section:t,container:s,sectionID:i}=this;let n,a;s.style.flex="1",e||!Nt.getUIProperty({sectionID:i,property:"height"})?(n=s.clientHeight,a=s.clientWidth):(n=parseInt(Nt.ui[this.SECTION_NAME].height)-t.querySelector(".header-container").clientHeight,a=parseInt(Nt.ui[this.SECTION_NAME].width)),s.style.flex="";const o=s.querySelectorAll(".achiv-block:not(.removed)").length;if(0===o)return;let r=Math.floor(Math.sqrt(a*n/o));do{r--,this.section.style.setProperty("--achiv-height",r+"px"),t.offsetHeight}while(s.scrollHeight>s.offsetHeight&&r>this.uiProps.ACHIV_MIN_SIZE);if(r=r<this.uiProps.ACHIV_MIN_SIZE?this.uiProps.ACHIV_MIN_SIZE:r>this.uiProps.ACHIV_MAX_SIZE?this.uiProps.ACHIV_MAX_SIZE:r,s.scrollHeight>s.offsetHeight+2){const e=1,t=~~(s.offsetWidth/(+r+1)),i=s.offsetWidth/t-(t-1)*e;r=i-r<r?~~i:r}this.section.style.setProperty("--achiv-height",r+"px")}autoscrollInterval={};async updateEarnedAchieves({earnedAchievementIDs:e}){await G(100),this.stopAutoScroll();for(let t of e){const e=xt.CHEEVOS[t],s=this.container.querySelector(`.achiv-block[data-achiv-id="${t}"]`);this.uiProps.showMario?(await Oe({container:this.container,element:s,scrollByX:!1}),await this.marioAction(s,e)):(s.classList.add("earned"),s.classList.toggle("hardcore",e.isHardcoreEarned)),await G(100),e.DateEarnedHardcore&&(s.dataset.DateEarnedHardcore=e.DateEarnedHardcore),s.dataset.DateEarned=e.DateEarned}this.container.scrollTo({top:0,left:0,behavior:"smooth"}),await G(500),this.applyFiltering(),await this.applySorting(),await G(2e3),this.startAutoScroll()}async marioAction(e,t){const s=t.isHardcoreEarned,i=document.createElement("div");i.classList.add("mario__container","stand"),this.container.appendChild(i);const n=i.getBoundingClientRect().width,a=e?.getBoundingClientRect(),o={xPos:a.left,yPos:a.top+n},r=2*n,l=a.left>window.innerWidth/2,c={xPos:l?window.innerWidth+n:-n,yPos:o.yPos+r},h=70;let d=Math.sqrt(20*r);i.style.top=c.yPos+"px",i.style.left=c.xPos+"px";const m=()=>{const i=document.createElement("div");i.classList.add("coin__container");const n=s?t.TrueRatio+"RP":t.Points+"SP";i.innerHTML=`\n                <div class='coins__points'>+${n}</div>\n                <div class='coins__coin'></div>\n            `,this.section.appendChild(i),this.section.classList.add("focus"),i.style.top=a.top-a.height/2+"px",i.style.left=o.xPos+"px",e?.classList.add("earned","mario-dumb"),e?.classList.toggle("hardcore",s),setTimeout((()=>e?.classList.remove("mario-dumb")),500),setTimeout((()=>{i.remove(),this.section.classList.remove("focus")}),5e3)};await(async()=>{let e=c.xPos;for(i.classList.remove("stand"),i.classList.add("walk"),i.classList.toggle("to-left",l),i.style.setProperty("--frame-duration","70ms");e!==o.xPos;)l?(e-=20,e<o.xPos&&(e=o.xPos)):(e+=20,e>o.xPos&&(e=o.xPos)),i.style.left=e+"px",await G(h);i.classList.remove("walk"),i.classList.add("stand"),await G(500)})(),await(async()=>{i.classList.remove("stand"),i.classList.add("jump");let e=c.yPos;for(;~~d>0;)e-=d,d-=10,e<o.yPos?(e=o.yPos-2,i.style.top=e+"px"):(i.style.top=e+"px",await G(h));for(m(),d=0;e<c.yPos;)e+=d,d+=10,e>c.yPos&&(e=c.yPos),i.style.top=e+"px",await G(h);i.classList.remove("jump"),i.classList.add("stand"),await G(500),i.classList.toggle("to-left",!l),await G(500)})(),await(async()=>{let e=i.getBoundingClientRect().left;for(i.style.setProperty("--frame-duration","52.5ms"),i.className=`mario__container walk ${l?"":"to-left"} `;e!==c.xPos;)l?(e+=20,e>c.xPos&&(e=c.xPos)):(e-=20,e<c.xPos&&(e=c.xPos)),i.style.left=e+"px",await G(52.5)})(),i.remove(),await G(100)}startAutoScroll(e=!0){clearTimeout(this.autoscrollInterval.timeout),clearInterval(this.autoscrollInterval.interval);let t=this.container,s=1;this.uiProps.autoscroll&&(this.autoscrollInterval.interval=setInterval((()=>{t.scrollHeight-t.clientHeight<=10&&this.stopAutoScroll(),e?(t.scrollTop+=s,t.scrollTop+t.clientHeight>=t.scrollHeight&&(clearInterval(this.autoscrollInterval.interval),this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(!1)),15e3))):(t.scrollTop-=s,0===t.scrollTop&&(clearInterval(this.autoscrollInterval.interval),this.autoscrollInterval.timeout=setTimeout((()=>this.startAutoScroll(!0)),15e3)))}),50),t.addEventListener("mouseenter",(()=>{s=0})),t.addEventListener("mouseleave",(()=>{s=1})))}stopAutoScroll(){clearInterval(this.autoscrollInterval.interval),clearTimeout(this.autoscrollInterval.timeout)}isAllEarnedAchievesVisible(){let e=!0;return this.container.querySelectorAll(".earned").forEach((t=>{!this.isAchieveVisible(t)&&(e=!1)})),e}isAchieveVisible(e){let t=!0;const s=this.container.getBoundingClientRect().top,i=this.container.getBoundingClientRect().height,n=e.getBoundingClientRect().top-s,a=e.getBoundingClientRect().top-s+e.getBoundingClientRect().height;return(n<0||a>i)&&(t=!1),t}highlightCurrentLevel(e){[...this.container.querySelectorAll(".achiv-block")].forEach((t=>{if(t.classList.remove("highlight"),t.dataset.level==e&&t.classList.add("highlight"),!Number.isInteger(e)){const s=parseInt(e);t.dataset.level==s&&t.classList.add("highlight")}}))}async applySorting(e={animation:500}){await we({container:this.container,itemClassName:".achiv-block",sortMethod:Ie[this.uiProps.sortName],reverse:this.uiProps.reverseSort,strictMode:this.uiProps.strictSort,animationDuration:this.uiProps.isGrouping?0:e.animation}),this.groupCheevos()}applyFiltering(){Ne({container:this.container,itemClassName:".achiv-block",filters:this.filters,isHide:this.uiProps.hideFiltered}),this.groupCheevos()}setFilter({filterName:e,state:t,type:s,event:i}){0===t?delete this.filters[e]:this.filters[e]={filterName:e,state:t},Nt.saveUIProperty({sectionID:this.section.id,property:"filters",value:this.filters}),this.applyFiltering()}doLoadAnimation(){const e=this.container,t=e.querySelectorAll(".achiv-block");const s=e=>new Promise((t=>setTimeout(t,e)));setTimeout((()=>function(){const i=e.scrollHeight;e.style.setProperty("--top-position",-i+"px");let n=0;[...t].reverse().forEach((async e=>{const t=100*n+200;!e.classList.contains("removed")&&n++;const i=t+1e3;e.style.setProperty("--load-delay",t+"ms"),e.classList.add("start-load-anim"),await s(50),e.classList.add("show-load-anim"),await s(i+500),e.classList.remove("show-load-anim","start-load-anim")}))}()),0)}generateNewWidget({}){const e=document.createElement("section");return e.id=`${this.SECTION_NAME}`,e.classList.add("achivs","section"),e.style.width=Nt.ui.achievements_section?.width??"350px",e.style.height=Nt.ui.achievements_section?.height??"650px",e.innerHTML=`\n        <div class="header-container achievements-header_container">\n          <div class="header-icon achievements-icon">\n          </div>\n          <h2 class="widget-header-text achivs-header-text">${kt.lang.cheevosSectionName}${0===this.CLONE_NUMBER?"":" ~"}</h2>\n            ${pe(this.SECTION_NAME)}\n            ${ue(this.SECTION_NAME)}\n            ${de()}\n            ${ge()}\n        </div>\n        <ul class="achievements-container content-container"></ul>\n        <div class="resizer"></div>\n      `,e}groupCheevos(){const e=(e,t,s,...i)=>{const n=[...s].filter((e=>t(e.dataset,...i)));if(0===n.length)return;const a=document.createElement("div");a.classList.add("cheevos__group"),a.classList.toggle("compact",!this.uiProps.showGroupHeader),a.innerHTML=`\n                <div class="cheevos__group-header"><h3 class="cheevos__group-title">${e}</h3></div>\n                <div class="cheevos__group-container"></div>\n                </div>\n            `,this.container.appendChild(a),n.forEach((e=>a.querySelector(".cheevos__group-container").appendChild(e)))},t=e=>{e.forEach((e=>this.container.appendChild(e))),this.fitSizeVertically()},s=this.container.querySelectorAll(".achiv-block");if(this.container.innerHTML="",this.uiProps.isGrouping){switch(this.uiProps.groupBy){case"unlock_status":case ke.UNLOCK_STATUS:e(kt.lang.earned,Te.earned,s),e(kt.lang.earnedSoftcore,Te.earnedSoftcore,s),e(kt.lang.locked,Te.notEarned,s);break;case ke.TYPE:e(kt.lang.progression,Te.progression,s),e(kt.lang.missable,Te.missable,s),e(kt.lang.other,Te.typeless,s);break;case ke.LEVEL:const t=[...s].map((({dataset:e})=>Number(e.level))).filter((e=>!Number.isNaN(e))),i=Math.max(0,...t),n=Math.min(0,...t),{zones:a}=xt.GAME_DATA,o=a?.length>2;for(let t=n;t<=i;t++)e(`Level: ${o?a[t-1]:t}`,Te.level,s,{targetLevel:t});e(kt.lang.other,Te.leveless,s)}this.fitSizeVertically()}else t(s)}}class Ue extends _e{widgetIcon={iconClass:"info-icon"};constructor(e){super(),this.generatePopupElement(e),this.initializeElements(),this.addEvents(),this.VISIBLE=!0,At.applyPosition({widget:this})}generatePopupElement({id:e,classList:t=[],title:s,content:i}){this.close(e);const n=document.createElement("section");n.classList.add("popup-section","section",...t),n.id=e,n.innerHTML=`\n            <div class="header-container">\n                <div class="header-icon ${this.widgetIcon.iconClass}"></div>\n                <h2 class="widget-header-text">${s}</h2>\n                ${ge()}\n            </div>\n            <div class="widget-content__container">\n                ${i}\n            </div>\n            <div class="resizer"></div>`,this.section=n,kt.app.appendChild(n)}initializeElements(){}addEvents(){super.addEvents(),this.section.addEventListener("click",(e=>{if(e.target.matches(".comment__copy-button")){const t=e.target.parentElement?.innerText;navigator.clipboard.writeText(t||"")}else if(e.target.matches(".comment__note-button")){const t=e.target.parentElement?.innerText,s=xt.GAME_DATA?.ID||"main";let i=Nt.gamesDB[s]?.notes??"";i+="\n-----------------\n"+t+"\n-----------------\n",kt.note.saveNoteValue({id:s,value:i.trim()}),kt.note.switchActiveTab(),kt.note.switchActiveTab()}}))}close(e){e?document.querySelector(`#${e}`)?.remove():super.close()}}async function Ge(e,t=2){const s=await(Ot?.getComments({id:e,type:t}))||[];let i="";i=s.length>0?`\n            <ul class="comments-list scrollable">\n                ${s.map((e=>`\n                    <li class="comment">\n                        <div class="comment__header">\n                            <h3 class="comment__user-name">${e.User}</h3>\n                            <div class="comment__date">${Fe(e)}</div>\n                        </div>\n                        <div class="comment__comment">\n                          <button data-title="copy to clipboard" class="icon-button description-icon copy-icon comment__copy-button"></button>\n                          <button data-title="copy to note" class="icon-button description-icon note-icon comment__note-button"></button>\n                          ${Be(e)}\n                        </div>\n                    </li>\n                `)).join("\n")}\n            </ul>`:'<h2 style="width: 100%;padding: 1rem; font-size: 2rem; text-align:center">No comments yet</h2>';new Ue({title:(1===t?"Game":2===t?"Cheevo":"User")+" comments",content:i,id:`comments_type-${t}`})}const Be=({CommentText:e})=>e?.replace(/\bhttp(?:s)*:\/\/[^\s]*\b/g,(e=>`<a href='${e}' target='_blank'>${e}</a>`)),Fe=({Submitted:e})=>new Date(e).toLocaleString();function Ve(){const e=e=>[{label:kt.lang.title,elements:[{type:"text",title:kt.lang.cheevoTitleHint,id:"cheevo-props-title",value:e?.Title??""}]},{label:kt.lang.description,elements:[{type:"text",title:kt.lang.cheevoDescrHint,id:"cheevo-props-description",value:e?.Description??""}]},{label:kt.lang.genre,elements:[{type:"text",title:kt.lang.editGenreHint,id:"cheevo-props-genres",value:e?.genres?.join(",")??""}]},{label:kt.lang.levelName,elements:[{type:"text",title:kt.lang.levelNameHint,id:"cheevo-props-zonename",value:e?.zone??""}]},{label:kt.lang.levelNumber,elements:[{type:"number",title:kt.lang.editlevelHint,id:"cheevo-props-level",value:e?.level??""}]},{elements:[{id:"reset-cheevo-props",label:kt.lang.resetData,type:"button"},{id:"save-cheevo-props",label:kt.lang.saveData,type:"button"}]}];let t;const s=(e,t)=>{Object.keys(e).length>0?Nt.cheevosDB[t]=e:delete Nt.cheevosDB[t],Nt.writeConfiguration()},i=(e,i)=>{e.querySelector("#save-cheevo-props")?.addEventListener("click",(()=>((e,t)=>{const i=t.ID,n=Ot.gameData?.Achievements[i],a=(e=>({Title:e.querySelector("#cheevo-props-title")?.value,Description:e.querySelector("#cheevo-props-description")?.value,zone:e.querySelector("#cheevo-props-zonename")?.value,level:e.querySelector("#cheevo-props-level")?.value,genres:e.querySelector("#cheevo-props-genres").value?.length>1?e.querySelector("#cheevo-props-genres").value.split(","):[]}))(e);Object.keys(a).forEach((e=>{xt.CHEEVOS[i][e]=a[e],a[e]==n[e]&&delete a[e]})),s(a,i),xt.resetCheevo(i)})(e,i))),e.querySelector("#reset-cheevo-props")?.addEventListener("click",(()=>(async(e,i)=>{const a=i.ID,o=Ot.gameData?.Achievements[a];xt.CHEEVOS[a].Title=o.Title,xt.CHEEVOS[a].Description=o.Description,xt.CHEEVOS[a].zone=o.zone,xt.CHEEVOS[a].level=o.level,xt.CHEEVOS[a].genres=o.genres||[],s({},a),xt.resetCheevo(a),t?.section?.remove(),n(o)})(0,i)))},n=s=>{var n;t=new Ue({title:s?.Title,content:(n=e(s),`\n        <ul class="game-props__list flex-column-list">\n        ${n.map((e=>`\n            <li class="game-props__item">${e.label??""}\n                ${e.elements.map((e=>k(e))).join("\n")}\n            </li>\n        `)).join("\n")}\n        </ul>\n    `),id:"cheevo-data-popup",classList:["game-data__section"]}),i(t.section,s)};return{open:n}}class We extends _e{sectionCode="-target";widgetIcon={description:"target widget",iconID:"side-panel__target",onChangeEvent:"ui.target.VISIBLE = this.checked",iconClass:"target-icon"};filters={};externalWindow;get contextMenuItems(){return[{label:kt.lang.style,elements:[{label:kt.lang.showBackground,type:O.CHECKBOX,id:"context_hide-target-bg",checked:!this.uiProps.hideBg,event:'onchange="ui.target.uiProps.hideBg = !this.checked;"'},{type:O.CHECKBOX,id:"context_fixed-count-switcher",label:kt.lang.fixedSize,checked:this.uiProps.isFixedSize,event:'onchange="ui.target.uiProps.isFixedSize = this.checked;"'},{prefix:kt.lang.cheevosCount,postfix:"",type:O.NUM_INPUT,id:"context-fixed-count",label:kt.lang.cheevosCount,value:this.uiProps.fixedSizeCount,event:'onchange="ui.target.uiProps.fixedSizeCount = this.value;"',onChange:"ui.target.uiProps.fixedSizeCount = this.value;"},{type:O.CHECKBOX,id:"context_autoscroll-target",label:kt.lang.autoscroll,checked:this.uiProps.autoscroll,event:'onchange="ui.target.uiProps.autoscroll = this.checked;"'},{type:O.CHECKBOX,id:"context_contrast-highlight-target",label:kt.lang.contrastHighlight,checked:this.uiProps.contrastHighlight,event:'onchange="ui.target.uiProps.contrastHighlight = this.checked;"'}]},{label:kt.lang.overlay,elements:[{type:O.CHECKBOX,id:"context-show-overlay",label:kt.lang.showOverlay,checked:this.uiProps.showPrevOverlay,event:'onchange="ui.target.uiProps.showPrevOverlay = this.checked"'},...Object.values(He).map((e=>({type:O.RADIO,name:`${this.sectionID}-context-preview-filter`,id:`${this.sectionID}-context-preview-filter-${e}`,label:e,checked:this.uiProps.lockedPreviewFilter===e,event:`onchange="ui.target.uiProps.lockedPreviewFilter = '${e}';"`})))]},{label:kt.lang.elements,elements:[{label:kt.lang.showHeader,type:O.CHECKBOX,id:"context_hide-target-header",checked:this.uiProps.showHeader,event:'onchange="ui.target.uiProps.showHeader = this.checked;"'},{type:O.CHECKBOX,id:"context-show-genre-badge",label:kt.lang.showGenreBadges,checked:this.uiProps.showGenre,event:'onchange="ui.target.uiProps.showGenre = this.checked;"'},{type:O.CHECKBOX,id:"context-show-level",label:kt.lang.showLevel,checked:this.uiProps.showLevel,event:'onchange="ui.target.uiProps.showLevel = this.checked"'},{type:O.CHECKBOX,id:"context-show-events-checkbox",label:kt.lang.showEvents,checked:this.uiProps.showEvents,event:'onchange="ui.target.uiProps.showEvents = this.checked"'},{type:O.CHECKBOX,id:"context_progression-bar",label:kt.lang.showCheevoUnlockRateBar,checked:this.uiProps.showCheevoUnlockRateBar,event:'onchange="ui.target.uiProps.showCheevoUnlockRateBar = this.checked;"'}]},this.contextSortMenu(),this.contextFilterMenu(),{label:kt.lang.level_test,elements:[{type:O.CHECKBOX,id:"context-hide-passed-levels",label:kt.lang.hidePassedLevels,checked:this.uiProps.hidePassedLevels,event:'onchange="ui.target.uiProps.hidePassedLevels = this.checked;"'},{type:O.CHECKBOX,id:"context-highlight-passed",label:kt.lang.highLightPassedLevels,checked:this.uiProps.highlightPassedLevels,event:'onchange="ui.target.uiProps.highlightPassedLevels = this.checked;"'}]},{label:kt.lang.data,elements:[{type:O.BUTTON,id:"context-fill",label:kt.lang.fillAll,event:'onclick="ui.target.fillItems()"'},{type:O.CHECKBOX,id:"context-autofill",label:kt.lang.autofill,checked:this.uiProps.autoFillTarget,event:'onchange="ui.target.uiProps.autoFillTarget = this.checked;"'},{type:O.BUTTON,id:"context-clear-all",label:kt.lang.clearAll,event:'onclick="ui.target.clearAllAchivements();"'},{type:O.CHECKBOX,id:"context-autoclear",label:kt.lang.autoclearEarned,checked:this.uiProps.autoClearTarget,event:'onchange="ui.target.uiProps.autoClearTarget = this.checked;"'},{prefix:kt.lang.clearDelay,postfix:"sec",type:O.NUM_INPUT,id:"context-autoclear-delay",label:kt.lang.clearDelay,value:this.uiProps.autoClearTargetTime,event:'onchange="ui.target.uiProps.autoClearTargetTime = this.value;"',onChange:"ui.target.uiProps.autoClearTargetTime = this.value;"}]}]}contextSortMenu=()=>({label:kt.lang.sort,elements:[...Object.values(Pe).map((e=>({type:O.RADIO,name:`${this.sectionID}-context-sort`,id:`${this.sectionID}-context-sort-${e}`,label:kt.lang[e],checked:this.uiProps.sortName===e,event:`onchange="ui.target.uiProps.sortName = '${e}';"`}))),{type:O.CHECKBOX,id:"context-reverse-sort",label:kt.lang.reverse,checked:-1==this.uiProps.reverseSort,event:'onchange="ui.target.uiProps.reverseSort = this.checked"'},{type:O.CHECKBOX,id:"context-strict-sort",label:kt.lang.strictMode,checked:this.uiProps.strictSort,event:'onchange="ui.target.uiProps.strictSort = this.checked"'}]});contextFilterMenu=()=>({label:kt.lang.filter,elements:[...Object.values(Ae).map((e=>({type:O.STATEBOX,name:`${this.sectionID}-context-filter`,id:`${this.sectionID}-context-filter-${e}`,label:kt.lang[e],value:e,state:`${this.uiProps.filters[e]?.state??0}`,event:"ui.target.uiProps.filters = ({ state, filterName })"}))),{type:O.CHECKBOX,id:"context-hide-filtered",label:kt.lang.hideFiltered,checked:this.uiProps.hideFiltered,event:'onchange="ui.target.uiProps.hideFiltered = this.checked;"'}]});uiDefaultValues={isFixedSize:!1,fixedSizeCount:2,showHeader:!0,hideBg:!1,showCheevoUnlockRateBar:!1,autoClearTarget:!1,autoFillTarget:!0,autoClearTargetTime:5,autoscroll:!1,showDifficult:!0,showLevel:!0,showGenre:!0,hidePassedLevels:!1,highlightPassedLevels:!0,showEvents:!1,reverseSort:1,strictSort:!1,sortName:$e,filters:{},hideFiltered:!1,lockedPreviewFilter:He.OPACITY,showPrevOverlay:!0,contrastHighlight:!1};uiSetCallbacks={autoscroll(e){e?this.startAutoScroll():this.stopAutoScroll()},showLevel(e){this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-level",e)))},showGenre(e){this.container.querySelectorAll(".target-achiv").forEach((t=>t.classList.toggle("show-genre",e)))},reverseSort(e){this.applySort()},sortName(){this.applySort()},strictSort(){this.applySort()},filters(){this.applyFilter()},hideFiltered(){this.filterByGenre(this.genreFilter,!0)},lockedPreviewFilter(){this.setElementsValues()},showPrevOverlay(){this.setElementsValues()},contrastHighlight(){this.setElementsValues()}};uiValuePreprocessors={newAchivDuration:e=>e<=5||e>60?5:e,fixedSizeCount:e=>e<1?1:~~e,autoClearTargetTime:e=>e<0?0:+e,reverseSort:e=>e?-1:1,filters({filterName:e,state:t}){const s=kt.target.uiProps.filters;return 0===t?delete s[e]:s[e]={filterName:e,state:t},s}};constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues(),this.showAotwEvent({cheevo:Nt.aotw})}initializeElements(){this.section=document.querySelector("#target_section"),this.sectionID=this.section.id,this.header=document.querySelector(".target-header_container"),this.container=document.querySelector(".target-container"),this.searchInput=this.section.querySelector("#target__searchbar")}generateWidget(){const e="target_section",t=`\n            ${pe(e)}\n            ${ue(e)}\n            ${de()}\n            <input type="search" name="" id="target__searchbar" class="text-input target__search-bar" placeholder="${kt.lang.search}">\n            ${ve(e)}\n        `,s={classes:["target_section","section","compact-header"],id:e,title:kt.lang.targetSectionName,headerElementsHtml:t,contentClasses:["target-container","content-container","flex-main-list"]},i=this.generateWidgetElement(s);kt.app.appendChild(i)}toggleExternalWindow(){const e=(e,t=250)=>{this.externalUpdateTimer&&clearTimeout(this.externalUpdateTimer),this.externalUpdateTimer=setTimeout((()=>e.apply(this)),t)},t=()=>{const t=new MutationObserver((t=>{e((()=>this.updateExternalWindow()))}));return t.observe(this.container,{childList:!0,characterData:!0,subtree:!0,attributes:!0}),t};if(this.externalWindow)this.externalWindow.close(),delete this.externalWindow,this.containerObserver?.disconnect(),this.externalUpdateTimer&&clearTimeout(externalUpdateTimer);else{this.externalUpdateTimer,this.externalWindow=window.open("","Target",`width=${this.section.offsetWidth},\n                height=${this.section.offsetHeight}`),this.externalWindow.document.write("\n            <html>\n              <head>\n                <title>Target Window</title>\n              </head>\n              <body></body>\n            </html>\n            "),this.externalWindow.document.close(),[...document.querySelectorAll('link[rel="stylesheet"], style')].forEach((e=>{this.externalWindow.document.head.appendChild(e.cloneNode(!0))}));const e=this.externalWindow.document.body,s=getComputedStyle(document.body);for(let t=0;t<s.length;t++){const i=s[t];if(i.startsWith("--")){const t=s.getPropertyValue(i);e.style.setProperty(i,t)}}e.innerHTML=`\n                <section style='height: 100%; display: flex'>\n                    ${this.container.outerHTML}\n                </section>`,this.containerObserver=t()}}updateExternalWindow(){if(!this.externalWindow)return;this.externalWindow.document.body.innerHTML=`\n                <section style='height: 100%; display: flex'>\n                    ${this.container.outerHTML}\n                </section>`}addEvents(){super.addEvents(),this.section.querySelector(`#${this.sectionID}-filter-button`)?.addEventListener("click",(e=>{kt.showContextmenu({event:e,menuItems:this.contextFilterMenu().elements,sectionCode:this.SECTION_NAME})})),this.section.querySelector(`#${this.sectionID}-sort-button`)?.addEventListener("click",(e=>{kt.showContextmenu({event:e,menuItems:this.contextSortMenu().elements,sectionCode:this.SECTION_NAME})})),this.section.querySelector(`#${this.sectionID}-external_window-button`).addEventListener("click",(e=>{kt.target.toggleExternalWindow()})),this.container.addEventListener("click",(e=>{if(e.target.closest(".comments-button")){const t=e.target.closest(".target-achiv")?.dataset.achivId;t&&Ge(t,2)}else if(e.target.matches(".edit-cheevo-button")){const t=e.target.dataset.cheevoId,s=xt.CHEEVOS[t];s&&Ve().open(s)}else if(e.target.matches(".delete-from-target")){const t=e.target.closest(".target-achiv");kt.target.deleteFromTarget(t)}}));var e,t;e=this.container,t=e=>{kt.target.addAchieveToTarget(e),this.section.querySelector(".achiv-block")?.remove()},new Sortable(e,{group:{name:"cheevos",pull:!1},animation:100,chosenClass:"dragged",onAdd:function(e){const s=e.item.dataset.achivId;t&&t(s)},onEnd:()=>kt.addEvents()}),this.searchInput?.addEventListener("input",this.searchInputEvent)}searchInputEvent(e){e.stopPropagation();[...kt.target.container.querySelectorAll(".target-achiv")].forEach((e=>{const t=e.dataset.achivId,s=e.querySelector(".achiv-description"),i=e.querySelector(".target__cheevo-header a");s&&(s.innerText=xt.CHEEVOS[t]?.Description),i&&(i.innerText=xt.CHEEVOS[t]?.Title)})),kt.target.applySort();const t=e.target.value;if(t&&(t.length>2||/\d+/.test(t))){(e=>{const t=new RegExp(`(${e})`,"gi");[...kt.target.container.querySelectorAll(".target-achiv")].reverse().forEach((e=>{const s=e.querySelector(".achiv-description"),i=e.querySelector(".target__cheevo-header a");i.innerText.match(t)&&(kt.target.moveToTop(s.closest(".target-achiv")),i.innerHTML=i.innerHTML.replace(t,(e=>`<span class="badge highlight-badge">${e}</span>`))),s.innerText.match(t)&&(kt.target.moveToTop(s.closest(".target-achiv")),s.innerHTML=s.innerHTML.replace(t,(e=>`<span class="badge highlight-badge">${e}</span>`)))}))})(t);const e=document.querySelector(".badge.highlight-badge");e&&e.scrollIntoView({behavior:kt.isCEF?"auto":"smooth",block:"center"})}}setElementsValues(){this.section.classList.toggle("show-events",this.uiProps.showEvents),this.section.classList.toggle("compact-header",!this.uiProps.showHeader),this.section.classList.toggle("hide-bg",this.uiProps.hideBg),this.section.classList.toggle("hide-passed",this.uiProps.hidePassedLevels),this.section.classList.toggle("highlight-passed",this.uiProps.highlightPassedLevels),this.section.classList.toggle("fixed-size",this.uiProps.isFixedSize),this.section.classList.toggle("show-progression-bar",this.uiProps.showCheevoUnlockRateBar),this.section.classList.toggle("show-overlay",this.uiProps.showPrevOverlay),this.container.style.setProperty("--max-count",this.uiProps.fixedSizeCount),this.section.dataset.previewFilter=this.uiProps.lockedPreviewFilter,this.section.classList.toggle("contrast-highlight",this.uiProps.contrastHighlight)}setValues(){At.applyPosition({widget:this}),this.setElementsValues(),this.startAutoScroll()}gameChangeEvent(e){this.genreFilter="",this.uiProps.autoClearTarget&&this.clearEarned(),this.uiProps.autoFillTarget&&this.fillItems()}async updateEarnedAchieves({earnedAchievementIDs:e}){const t=()=>{const e=document.createElement("div");return e.classList.add("target-unlock-anim"),e.innerHTML='\n                <div class="lines"></div>\n                <div class="lock"></div>\n            ',e},s=this.container.scrollTop;for(let s of e){const e=xt.CHEEVOS[s],i=this.container.querySelector(`.target-achiv[data-achiv-id='${s}']`);if(i){const s=t();await Oe({container:this.container,element:i,scrollByX:!1}),await G(600),i.classList.add("earned","show-hard-anim"),i.classList.toggle("hardcore",e?.isHardcoreEarned),e.isHardcoreEarned&&(i.dataset.DateEarnedHardcore=e.DateEarnedHardcore),i.dataset.DateEarned=e.DateEarned,i.appendChild(s),setTimeout((()=>{i.classList.remove("show-hard-anim"),s?.remove()}),2e3),await G(2100)}}this.container.scrollTo({top:s,behavior:"smooth"}),this.applyFilter(),this.applySort(),this.genreFilter&&this.filterByGenre(this.genreFilter,!0)}autoscrollInterval;startAutoScroll(e=!0){this.stopAutoScroll();let t=this.container,s=1;this.uiProps.autoscroll&&(this.autoscrollInterval=setInterval((()=>{t.scrollHeight-t.clientHeight<=10&&this.stopAutoScroll(),e?(t.scrollTop+=s,t.scrollTop+t.clientHeight>=t.scrollHeight&&(this.stopAutoScroll(),setTimeout((()=>this.startAutoScroll(!1)),2e3))):(t.scrollTop-=s,0===t.scrollTop&&(this.stopAutoScroll(),setTimeout((()=>this.startAutoScroll(!0)),2e3)))}),50),t.addEventListener("mouseenter",(()=>{s=0})),t.addEventListener("mouseleave",(()=>{s=1})))}stopAutoScroll(){clearInterval(this.autoscrollInterval)}isAchievementInTargetSection({ID:e,targetContainer:t=this.container}){return[...t.querySelectorAll(".target-achiv")].filter((t=>t.dataset.achivId==e)).length>0}addAchieveToTarget(e){if(this.isAchievementInTargetSection({ID:e}))return;const t=xt.CHEEVOS[e],s=document.createElement("li");(()=>{s.classList.add("target-achiv","main-column-item","right-bg-icon"),s.classList.add("border"),s.classList.add("overlay"),s.classList.add("show-difficult"),s.classList.toggle("show-level",this.uiProps.showLevel),s.classList.toggle("show-genre",this.uiProps.showGenre),s.classList.toggle("earned",t.isEarned),s.classList.toggle("hardcore",t.isHardcoreEarned),s.classList.toggle("rare",t.difficulty>7)})(),s.dataset.Type=t.Type,s.dataset.Points=t.Points,s.dataset.TrueRatio=t.TrueRatio,s.dataset.difficulty=t.difficulty,s.dataset.DisplayOrder=t.DisplayOrder,s.dataset.genres=t.genres?.join(","),t.DateEarnedHardcore&&(s.dataset.DateEarnedHardcore=t.DateEarnedHardcore),t.DateEarned&&(s.dataset.DateEarned=t.DateEarned),s.dataset.NumAwardedHardcore=t.NumAwardedHardcore,s.dataset.achivId=e,t.level&&(s.dataset.level=t.level),s.style.setProperty("--progression",100*t.NumAwardedHardcore/t.totalPlayers+"%"),s.dataset.timeToUnlock=t.timeToUnlock,(()=>{const i=t.level?.toString()?.split(".")[1],n=t.zone?i?`${t.zone} [${i}]`:t.zone:t.level?.toString()?.replace(".","-");s.innerHTML=`\n            <div class="target__buttons-container">\n                ${he(t.ID)}\n                ${le()}\n                ${me()}\n            </div>\n            <div class="prev">\n                <div class="prev-bg"></div>\n                <img\n                    class="prev-img"\n                    src="${t.prevSrc}"\n                    alt="${t.Title}"\n                />\n                <div class="prev-lock-overlay"></div>\n                <div class="target__cheevo-progression-container">\n                    <div class="target__cheevo-progression">\n                </div>\n            </div>\n            </div>\n            <div class="target__cheevo-details">\n                <h3 class="target__cheevo-header">\n                    ${n?P.cheevoLevel(n,!0):""}\n                    ${t.genres.length>0?t.genres?.map((e=>P.buttonGenreBadge(e,`ui.target.filterByGenre('${e}')`))).join(""):""}<a target="_blanc" data-title="${kt.lang.goToRAHint}" href="${W(e)}">\n                        ${t.Title} ${t.genres?.map((e=>C[e])).join("")}\n                    </a>\n                </h3>\n                <p class="achiv-description">${t.Description}</p>\n                <div class="target-other-descriptions icons-row-list">\n                    ${w.cheevoType(t.Type)}\n                    ${v(t.Points)}\n                    ${E(t.TrueRatio)}\n                    ${T(r(t.timeToUnlock))}\n                    ${f(t.rateEarnedHardcore)}\n                    ${_(t.retroRatio)}\n                    ${P.difficultBadge(t.difficulty)}\n                </div>\n            </div>\n            `})(),this.container.appendChild(s),this.isDynamicAdding||(this.applyFilter(),this.applySort()),this.delayedRemove()}refreshCheevo(e){this.container.querySelector(`.target-achiv[data-achiv-id="${e}"]`)?.remove(),this.addAchieveToTarget(e)}moveToTop(e){1==this.uiProps.reverseSort?this.container.prepend(e):this.container.append(e),this.applyFilter()}applyFilter(){Ne({container:this.container,itemClassName:".target-achiv",filters:this.uiProps.filters,isHide:this.uiProps.hideFiltered})}filterByGenre(e,t=!1){(()=>{this.container.querySelectorAll(".hidden").forEach((e=>e.classList.remove("hidden")))})(),!t&&this.genreFilter===e||!e?(this.genreFilter="",this.applyFilter()):(this.genreFilter=e,Ne({container:this.container,itemClassName:".target-achiv",filters:{...this.uiProps.filters,genre:{filterName:be,state:1,genre:e}},isHide:this.uiProps.hideFiltered}))}applySort(e={animation:500}){we({container:this.container,itemClassName:".target-achiv",sortMethod:Ie[this.uiProps.sortName],reverse:this.uiProps.reverseSort,strictMode:this.uiProps.strictSort,animationDuration:this.IS_GROUPING?0:e.animation})}highlightCurrentLevel(e){[...this.container.querySelectorAll(".target-achiv")].forEach((t=>{t.classList.remove("highlight"),t.classList.remove("passed");const s=t.dataset.level;if(s==e&&t.classList.add("highlight"),!Number.isInteger(e)){const s=parseInt(e);t.dataset.level==s&&t.classList.add("highlight")}Number.isInteger(+s)?s<parseInt(e)&&t.classList.add("passed"):s<e&&t.classList.add("passed")}))}deleteFromTarget(e){const t=e.closest(".target-achiv");t?.classList.add("removing"),setTimeout((()=>t?.remove()),0)}clearEarned(){this.container.querySelectorAll(".target-achiv").forEach((e=>{e.classList.contains("hardcore")&&e.remove()}))}clearAllAchivements(){this.container.innerHTML=""}delayedRemove(){this.uiProps.autoClearTarget&&this.container.querySelectorAll(".earned").forEach((e=>{setTimeout((()=>e.remove()),1e3*this.uiProps.autoClearTargetTime)}))}fillItems(){this.isDynamicAdding=!0,this.clearAllAchivements(),Object.keys(xt.CHEEVOS).forEach((e=>{this.addAchieveToTarget(e)})),this.applyFilter(),this.applySort(),this.isDynamicAdding=!1,Nt.aotw&&this.container.querySelector(`.target-achiv[data-achiv-id='${Nt.aotw?.ID}']`)?.classList.add("target__aotw")}async showAotwEvent({cheevo:e}){if(!e){const t=await Ot.getAotW();Nt.aotw=t,e=Nt.aotw}if(!e||e.wasShown)return;const t=100*e.UnlocksHardcoreCount/e.TotalPlayers;this.section.querySelector(".target__aotw-container")?.remove(),this.container.querySelector(`.target-achiv[data-achiv-id='${e.ID}']`)?.classList.add("target__aotw");const s=document.createElement("div");s.classList.add("target__aotw-container","target__aotw","show-difficult","show-level"),s.innerHTML=`\n        <button class="description-icon close-icon target__hide-aotw" \n          onclick=></button>\n        <div class="prev">\n          <img class="prev-img" src="${F(e.BadgeURL)}" alt=" ">\n        </div>\n        <div class="target__cheevo-details">\n          <h3 class="target__cheevo-header">\n            <a target="_blanc" href="${W(e.ID)}">\n              ${e.Title}\n            </a>\n            in\n            <a target="_blanc" href="${V(e.GameID)}">\n              ${e.GameTitle}\n            </a>\n          </h3>\n          <div class="achiv-description">\n          ${P.black("AotW Event")}\n            ${e.Description}\n          </div>\n          <div class="target-other-descriptions  icons-row-list">\n            ${w.cheevoType(e?.Type)}\n            ${v(e.Points)}\n            ${E(e.TrueRatio)}\n            ${f(t.toFixed(2)+"%")}\n            ${_((e.TrueRatio/Math.max(1,e.Points)).toFixed(2))}\n          </div>\n        </div>\n      `,this.section.querySelector(".target__aotw-container")?.remove(),this.section.insertBefore(s,this.container)}hideAotw(){this.section.querySelector(".target__aotw-container")?.remove(),Nt.aotw={...Nt?.aotw,wasShown:!0}}}function qe(){const e=e=>[{label:ui.lang.title,elements:[{type:"text",title:ui.lang.gameTitleHint,id:"game-props-title",value:e?.FixedTitle??""}]},{label:ui.lang.platform,elements:[{type:"text",title:ui.lang.platform,id:"game-props-platform",value:e?.ConsoleName??""}]},{label:ui.lang.genre,elements:[{type:"text",title:ui.lang.genre,id:"game-props-genre",value:e?.Genre??""}]},{label:ui.lang.timePlayed,elements:[{type:"number",title:ui.lang.timePlayed,id:"game-props-time",value:e?.TimePlayed??0}]},{elements:[{id:"reset-game-props",label:ui.lang.resetData,type:"button"},{id:"save-game-props",label:ui.lang.saveData,type:"button"}]}];let t;const s=(e,t)=>{Nt.gamesDB[t]=e,Nt.writeConfiguration()},i=(e,t)=>{const i=Ot.gameData,n=(e=>({FixedTitle:e.querySelector("#game-props-title")?.value,ConsoleName:e.querySelector("#game-props-platform")?.value,Genre:e.querySelector("#game-props-genre")?.value,TimePlayed:Number(e.querySelector("#game-props-time")?.value??0)}))(e);Object.getOwnPropertyNames(n).forEach((e=>{xt.GAME_DATA[e]=n[e],n[e]==i[e]&&delete n[e]})),s(n,t.ID),xt.reset()},n=(e,n)=>{e.querySelector("#save-game-props")?.addEventListener("click",(()=>i(e,n))),e.querySelector("#reset-game-props")?.addEventListener("click",(()=>(async(e,i)=>{const n=Ot.gameData;xt.GAME_DATA.FixedTitle=n.FixedTitle,xt.GAME_DATA.ConsoleName=n.ConsoleName,xt.GAME_DATA.Genre=n.Genre,s({TimePlayed:xt.GAME_DATA.TimePlayed},i.ID),xt.reset(),t?.section?.remove(),a(n)})(0,n)))},a=s=>{var i;t=new Ue({title:s?.FixedTitle,content:(i=e(s),`\n    <ul class="game-props__list flex-column-list">\n      ${i.map((e=>`\n          <li class="game-props__item">${e.label??""}\n              ${e.elements.map((e=>k(e))).join("\n")}\n          </li>\n      `)).join("\n")}\n    </ul>`),id:"game-data-popup",classList:["game-data__section"]}),n(t.section,s)};return{open:a}}function ze({container:e,textGenerator:t}){const s=e=>`<p class="infinite-line">${e}</p>`;let i;const n=()=>{i&&clearInterval(i),e.innerHTML=""};return{startScrolling:()=>{n(),(()=>{for(;e.scrollWidth/e.offsetWidth<2||e.querySelectorAll("p").length<3;)e.innerHTML+=s(t())})(),i=setInterval((()=>{e.scrollLeft++,(e=>e.scrollLeft)(e)+e.offsetWidth>=e.scrollWidth&&(e.querySelector(".infinite-line").remove(),e.scrollTo(e.scrollWidth,0),e.innerHTML+=s(t()))}),40)},stopScrolling:n}}function je(){const e={...xt.GAME_DATA?.earnedStats,user:Ft.targetUser||Nt.USER_NAME,...Object.fromEntries(Object.entries(xt.GAME_DATA).filter((([e,t])=>null===t||"object"!=typeof t)))},t="&nbsp;&nbsp;&middot;&nbsp;&nbsp;\n    ",s=`retrocheevos.vercel.app${t}`,i=`\n        ${e.user} is playing ${e.FixedTitle}${t}`,n=xt.GAME_DATA?[e.ConsoleName&&`Console: ${e.ConsoleName},`,e.Released&&`Released: ${e.Released},`,e.Developer&&`Developer: ${e.Developer},`,e.Publisher&&`Publisher: ${e.Publisher},`,e.Genre&&`Genre: ${e.Genre},`,e.NumDistinctPlayersCasual&&`Total RA Players: ${e.NumDistinctPlayersCasual},`,e.beatenRate&&`Beaten Rate: ${e.beatenRate}% (${e.beatenSoftRate}%),`,e.masteryRate&&`Mastery Rate: ${e.masteryRate}% (${e.completedRate}%),`,e.retroRatio&&`Retro Ratio: ${e.retroRatio},`,e.timeToBeat&&`Time to beat: ${r(e.timeToBeat)}`,e.timeToMaster&&`Time to master: ${r(e.timeToMaster)}`,e.gameDifficulty&&`Game Difficulty: ${h[e.gameDifficulty]} (${h[e.masteryDifficulty]})`,t].join("&nbsp;"):"Game ERROR",a=["Completion Progress: ",`${e.hard.count>0?e.hard.count+"/":""}${e.soft.count>e.hard.count?e.soft.count-e.hard.count+"/":""}${e.NumAchievements} achievements, `,`${e.hard.points>0?e.hard.points+"/":""}${e.soft.points>e.hard.points?e.soft.points-e.hard.points+"/":""}${e.totalPoints} points, `,`${e.hard.retropoints?e.hard.retropoints+"/":""}${e.TotalRetropoints} retropoints${t}`].join(" "),o=!!kt.statusPanel?.deltaStats?.deltaPoints,l=!!kt.statusPanel?.deltaStats,c=o?`${kt.statusPanel.deltaStats.deltaPoints} hardpoints and ${kt.statusPanel.deltaStats.deltaRetroPoints} retropoints`:`and ${kt.statusPanel?.deltaStats?.deltaSoftPoints} softpoints`,d=l?`Session statistics: +${kt.statusPanel.initialStats.cheevosCount} achievements, ${c}${t}`:"",m=kt.statusPanel?.currentStats||kt.statusPanel?.initialStats;return i+n+a+d+(m?`User statistics: position ${m?.rank} in RA rank system (TOP${m?.percentile.toFixed(2)}%), \n        ${m?.points} total hardpoints, \n        ${m?.retroPoints} total retropoints and\n        ${m?.softPoints} total softpoints\n        ${t}`:"")+s}class Ke extends _e{widgetIcon={description:"status widget",iconID:"side-panel__status",onChangeEvent:"ui.statusPanel.VISIBLE = this.checked",badgeLabel:"v1",iconClass:"status-icon"};get contextMenuItems(){return[{label:kt.lang.gameTime,elements:[{type:O.CHECKBOX,id:"context_show-time",label:kt.lang.showTimeBar,checked:this.uiProps.showTimeBar,event:'onchange="ui.statusPanel.uiProps.showTimeBar = this.checked;"'},{type:O.RADIO,name:"context_game-time",id:"context_show-playTime",label:kt.lang.gameTime,checked:"playTime"==this.uiProps.time,event:"onclick=\"ui.statusPanel.uiProps.time = 'playTime';\""},{type:O.RADIO,name:"context_game-time",id:"context_show-sessionTime",label:kt.lang.sessionGameTime,checked:"sessionTime"==this.uiProps.time,event:"onclick=\"ui.statusPanel.uiProps.time = 'sessionTime';\""},{type:O.RADIO,name:"context_game-time",id:"context_show-full-time",label:kt.lang.totalTime,checked:"totalSessionTime"==this.uiProps.time,event:"onclick=\"ui.statusPanel.uiProps.time = 'totalSessionTime';\""},{type:O.RADIO,name:"context_game-time",id:"context_show-timer",label:kt.lang.timer,checked:"timer"==this.uiProps.time,event:"onclick=\"ui.statusPanel.uiProps.time = 'timer';\""},{prefix:kt.lang.timer,postfix:kt.lang.min,type:O.NUM_INPUT,id:"context-menu_stats-timer-duration",label:kt.lang.timer,value:~~(this.uiProps.timerTime/60*100)/100,event:'onchange="ui.statusPanel.uiProps.timerTime = this.value;"',onChange:"ui.statusPanel.uiProps.timerTime = this.value;"}]},{label:kt.lang.elements,elements:[{type:O.CHECKBOX,id:"context_show-target-preview",label:kt.lang.focusCheevoPreview,checked:this.uiProps.showTargetPreview,event:'onchange="ui.statusPanel.uiProps.showTargetPreview = this.checked;"'},{type:O.RADIO,name:"context_description-variant-radio",id:"context_show-progression-description",label:kt.lang.progression,checked:"progression"===this.uiProps.statusDescriptionVariant,event:"onchange=\"ui.statusPanel.uiProps.statusDescriptionVariant = 'progression';\""},{type:O.RADIO,name:"context_description-variant-radio",id:"context_show-game-info-description",label:kt.lang.richPresence,checked:"gameInfo"===this.uiProps.statusDescriptionVariant,event:"onchange=\"ui.statusPanel.uiProps.statusDescriptionVariant = 'gameInfo';\""},{type:O.CHECKBOX,id:"context_show-mastery-rate",label:kt.lang.showMasteryRate,checked:this.uiProps.showMasteryRate,event:'onclick="ui.statusPanel.uiProps.showMasteryRate = this.checked;"'}]},{label:kt.lang.progressionStyleTypes,elements:[{type:O.RADIO,name:"context_progression-variant",id:"context_progression-variant-dots",label:kt.lang.dots,checked:"dots"===this.uiProps.progressionVariant,event:"onchange=\"ui.statusPanel.uiProps.progressionVariant = 'dots';\""},{type:O.RADIO,name:"context_progression-variant",id:"context_progression-variant-rects",label:kt.lang.rects,checked:"rects"===this.uiProps.progressionVariant,event:"onchange=\"ui.statusPanel.uiProps.progressionVariant = 'rects';\""}]},{label:kt.lang.alerts,elements:[{type:O.CHECKBOX,id:"context_show-new-cheevos",label:kt.lang.showAlerts,checked:this.uiProps.showNewAchiv,event:'onchange="ui.statusPanel.uiProps.showNewAchiv = this.checked;"'},{prefix:kt.lang.duration,postfix:kt.lang.sec,type:O.NUM_INPUT,id:"context-menu_stats-earned-duration",label:kt.lang.duration,value:this.uiProps.newAchivDuration,event:'onchange="ui.statusPanel.uiProps.newAchivDuration = this.value;"',onChange:"ui.statusPanel.uiProps.newAchivDuration = this.value;"},{type:O.CHECKBOX,id:"context_show-stats-alert",label:kt.lang.statsAlerts,checked:this.uiProps.showStatisticsAlert,event:'onchange="ui.statusPanel.uiProps.showStatisticsAlert = this.checked;"'}]},{type:O.CHECKBOX,id:"context_show-update-blink",label:kt.lang.showUpdateBlink,checked:this.uiProps.showUpdateBlink,event:'onchange="ui.statusPanel.uiProps.showUpdateBlink = this.checked;"'},{type:O.CHECKBOX,id:"context_hard-mode",label:kt.lang.hardcoreMode,checked:this.uiProps.hardMode,event:'onchange="ui.statusPanel.uiProps.hardMode = this.checked; ui.statusPanel.generateProgressionBlock()"'},{type:O.CHECKBOX,id:"context_game-bg",label:kt.lang.gameBg,checked:this.uiProps.showGameBg,event:'onchange="ui.statusPanel.uiProps.showGameBg = this.checked;"'}]}uiProps=new Proxy({},{get:(e,t)=>{const s=this.uiDefaultValues[t]??!0;return Nt.getUIProperty({sectionID:this.sectionID,property:t})??s},set:(e,t,s)=>{const i=this.uiValuePreprocessors[t];"function"==typeof i&&(s=i(s)),Nt.saveUIProperty({sectionID:this.sectionID,property:t,value:s});const n=this.uiSetCallbacks?.[t];return"function"==typeof n?n.call(this,s):this.setElementsValues(),!0}});uiDefaultValues={newAchivDuration:15,time:"playTime",timerTime:30,showTargetPreview:!1,progressionVariant:"dots",showMasteryRate:!0,showGameBg:!0,showTimeBar:!0,statusDescriptionVariant:"show-game-info",hardMode:!0,showNewAchiv:!0,showUpdateBlink:!0};uiSetCallbacks={showStatisticsAlert(){},showNewAchiv(){},time(){this.startStatsAnimation()},timerTime(){this.startStatsAnimation()},statusDescriptionVariant(e){const t={gameInfo:"show-game-info",progression:"show-game-progress"};Object.values(t).forEach((e=>this.section.classList.remove(e))),this.section.classList.add(t[e])},showTargetPreview(){this.generateProgressionBlock()},progressionVariant(){this.generateProgressionBlock()},showGameBg(){this.container.classList.toggle("game-bg",this.SHOW_GAME_BG)}};uiValuePreprocessors={newAchivDuration:e=>e<=5||e>60?5:e,timerTime:e=>e<=5||e>1e6?5:60*e};stats={userName:Ft.targetUser,gameTitle:xt.GAME_DATA?.Title??"Title",gamePlatform:xt.GAME_DATA?.ConsoleName??"Platform",richPresence:"Waiting...",imageSrc:F(xt.GAME_DATA?.ImageIcon),totalPoints:xt.GAME_DATA?.totalPoints??0,totalAchievesCount:xt.GAME_DATA?.NumAchievements??0,totalSoftpoints:0,earnedPoints:0,earnedAchievesCount:0,totalRetropoints:xt.GAME_DATA?.TotalRetropoints,earnedRetropoints:0,earnedSoftpoints:0,showStatisticsAlert:!0};awards={award:"",progressionAward:""};gameTimeInterval;getActiveTime=()=>{let e=0;switch(this.uiProps.time){case"playTime":e=xt.playTime.totalGameTime;break;case"sessionTime":e=xt.playTime.gameTime;break;case"totalSessionTime":e=xt.playTime.sessionTime,e=e<0?0:e;break;case"timer":e=this.uiProps.timerTime-xt.playTime.gameTime}return o(e,!0)};get statusTextValues(){const e={};return this.uiProps.time&&(e.gameTime=this.getActiveTime()),e}constructor(){super(),this.addWidgetIcon(),!Nt.ui.update_section&&(Nt.ui.update_section={}),this.initializeElements(),this.addEvents(),At.applyPosition({widget:this}),this.infiniteLine=ze({container:this.section.querySelector("#magic-line"),textGenerator:je}),setTimeout((()=>{this.fitFontSize()}),1e3)}initializeElements(){this.section=document.querySelector("#update-section"),this.sectionID=this.section.id,this.container=this.section.querySelector(".status__container"),this.guideLink=this.section.querySelector("#status-game-guide"),this.progresBar=this.section.querySelector("#status-progress-bar"),this.progresBarDelta=this.section.querySelector("#status_progress-bar-delta"),this.progressStatusText=this.section.querySelector("#status-progress-text"),this.resizer=this.section.querySelector("#status-resizer"),this.frontSide={container:this.section.querySelector(".status__front-side"),gamePreview:this.section.querySelector("#game-preview"),retroRatioElement:this.section.querySelector(".status__retro-ratio"),gameTitle:this.section.querySelector("#game-title"),gamePlatform:this.section.querySelector("#game-platform"),richPresence:this.section.querySelector("#rich-presence"),watchButton:this.section.querySelector("#watching-button"),sideBlock:this.section.querySelector(".status__sideblock-container"),iconsContainer:this.section.querySelector("#status__sideblock-icons")},this.backSide={container:this.section.querySelector(".status__back-side"),imgElement:this.section.querySelector("#update_achiv-preview"),titleElement:this.section.querySelector("#update_achiv-title"),descriptionElement:this.section.querySelector("#update_achiv-description"),badgesElement:this.section.querySelector("#update_achiv-earned-points")}}setElementsValues(){this.uiProps.statusDescriptionVariant=this.uiProps.statusDescriptionVariant,this.progressStatusText.innerText="";const e=xt.GAME_DATA.ImageIngame;this.container.style.setProperty("--bg-image",`url(${F(e)})`),(()=>{this.container.classList.toggle("show-game-ratio",this.uiProps.showMasteryRate),this.container.classList.toggle("game-bg",this.uiProps.showGameBg),this.container.classList.toggle("show-time-bar",this.uiProps.showTimeBar)})(),(()=>{const e=xt.GAME_DATA.masteryRate;this.frontSide.retroRatioElement.innerText=e,this.frontSide.retroRatioElement.className="status__retro-ratio badge badge-gold"})(),(()=>{const{ImageIcon:e,FixedTitle:t,ConsoleName:s,ConsoleID:i,badges:n,ID:a,GuideURL:o}=xt.GAME_DATA,{gamePreview:r,gameTitle:l,gamePlatform:c,richPresence:h}=this.frontSide;r.setAttribute("src",F(e)),l.innerHTML=`\n                <a target="_blank" class="status__game-title" href="${V(a)}">${t}</a>\n                ${I(n)} \n                ${I([m[i||1]])}\n\n            `,setTimeout((()=>{this.startAutoScrollElement(l,!0,6e4),this.startAutoScrollElement(h,!0,6e4)}),1e4),this.guideLink.setAttribute("href",o),this.guideLink.classList.toggle("hidden",!o),c.innerText=s||"",this.generateProgressionBlock()})(),this.fillSidebarIcons(),this.startStatsAnimation()}addEvents(){this.section.addEventListener("mousemove",(e=>{this.section.classList.remove(...Object.values(ne).map((e=>"hover-"+e)),"resize-hover");const t=oe(e,this.section);t&&this.section.classList.add(`hover-${t}`,"resize-hover")})),this.section.addEventListener("mousedown",(e=>{const t=oe(e,this.section);e.target.matches(".resizer")||t?(e.stopPropagation(),this.section.classList.add("resized"),ae({event:e,section:this.section,callback:()=>this.fitFontSize(!0),resizeDirection:e.target.matches(".resizer")?ne.bottomRight:t})):e.target.matches(".status__watch-button")?(e.stopPropagation(),xt.isActive?xt.stop():xt.start()):e.target.matches(".comments-button")?(e.stopPropagation(),Ge(xt.GAME_DATA?.ID,1)):e.target.matches(".game-props-button")?(e.stopPropagation(),qe().open(xt.GAME_DATA)):e.target.matches(".close-icon")?(e.stopPropagation(),this.close()):ie(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{kt.showContextmenu({event:e,menuItems:this.contextMenuItems})}))}fillSidebarIcons(){const e=this.uiProps.hardMode?{...xt.GAME_DATA.earnedStats.hard}:{...xt.GAME_DATA.earnedStats.soft};this.frontSide.iconsContainer.innerHTML=`\n            <p class="signed-icon auto-font-size" data-title="${kt.lang.cheevosCount}">\n                ${w.cheevos}\n                ${e.count}/${xt.GAME_DATA.NumAchievements}\n            </p>\n\n            <p class="signed-icon auto-font-size" data-title="${kt.lang.points}">\n                ${w.points}\n                ${e.points}/${xt.GAME_DATA.totalPoints}\n            </p>\n            <p class="signed-icon auto-font-size" data-title="${kt.lang.trueRatio}">\n                ${w.trueratio}\n                ${xt.GAME_DATA.retroRatio}\n            </p>\n            <p class="signed-icon auto-font-size" data-title="${kt.lang.retropoints}">\n                ${w.retropoints}\n                ${e.retropoints}/${xt.GAME_DATA.TotalRetropoints}\n            </p>\n        `}updateGameData(e=!1){this.stats={userName:Ft.targetUser,gameTitle:xt.GAME_DATA?.FixedTitle??"Title",gamePlatform:xt.GAME_DATA?.ConsoleName??"Platform",richPresence:"Waiting...",imageSrc:F(xt.GAME_DATA?.ImageIcon),totalPoints:xt.GAME_DATA?.totalPoints??0,totalSoftPoints:xt.GAME_DATA.totalPoints-xt.GAME_DATA.earnedStats.soft.points,totalAchievesCount:xt.GAME_DATA?.NumAchievements??0,totalProgressionCount:xt.GAME_DATA?.progressionSteps,earnedPoints:xt.GAME_DATA.earnedStats.hard.points,earnedAchievesCount:xt.GAME_DATA.earnedStats.hard.count,earnedProgressionCount:xt.GAME_DATA.earnedStats.soft.progressionCount,totalRetropoints:xt.GAME_DATA?.TotalRetropoints,earnedRetropoints:xt.GAME_DATA.earnedStats.hard.retropoints,earnedSoftpoints:xt.GAME_DATA.earnedStats.soft.points-xt.GAME_DATA.earnedStats.hard.points},e&&(this.awards.award=xt.GAME_DATA.award,this.awards.progressionAward=xt.GAME_DATA.progressionAward)}gameChangeEvent(e=!1){e&&xt.IS_WATCHING&&this.addAlertsToQuery([{type:U.GAME,value:xt.GAME_DATA}]),this.updateGameData(!0),this.setElementsValues()}timeWatcher(){this.frontSide.watchButton.classList.toggle("active",xt.isActive),this.section.classList.toggle("watching",xt.IS_ONLINE&&xt.isActive);return{start:()=>{kt.statusPanel.timeWatcher().stop(),this.gameTimeInterval=setInterval((()=>{"timer"===this.uiProps.time&&xt.playTime.timer<0&&this.section.classList.add("timer-timeout");const e=this.getActiveTime(),t=this.section.querySelector(".status__game-time");t&&t.innerHTML!==e&&(t.innerHTML=e)}),1e3)},stop:()=>{this.gameTimeInterval&&clearInterval(this.gameTimeInterval)}}}generateProgressionBlock(){const e=this.section.querySelector(".status__progression-container"),t=this.section.querySelector(".status__description-text"),s=e=>this.uiProps.hardMode?e.isHardcoreEarned?"earned":"":e.isEarned?"earned":"",i={dots:()=>{const e=Object.values(xt.CHEEVOS).filter((e=>e.Type==ye.PROGRESSION)).sort(((e,t)=>Ie.default(e,t))),t=Object.values(xt.CHEEVOS).filter((e=>e.Type==ye.WIN));return e.reduce(((e,t)=>e+=`\n                            <div class="progression-point progression-point__dot  ${s(t)}" data-achiv-id=${t.ID}></div>\n                        `),"")+(t?.length>0?`\n                        <div class="win-points win-points__dots">\n                            ${t.reduce(((e,t)=>e+=`\n                                <div class="progression-point progression-point__dot-win ${s(t)}" data-achiv-id=${t.ID}></div>\n                            `),"")}\n                         </div>\n                        `:"")},rects:()=>{const e=Object.values(xt.CHEEVOS).filter((e=>e.Type==ye.PROGRESSION)).sort(((e,t)=>Ie.default(e,t))),t=Object.values(xt.CHEEVOS).filter((e=>e.Type==ye.WIN));return e.reduce(((e,t)=>e+=`\n                        <div class="rp__progression-point ${s(t)}" data-achiv-id=${t.ID}></div>\n                    `),"")+(t?.length>0?`\n                    <div class="rp__win-points">\n                        ${t.reduce(((e,t)=>e+=`\n                                <div class="rp__progression-point win ${s(t)}" data-achiv-id=${t.ID}></div>\n                            `),"")}\n                     </div>\n                    `:"")}},n=Object.values(xt.CHEEVOS).filter((e=>Te.progression(e))).sort(((e,t)=>Ie.default(e,t))).find((e=>!s(e)));e.classList.remove("progression-points__dots","progression-points__rects"),e.classList.add(`progression-points__${this.uiProps.progressionVariant}`),e.innerHTML=i[this.uiProps.progressionVariant](),t.innerHTML=n?n.Description:xt.GAME_DATA?.progressionAward?kt.lang.gameBeatenMsg:kt.lang.noProgressionMsg;const a=e.querySelector(`[data-achiv-id="${n?.ID}"`);a?.scrollIntoView({behavior:"smooth",block:"end",inline:"center"}),a?.classList.add("focus"),this.frontSide.gamePreview.src=this.uiProps.showTargetPreview&&n?B(n?.BadgeName):F(xt.GAME_DATA.ImageIcon)}updateProgress({earnedAchievementIDs:e}){e.length>0&&(this.uiProps.hardMode=!!xt.CHEEVOS[e[0]].isHardcoreEarned),this.updateGameData(),this.generateProgressionBlock(),this.fillSidebarIcons(),this.progresBarDelta?.classList.remove("hidden"),setTimeout((()=>this.progresBarDelta?.classList.add("hidden")),50),this.initialStats&&(this.initialStats.cheevosCount+=e.length)}initialStats;currentStats;deltaStats;updateStatistics({userSummary:e}){function t(e){return 0==e?"":(e>0?"+":"")+e}if(this.initialStats){this.currentStats={points:e.TotalPoints,retroPoints:e.TotalTruePoints,softPoints:e.TotalSoftcorePoints,rank:e.Rank,totalRanked:e.TotalRanked,percentile:100*e.Rank/e.TotalRanked};const s=this.currentStats.rank-this.initialStats.rank,i=(this.currentStats.percentile-this.initialStats.percentile).toFixed(3),n={deltaPoints:t(this.currentStats.points-this.initialStats.points),deltaRetroPoints:t(this.currentStats.retroPoints-this.initialStats.retroPoints),deltaSoftPoints:t(this.currentStats.softPoints-this.initialStats.softPoints),deltaRank:t(s),deltaPercentile:t(i)};this.deltaStats=n;const a={type:U.STATS,value:{...this.currentStats,...n,cheevosCount:this.initialStats.cheevosCount}};!this.alertsQuery.find((e=>e.type===U.STATS))&&this.addAlertsToQuery([a]),kt.status.addAlertsToQuery([a])}else this.initialStats={points:e.TotalPoints,retroPoints:e.TotalTruePoints,softPoints:e.TotalSoftcorePoints,rank:e.Rank,totalRanked:e.TotalRanked,percentile:100*e.Rank/e.TotalRanked,cheevosCount:0},this.currentStats=this.initialStats}alertsQuery=[];addAlertsToQuery(e){this.uiProps.showNewAchiv&&(this.alertsQuery.length>0?this.alertsQuery=[...this.alertsQuery,...e]:(this.alertsQuery=[...e],this.startAlerts()))}async startAlerts(){const e=()=>{this.container.classList.remove("new-game-info","new-achiv","new-award","stats","beaten","mastered"),this.backSide.container.classList.remove("hardcore","beaten","mastered","beaten-softcore","completed")},t=()=>{const e=this.section.querySelector(".status_glass-effect");e.classList.remove("update"),setTimeout((()=>e.classList.add("update")),20)},s=e=>{const{FixedTitle:t,badges:s,ImageIcon:i,totalPoints:n,ConsoleName:a,TotalRetropoints:o,NumAchievements:r,masteryRate:l,beatenRate:c}=e;this.backSide.imgElement.src=F(i),this.backSide.titleElement.innerHTML=`${t} ${I(s)}\n            <i class="badge">${a}</i>\n            `;let h=`\n                ${D(w.cheevos+r)}\n                ${D(w.points+n)}\n                ${D(w.retropoints+o)}\n                ${D(l+"% MASTERED")}\n                ${c?D(c+"% BEATEN"):""}\n            `;this.backSide.descriptionElement.innerText="",this.backSide.badgesElement.innerHTML=h,this.container.classList.add("new-game-info")},i=e=>{const{isHardcoreEarned:t,Title:s,prevSrc:i,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:l}=e;this.backSide.imgElement.src=i,this.backSide.titleElement.innerHTML=s,this.backSide.descriptionElement.innerText=e.Description;let c=t?`\n                    ${D(w.points+" +"+n)}\n                    ${D(w.retropoints+" +"+a)}\n                    ${D("TOP"+r)}\n                    ${P.difficultBadge(l)}\n                `:`\n                    ${D(w.points+" +"+n)}\n                    ${D("TOP"+o)}\n                    ${P.difficultBadge(l)}\n                `,h=e.genres?.map((e=>D(e))).join("\n")??"";this.backSide.badgesElement.innerHTML=h+c,this.backSide.container.classList.toggle("hardcore",e.isHardcoreEarned),setTimeout((()=>this.container.classList.add("new-achiv")),2e3)},n=(e,t)=>{const{FixedTitle:s,badges:i,ImageIcon:n,totalPoints:a,earnedStats:o,TotalRetropoints:r,masteryRate:l,beatenRate:c,completedRate:h,beatenSoftRate:d,ID:m,NumAchievements:g,TimePlayed:u}=e,p="mastered"==t?l:"beaten"==t?c:"completed"==t?h:d,v=(e=>{const t=~~(e/3600),s=~~((e-3600*t)/60);return`\n          ${t>0?1==t?"1 hour ":t+" hours ":""}\n          ${t>0&&s>0?"and ":""}\n          ${s>0?1==s?"1 minute":s+" minutes":""}\n            `})(u);this.backSide.imgElement.src=F(n),this.backSide.titleElement.innerHTML=`${s} ${I(i)}\n                ${D("GAINED AWARD")}\n            `;let E=`\n                ${D(`${t} IN ${v}`)}\n                ${D(`TOP${p}%`)}\n                ${D(`${w.cheevos}${o.hard.count}/${g}`)}\n                ${D(`${w.points}${o.hard.points}/${a}`)}\n                ${D(`${w.retropoints}${o.hard.retropoints}/${r}`)}\n            `;this.backSide.badgesElement.innerHTML=E,this.backSide.descriptionElement.innerText="",this.backSide.container.classList.add(t),setTimeout((()=>this.container.classList.add("new-award")),1e3)},a=e=>{this.backSide.imgElement.src=Nt.userImageSrc,this.backSide.titleElement.innerHTML=`\n                ${Nt.USER_NAME.toUpperCase()} statistics:\n            `;let t=`\n                ${e.rank?D(`Rank: ${e.rank} ${e.deltaRank}`):""}\n                ${e.percentile?D(`TOP ${e.percentile.toFixed(2)}% ${e.deltaPercentile}`):""}\n                ${D(`${w.cheevos} +${e.cheevosCount}`)}\n                ${D(`${w.points}${e.points} ${e.deltaPoints}`)}\n                ${D(`${w.retropoints}${e.retroPoints} ${e.deltaRetroPoints}`)}\n                ${D(`${w.points}${e.softPoints}SP ${e.deltaSoftPoints}`)}\n            `;this.backSide.badgesElement.innerHTML=t,this.backSide.descriptionElement.innerText="",this.container.classList.add("stats")},o=t=>{switch(e(),t.type){case U.GAME:s(t.value);break;case U.CHEEVO:i(t.value);break;case U.AWARD:n(t.value,t.award);break;case U.STATS:a(t.value)}};for(;this.alertsQuery.length>0;){const e=this.alertsQuery[0];if(!e.value)return void this.alertsQuery.shift();const s=()=>{o(e),this.container.classList.add("show-back"),t(),setTimeout((()=>{this.startAutoScrollElement(this.backSide.titleElement),this.startAutoScrollElement(this.backSide.badgesElement)}),2e3)},i=()=>{this.container.classList.remove("show-back"),this.alertsQuery.shift(),this.stopAutoScrollElement(this.backSide.badgesElement,!0),this.stopAutoScrollElement(this.backSide.titleElement,!0)};await G(1e3),s(),await G(1e3*this.uiProps.newAchivDuration),i()}}statsAnimationInterval;startStatsAnimation(){this.stopStatsAnimation(),this.section.classList.remove("timer-timeout");const e=this.getActiveTime(),t=this.section.querySelector(".status__game-time");t&&t.innerHTML!==e&&(t.innerHTML=e,this.frontSide.sideBlock.classList.toggle("long-time",e.length>6))}stopStatsAnimation(){clearInterval(this.statsAnimationInterval),this.currentStatusTextIndex=0}changeStatsElementValues({className:e,text:t}){this.progressStatusText.innerText=t,this.progressStatusText.className=`status__big-text ${e}`}autoscrollAlertInterval={};startAutoScrollElement(e,t=!0,s=1e3){const i=e.className;this.autoscrollAlertInterval[i]?this.stopAutoScrollElement(e):this.autoscrollAlertInterval[i]={};this.autoscrollAlertInterval[i].interval=setInterval((()=>{e.clientWidth==e.scrollWidth?(this.stopAutoScrollElement(e,!0),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),1e4)):t?(e.scrollLeft++,e.scrollWidth-e.scrollLeft<=e.clientWidth&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!1,s)),5e3))):(e.scrollLeft--,e.scrollLeft<=0&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),s)))}),50)}stopAutoScrollElement(e,t=!1){t&&(e.scrollLeft=0),clearInterval(this.autoscrollAlertInterval[e.className].interval),clearTimeout(this.autoscrollAlertInterval[e.className].timeout)}convertToPercentage(e){const t=e.split("/");return(parseInt(t[0],10)/parseInt(t[1],10)*100).toFixed(2)+"%"}fitFontSize(e=!1){const t=this.section.querySelector(".status__container");let s=Nt.ui["update-section"]?.height??this.section.getBoundingClientRect().height;e&&(s=this.section.getBoundingClientRect().height);const i=(parseInt(s)-10)/5.5+"px";t.style.fontSize=i}blinkUpdate(){this.section.classList.remove("offline","blink"),this.uiProps.showUpdateBlink&&xt.IS_ONLINE?(this.section.classList.add("blink"),setTimeout((()=>this.section.classList.remove("blink","offline")),1e3)):xt.IS_ONLINE||this.section.classList.add("offline")}}class Xe{get VISIBLE(){return!this.section.classList.contains("hidden")}constructor(){this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=document.querySelector("#side_panel"),this.header=this.section.querySelector("#buttons-header_container"),this.settings=this.section.querySelector("#open-settings-button"),this.achievements=this.section.querySelector("#open-achivs-button"),this.gameCard=this.section.querySelector("#open-game-card-button"),this.target=this.section.querySelector("#open-target-button"),this.status=this.section.querySelector("#open-status-button"),this.awards=this.section.querySelector("#open-awards-button"),this.games=this.section.querySelector("#open-games-button"),this.progression=this.section.querySelector("#open-progression-button"),this.userImage=this.section.querySelector("#side-panel-user-image"),this.note=this.section.querySelector("#open-note-button"),this.notifications=this.section.querySelector("#open-notifications-button"),this.user=this.section.querySelector("#open-user-button"),this.stats=this.section.querySelector("#open-stats-button")}addEvents(){this.sidePanel=document.querySelector("#side_panel"),setTimeout((()=>kt.buttons.section.classList.remove("expanded")),2e3),document.addEventListener("touchstart",(e=>this.touchVisibilityHandler(e))),this.settings.addEventListener("click",(e=>{const t=document.querySelector("#settings_section");t?t.remove():kt.settings.openSettings()}))}setValues(){this.userImage.src=Nt.userImageSrc}show(){this.section.classList.add("expanded"),this.autoHideTimeout=setTimeout((()=>this.section.classList.remove("expanded")),500),this.section.addEventListener("mousemove",(()=>{this.autoHideTimeout&&clearTimeout(this.autoHideTimeout)})),this.section.addEventListener("mouseleave",(()=>{setTimeout((()=>this.section.classList.remove("expanded")),200)}))}touchVisibilityHandler(e){e.touches[0].clientX<50&&(this.section.classList.add("expanded"),this.section.addEventListener("blur",(e=>{setTimeout((()=>kt.buttons.section.classList.remove("expanded")),0)})))}generatePanel(){const e=document.createElement("section");e.id="side_panel",e.classList.add("buttons-block","expanded")}}const Ye=e=>{const t=e.target,s=+t.dataset.state,i=1===s?-1:s+1,n=t.dataset.value;t.dataset.state=i,t.dataset.event&&new Function("event","state","filterName",t.dataset.event)(e,i,n)},Ze=Object.freeze({en:"en",ua:"ua",br:"br"}),Je=(e=Ze.en)=>{const t=Object.keys(Ze).includes(e)?e:Ze.en;return`./json/lang/${Ze[t]}.json`};class Qe extends _e{widgetIcon={iconClass:"settings-icon"};get settingsItems(){return[{label:kt.lang.style,elements:[{type:O.SELECTOR,label:kt.lang.selectColors,id:"settings_colors-selector",selectValues:[...Object.keys(t).map((e=>({type:O.RADIO,name:"settings_color-scheme",id:`settings_color-scheme-${e}`,label:e,checked:Ft.preset===e,event:`onchange="configData.preset = '${e}'"`}))),{type:O.RADIO,name:"settings_color-scheme",id:"settings_color-scheme-custom",label:"custom",checked:"custom"===Ft.preset,event:"onchange=\"configData.preset = 'custom'\""}]},{type:O.CHECKBOX,label:kt.lang.showBgAnimation,id:"settings_show-bg",onChange:"configData.bgVisibility = this.checked;",checked:Ft.bgVisibility},{type:O.CHECKBOX,label:kt.lang.stickyWindows,id:"settings_sticky-windows",onChange:"ui.settings.IS_WINDOWS_STICKY = this.checked;",checked:this.IS_WINDOWS_STICKY}]},{label:kt.lang.customColors,elements:[{type:O.COLOR,id:"main-color-input",label:"main color",value:Ft.customColors.mainColor,onChange:"configData.customColors = {colorProperty: 'mainColor', color: this.value};"},{type:O.COLOR,id:"secondary-color-input",label:"secondary color",value:Ft.customColors.secondaryColor,onChange:"configData.customColors  = {colorProperty: 'secondaryColor', color: this.value};"},{type:O.COLOR,id:"accent-color-input",label:"accent color",value:Ft.customColors.accentColor,onChange:"configData.customColors = {colorProperty: 'accentColor', color: this.value};"},{type:O.COLOR,id:"selection-color-input",label:"selection color",value:Ft.customColors.selectionColor,onChange:"configData.customColors = {colorProperty: 'selectionColor', color: this.value};"},{type:O.COLOR,id:"font-color-input",label:"font color",value:Ft.customColors.fontColor,onChange:"configData.customColors  = {colorProperty: 'fontColor', color: this.value};"}]},{label:kt.lang.fontFamily,elements:[{type:O.SELECTOR,label:kt.lang.selectFont,id:"settings_font-family",selectValues:[...Object.keys(s).map((e=>({type:O.RADIO,name:"settings_font-family",id:`settings_font-family-${e}`,label:e,checked:Ft.fontFamilyName===e,event:`onchange="configData.fontFamilyName = '${e}';"`})))]},{type:O.BUTTON,label:"-",id:"settings_font-size-decrease",onClick:"configData.fontSize = parseFloat(configData.fontSize) - 0.5;"},{type:O.BUTTON,label:"+",id:"settings_font-size-increase",onClick:"configData.fontSize = parseFloat(configData.fontSize) + 0.5;"}]},{label:kt.lang.raApi,elements:[{type:O.SEARCH_INPUT,label:Ft.targetUser||Nt.USER_NAME,id:"settings_target-user-input",value:Ft.targetUser,onChange:"configData.targetUser = this.value",title:kt.lang.targetUserInputHint},{type:O.BUTTON,label:kt.lang.checkGameID,id:"settings_check-game-id",onClick:"watcher.updateGameData(configData.gameID)"},{type:O.BUTTON,label:kt.lang.getLastID,id:"settings_get-last-id",onClick:"ui.settings.getLastGameID()"},{type:O.NUM_INPUT,label:kt.lang.gameID,id:"settings_game-id-input",value:Ft.gameID,onChange:"configData.gameID = this.value;"}]},{label:kt.lang.autoupdate,elements:[{type:O.CHECKBOX,label:kt.lang.startOnLoad,id:"settings_start-on-load",onChange:"configData.startOnLoad = this.checked;",checked:Ft.startOnLoad},{type:O.CHECKBOX,label:kt.lang.pauseIfOffline,id:"settings_autopause",onChange:"configData.pauseIfOnline = this.checked;",checked:Ft.pauseIfOnline},{type:O.NUM_INPUT,label:"sec",id:"settings_update-delay-input",value:Ft.updateDelaySec,onChange:"configData.updateDelaySec = this.value",title:kt.lang.autoupdateInputHint}]},{label:kt.lang.logParser,elements:[{type:O.CHECKBOX,label:kt.lang.enableLogParser,id:"settings_enable-log-parser",onChange:"configData.parseLog = this.checked;",checked:Ft.parseLog},{label:kt.lang.selectRarchLog,type:O.BUTTON,id:"context_open-log-selector",onClick:"config.selectLogFile('rarch')"}]},{label:kt.lang.fsAlerts,elements:[{type:O.CHECKBOX,label:kt.lang.earnCheevoAlert,id:"settings_fsalert-cheevo",onChange:"configData.fsNewCheevo = this.checked;",checked:Ft.fsNewCheevo},{type:O.CHECKBOX,label:kt.lang.earnAwardAlert,id:"settings_fsalert-award",onChange:"configData.fsNewAward = this.checked;",checked:Ft.fsNewAward},{type:O.NUM_INPUT,label:kt.lang.duration,id:"settings_fsakert-duration-input",value:Ft.fsAlertDuration,onChange:"configData.fsAlertDuration = this.value",title:kt.lang.fsAlertDurationInputHint}]},{label:kt.lang.dsAlerts,elements:[{type:O.TEXT_INPUT,label:kt.lang.pasteWebhook,id:"settings_discord-hook-input",value:Ft.discordWebhook??"",onChange:"configData.discordWebhook = value;"},{type:O.CHECKBOX,label:kt.lang.startGameAlert,id:"settings_discord-start-game",onChange:"configData.discordNewGame = this.checked;",checked:Ft.discordNewGame},{type:O.CHECKBOX,label:kt.lang.startSession,id:"settings_discord-start-session",onChange:"configData.discordStartSession = this.checked;",checked:Ft.discordStartSession},{type:O.CHECKBOX,label:kt.lang.earnCheevoAlert,id:"settings_discord-new-cheevo",onChange:"configData.discordNewCheevo = this.checked;",checked:Ft.discordNewCheevo},{type:O.NUM_INPUT,label:kt.lang.points,id:"settings_min-points-alert",title:kt.lang.DSAlertMinPointsInputHint,value:Ft.minPointsDiscordAlert,onChange:"configData.minPointsDiscordAlert = this.value;"},{type:O.NUM_INPUT,label:kt.lang.retropoints,title:kt.lang.DSAlertMinTruePointsInputHint,id:"settings_min-retropoints-alert",value:Ft.minRetroPointsDiscordAlert,onChange:"configData.minRetroPointsDiscordAlert = this.value;"},{type:O.CHECKBOX,label:"Hardcore Only",id:"settings_discord-hard-award",onChange:"configData.hardOnlyDiscordAlert = this.checked;",checked:Ft.hardOnlyDiscordAlert},{type:O.CHECKBOX,label:kt.lang.earnAwardAlert,id:"settings_discord-new-award",onChange:"configData.discordNewAward = this.checked;",checked:Ft.discordNewAward}]},{label:"Language",elements:[{name:"settings-language",type:O.RADIO,label:"English",id:"settings_lang-en",onChange:`ui.settings.LANG = '${Ze.en}';`,checked:this.LANG===Ze.en},{name:"settings-language",type:O.RADIO,label:"Português (Brasil)",id:"settings_lang-br",onChange:`ui.settings.LANG = '${Ze.br}';`,checked:this.LANG===Ze.br},{name:"settings-language",type:O.RADIO,label:"Українська",id:"settings_lang-ua",onChange:`ui.settings.LANG = '${Ze.ua}';`,checked:this.LANG===Ze.ua}]},{label:kt.lang.data,elements:[{label:kt.lang.exportCompletion,type:O.BUTTON,id:"context_export-completion",onClick:"ui.exportCompletionDataToXlsx()"},{label:kt.lang.exportWantToPlay,type:O.BUTTON,id:"context_export-wtp-list",onClick:"ui.exportWantToPlayToCSV()"},{label:kt.lang.exportSettings,type:O.BUTTON,id:"context_export-settings",onClick:"ui.exportSettingsToJson()"},{label:kt.lang.importSettings,type:O.BUTTON,id:"context_import-settings",onClick:"ui.importSettingsFromJson()"},{label:kt.lang.clearCache,type:O.BUTTON,id:"context_clear-cache",onClick:"apiWorker.clearCache()"}]}]}get LANG(){return Nt.ui?.local??Ze.en}set LANG(e){Nt.ui.local=e,Nt.writeConfiguration(),setTimeout((()=>location.reload()),1e3)}get IS_WINDOWS_STICKY(){return Nt.ui.isWindowsSticky??!0}set IS_WINDOWS_STICKY(e){Nt.ui.isWindowsSticky=e,Nt.writeConfiguration()}get VISIBLE(){return!this.section.classList.contains("hidden")}get contextMenuItems(){return[{label:kt.lang.selectColors,elements:[...Object.keys(t).map((e=>({type:O.RADIO,name:"context_color-scheme",id:`context_color- scheme - ${e}`,label:e,checked:Ft.preset===e,event:`onchange ="configData.preset = '${e}'"`}))),{type:O.RADIO,name:"context_color-scheme",id:"settings_color-scheme-custom",label:"custom",checked:"custom"===Ft.preset,event:"onchange=\"configData.preset = 'custom'\""}]},{label:kt.lang.showBgAnimation,type:O.CHECKBOX,id:"context_show-bg-animation",checked:Ft.bgVisibility,event:'onchange="configData.bgVisibility = this.checked;"'},{label:kt.lang.startOnLoad,type:O.CHECKBOX,id:"context_show-start-on-load",checked:Ft.startOnLoad,event:'onchange="configData.startOnLoad = this.checked;"'}]}constructor(){super(),this.setValues()}setValues(){Ft.fontSize=Ft.fontSize,Ft.fontFamilyName=Ft.fontFamilyName}addEvents(){super.addEvents(),this.section.addEventListener("click",(e=>{this.section.querySelectorAll(".extended").forEach((e=>e.classList.remove("extended")))}))}generateWidget(e){const t={classes:["prefs_section","section"],id:"settings_section",title:kt.lang.settingsSectionName,contentClasses:["settings_container","content-container"]},s=this.generateWidgetElement(t);kt.app.appendChild(s),this.section=s,this.section.querySelector(".resizer")?.remove(),(e=>{const t=this.section.querySelector(".content-container");t.innerHTML="",e.forEach((e=>{if(e.elements){const s=document.createElement("li");s.classList.add("settings_setting-line"),s.innerHTML=`\n                    <h3 class="settings_setting-header">\n                        ${e?.label}\n                    </h3>`,e.elements.forEach((e=>{s.innerHTML+=k(e)})),t.appendChild(s)}else t.innerHTML+=k(e)}))})(e),this.section.querySelectorAll(".statebox").forEach((e=>e.addEventListener("click",Ye)))}openSettings(e=this.settingsItems){this.close(),this.generateWidget(e),this.addEvents(),Nt.ui.settings_section&&(Nt.ui.settings_section.x&&(this.section.style.left=Nt.ui.settings_section.x),Nt.ui.settings_section.y&&(this.section.style.top=Nt.ui.settings_section.y)),kt.buttons.settings.checked=!0}close(){kt.buttons.settings.checked=!1,this.section&&this.section.remove()}getLastGameID(){apiWorker.getProfileInfo({}).then((e=>{document.getElementById("settings_game-id-input").value=e.LastGameID,Ft.gameID=e.LastGameID,watcher.updateGameData()}))}}class et extends _e{widgetIcon={description:"notes widget",iconID:"side-panel__note",onChangeEvent:"ui.note.VISIBLE = this.checked",iconClass:"note-icon"};AUTOSAVE_INTERVAL_MILISECS=2e3;get notesTabs(){return[{type:"radio",name:"note__tabs",id:"notes__main-tab",label:kt.lang.mainNote,checked:"main"===this.CURRENT_TAB,onChange:"ui.note.CURRENT_TAB = 'main'"},{type:"radio",name:"note__tabs",id:"notes__game-tab",label:kt.lang.gameNote,checked:"game"===this.CURRENT_TAB,onChange:"ui.note.CURRENT_TAB = 'game'"}]}get NOTES_VALUE(){return Nt._cfg.ui?.note_section?.notes??""}set NOTES_VALUE(e){Nt._cfg.ui.note_section.notes=e,Nt.writeConfiguration()}get GAME_NOTES_VALUE(){const e=xt.GAME_DATA?.ID??0;return Nt.gamesDB[e]?.notes??""}set GAME_NOTES_VALUE(e){const t=xt.GAME_DATA?.ID??0;Nt.gamesDB[t].notes=e,Nt.writeConfiguration()}get CURRENT_TAB(){return Nt._cfg.ui?.note_section?.currentTab??"main"}set CURRENT_TAB(e){Nt._cfg.ui.note_section.currentTab=e,Nt.writeConfiguration(),this.switchActiveTab()}constructor(){super(),this.addWidgetIcon(),Nt._cfg.ui.note_section||(Nt._cfg.ui.note_section={}),this.initializeElements(),this.generateTabs(),this.addEvents(),this.setValues(),At.applyPosition({widget:this})}initializeElements(){this.section=document.querySelector("#note_section"),this.header=this.section.querySelector(".header-container"),this.resizer=this.section.querySelector("#note-resizer"),this.textarea=this.section.querySelector(".note-textaria")}generateTabs(){const e=this.notesTabs.reduce(((e,t)=>e+=`\n          <div class="checkbox-input_container" onmousedown="event.stopPropagation()">\n            <input  onchange="${t.onChange}" type="radio" id="${t.id}" ${t.checked?"checked":""} name="${t.name}">\n            <label class="radio-tab" for="${t.id}">${t.label}</label>\n          </div>\n        `),"");document.querySelector(".note__tabs-container").innerHTML=e}addEvents(){super.addEvents(),this.delayedSave={},this.textarea.addEventListener("input",this.textInputHandler)}textInputHandler(e){const t=xt.GAME_DATA?.ID??0,s="main"==kt.note.CURRENT_TAB?"main":t,i=kt.note.textarea.value;clearTimeout(kt.note.delayedSave[s]),kt.note.delayedSave[s]=setTimeout((()=>{kt.note.saveNoteValue({id:s,value:i})}),kt.note.AUTOSAVE_INTERVAL_MILISECS)}saveNoteValue({id:e,value:t}){if("main"===e)this.NOTES_VALUE=t;else this.GAME_NOTES_VALUE=t}setValues(){this.switchActiveTab()}switchActiveTab(){switch(this.CURRENT_TAB){case"main":this.textarea.value=this.NOTES_VALUE;break;case"game":this.textarea.value=this.GAME_NOTES_VALUE}}updateGame(){"game"===this.CURRENT_TAB&&(this.textarea.value=this.GAME_NOTES_VALUE)}async copyNoteText(){const e=this.textarea.value.substring(this.textarea.selectionStart,this.textarea.selectionEnd),t=e||this.textarea.value;try{await navigator.clipboard.writeText(t),this.textInputHandler()}catch(e){console.error(e)}}async pasteTextToNote(){try{const e=await navigator.clipboard.readText();this.textarea.value+=e,this.textInputHandler()}catch(e){console.error(e)}}clearTextNote(){this.textarea.value="",this.textInputHandler()}}class tt extends _e{widgetIcon={description:"awards widget",iconID:"side-panel__awards",onChangeEvent:"ui.awards.VISIBLE = this.checked",iconClass:"awards-icon"};awardTypes={mastery:"mastery",completion:"completion",beatenSoftcore:"beatenSoftcore",beatenHardcore:"beatenHardcore"};constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),At.applyPosition({widget:this})}generateWidget(){const e=`\n            ${Ee("ui.awards.updateAwards()")}\n        `,t={classes:["awards_section","section"],id:"awards_section",title:kt.lang.awardsSectionName,headerElementsHtml:e,contentClasses:["awards-content_container","content-container"]},s=this.generateWidgetElement(t);kt.app.appendChild(s)}initializeElements(){this.section=document.querySelector(".awards_section"),this.container=this.section.querySelector(".awards-content_container")}addEvents(){super.addEvents()}async updateAwards(){const e=await Ot.getUserAwards({});this.parseAwards(e)}parseAwards(e){if(!e?.TotalAwardsCount)return;this.container.innerHTML="";const{dataset:t}=this.container;t.total=e.TotalAwardsCount,t.beatenSoftcore=e.BeatenSoftcoreAwardsCount,t.beatenHard=e.BeatenHardcoreAwardsCount,t.completion=e.CompletionAwardsCount,t.mastery=e.MasteryAwardsCount;let s=[...e.VisibleUserAwards];s=this.fixGamesProperties(s);const i=this.generateAwardsGroupsArray(s);this.generateConsolesAwards(i)}fixGamesProperties(e){return e.map((e=>(e.awardedDate=new Date(e.AwardedAt),e.awardeTypeFixed="Game Beaten"===e.AwardType?1===e.AwardDataExtra?this.awardTypes.beatenHardcore:this.awardTypes.beatenSoftcore:1===e.AwardDataExtra?this.awardTypes.mastery:this.awardTypes.completion,e))).sort(((e,t)=>t.awardedDate-e.awardedDate))}generateAwardsGroupsArray(e){return e.reduce(((e,t)=>(e.hasOwnProperty(t.ConsoleName)||(e[t.ConsoleName]=[]),e[t.ConsoleName].push(t),e.Total.push(t),e)),{Total:[]})}generateConsolesAwards(e){Object.getOwnPropertyNames(e).forEach((t=>{let s=document.createElement("li");s.classList.add("console-awards"),"Total"!==t&&s.classList.add("collapsed"),s.dataset.consoleName=t;let i=e[t].length;const n=({awardType:e,gamesArray:t})=>t.filter((t=>t.awardeTypeFixed===e)).length;let a=n({awardType:this.awardTypes.beatenSoftcore,gamesArray:e[t]}),o=n({awardType:this.awardTypes.beatenHardcore,gamesArray:e[t]}),r=n({awardType:this.awardTypes.completion,gamesArray:e[t]}),l=n({awardType:this.awardTypes.mastery,gamesArray:e[t]});s.innerHTML=`\n          <h3 class="awards-console_header" onclick="ui.awards.expandAwards(this)">${t}</h3>\n          <ul class="console-awards-values">      \n            <li class="awarded-games total" data-title="${kt.lang.totalAwardsHint}" onclick="ui.awards.filterAwards('all')">${i}</li>\n            <li class="awarded-games beaten-softcore" data-title="${kt.lang.beatenSoftHint}" onclick="ui.awards.filterAwards('${this.awardTypes.beatenSoftcore}')">${a}</li>\n            <li class="awarded-games beaten"  data-title="${kt.lang.beatenHint}"  onclick="ui.awards.filterAwards('${this.awardTypes.beatenHardcore}')">${o}</li>\n            <li class="awarded-games completed"  data-title="${kt.lang.completedHint}" onclick="ui.awards.filterAwards('${this.awardTypes.completion}')">${r}</li>\n            <li class="awarded-games mastered"  data-title="${kt.lang.masteredHint}" onclick="ui.awards.filterAwards('${this.awardTypes.mastery}')">${l}</li>\n          </ul>\n          <button class="expand-awards_button" onclick="ui.awards.expandAwards(this)"> </button>\n          <ul class="flex-main-list awarded-games_list ${"Total"==t?"":"hidden"} total">\n          </ul>\n          `,this.container.appendChild(s);let c=s.querySelector(".flex-main-list");e[t].forEach((e=>{c.appendChild(this.generateAwardElement(e))}))}))}generateAwardElement(e){let t=document.createElement("li");return t.classList.add("awarded-game","awards__game-item","main-column-item","right-bg-icon",e.awardeTypeFixed),t.dataset.title=`${kt.lang.awardTypeHint}: ${e.awardeTypeFixed}`,t.innerHTML=`\n            <img class="awards__game-preview" src="${F(e.ImageIcon)}" alt=" ">\n            <h3 class="game-title">${e.Title}</h3>\n            <p class="awards__game-description">${e.ConsoleName}</p>\n            <p class="awards__game-description">${e.timeString}</p>\n        `,t}expandAwards(e){const t=e.parentNode,s=t.querySelector(".awarded-games_list");s.classList.contains("hidden")?(t.classList.remove("collapsed"),s.classList.remove("hidden")):(t.classList.add("collapsed"),s.classList.add("hidden"))}filterAwards(e){this.container.querySelectorAll(".awarded-game").forEach((t=>{t.classList.remove("hidden"),t.classList.contains(e)||"all"===e||t.classList.add("hidden")}))}}class st extends _e{widgetIcon={description:"game info widget",iconID:"side-panel__gamecard",onChangeEvent:"ui.gameCard.VISIBLE = this.checked",iconClass:"game-info-icon"};uiDefaultValues={showHeader:!1,showBadges:!0};uiSetCallbacks={};uiValuePreprocessors={};get contextMenuItems(){return[{label:kt.lang.showHeader,type:O.CHECKBOX,id:"game-card_show-header",event:'onchange="ui.gameCard.uiProps.showHeader = this.checked"',checked:this.uiProps.showHeader},{label:kt.lang.showTitleBadges,type:O.CHECKBOX,id:"game-card_show-badges",event:'onchange="ui.gameCard.uiProps.showBadges = this.checked"',checked:this.uiProps.showBadges}]}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),At.applyPosition({widget:this})}generateWidget(){const e=`\n            ${le()}\n            ${ce()}\n            ${de()}\n        `,t={classes:["game-card_section","section"],id:"game_section",title:kt.lang.gameCard,headerElementsHtml:e,contentClasses:["game-card_container","content-container"]},s=this.generateWidgetElement(t);s.querySelector(".content-container").innerHTML='\n            <div class="game-card_image-container">\n                <div class="game-card__icons-container"></div>\n                <img id="game-card-image" class="game-card_image" src="" onerror="this.src=\'./assets/img/missable.svg\';" alt=" " />\n            </div>\n            <div class="hor-line-decorate"></div>\n            <div class="game-card__description">\n                <h2 class="game-card__title-container">\n                    <span class="game-card__progression-award"></span>\n                    <span class="game-card__award"></span>\n                    <a id="game-card-header" href="#" target="_blank"> </a>\n                </h2>\n                <div class="game-card__info game-card__genres-container"></div>\n            </div>\n        ',kt.app.appendChild(s)}initializeElements(){this.section=document.querySelector(".game-card_section"),this.sectionID=this.section.id,this.header=document.querySelector("#game-card-header"),this.descriptions=document.querySelector(".game-card__description"),this.preview=document.querySelector("#game-card-image"),this.iconsContainer=this.section.querySelector(".game-card__icons-container"),this.badgesContainer=this.section.querySelector(".game-card__genres-container")}setElementsValues(){const{award:e,progressionAward:t,ConsoleID:s}=xt.GAME_DATA;this.badgesContainer.classList.toggle("hidden",!this.uiProps.showBadges),this.section.dataset.award=e,this.section.dataset.progressionAward=t,this.section.classList.toggle("left-margin-preview",(e=>[4,5,6,18,78].includes(e))(s)),this.section.classList.toggle("compact-header",!this.uiProps.showHeader)}addEvents(){super.addEvents(),this.section.querySelector(".comments-button").addEventListener("click",(e=>{const t=xt.GAME_DATA?.ID;t&&Ge(t,1)})),this.section.querySelector(".game-props-button").addEventListener("click",(e=>{e.stopPropagation(),qe().open(xt.GAME_DATA)})),this.section.addEventListener("mousedown",(e=>{0!==e.button||e.target.closest(".resizer, button")||this.section.classList.contains("resized")||ie(this.section,e)}))}async gameChangeEvent(e){const{FixedTitle:t,ID:s,ImageBoxArt:i,Genre:n,TotalRetropoints:a,NumAchievements:o,totalPoints:l,badges:d,retroRatio:m,ConsoleName:g,ConsoleID:u,Developer:f,Publisher:y,Released:T,gameDifficulty:A,masteryDifficulty:S,timeToBeat:b,timeToMaster:w}=xt.GAME_DATA;(async()=>{const e=(()=>{const e=[];return f&&e.push(`dev: ${f}`),y&&e.push(`Pub: ${y}`),T&&e.push(`${c(T)}`),e})();this.setElementsValues(),this.header.innerHTML=`${t.replaceAll(/\,\s*the$/gi,"")}`,this.header.href=V(s),this.preview.src=F(i),this.preview.alt=`${t} boxart`;const a=`HLTB: \n                    ${b?r(b)+" | ":""} \n                    ${w?r(w):"-"}`,o=[g,...d,...n.split(","),...e,h[A],a];this.badgesContainer.innerHTML=I(o,"selection")})(),(()=>{this.iconsContainer.innerHTML=`\n                ${P.black(p(o))}\n                ${P.black(v(l))}\n                ${P.black(E(a))}\n                ${P.black(_(m))}\n            `})()}}class it extends _e{widgetIcon={description:"progression widget",iconID:"side-panel__progression",onChangeEvent:"ui.progression.VISIBLE = this.checked",iconClass:"progression"};get contextMenuItems(){return[{label:kt.lang.elements,elements:[{label:kt.lang.showHeader,type:O.CHECKBOX,id:"context_show-header",checked:this.uiProps.showHeader,event:'onchange="ui.progression.uiProps.showHeader = this.checked;"'},{label:kt.lang.showBackground,type:O.CHECKBOX,id:"context_show-bg",checked:this.uiProps.showBG,event:'onchange="ui.progression.uiProps.showBG = this.checked;"'}]},{label:kt.lang.style,elements:[{label:kt.lang.showSubLevels,type:O.CHECKBOX,id:"context_show-sublevels",checked:this.uiProps.showSublevels,event:'onchange="ui.progression.uiProps.showSublevels = this.checked;"'},{label:kt.lang.showAllDesc,type:O.CHECKBOX,id:"context_show-all-descr",checked:this.uiProps.showAllDescriptions,event:'onchange="ui.progression.uiProps.showAllDescriptions = this.checked;"'}]}]}uiDefaultValues={showBG:!0,showHeader:!1,hardMode:!0,showSublevels:!0,showAllDescriptions:!1};uiSetCallbacks={};uiValuePreprocessors={};constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.setElementsValues(),this.addEvents(),At.applyPosition({widget:this}),this.generateProgression()}initializeElements(){this.section=document.querySelector("#progression_section"),this.sectionID=this.section.id,this.header=this.section.querySelector(".header-container"),this.resizer=this.section.querySelector("#progression-resizer")}setElementsValues(){this.section.classList.toggle("compact-header",!this.uiProps.showHeader),this.section.classList.toggle("hide-bg",!this.uiProps.showBG),this.section.classList.toggle("show-all-descriptions",this.uiProps.showAllDescriptions),this.section.classList.toggle("show-sublevels",this.uiProps.showSublevels)}addEvents(){super.addEvents()}update({earnedAchievementIDs:e}){e[0]&&(this.uiProps.hardMode=xt.CHEEVOS[e[0]].isHardcoreEarned),this.generateProgression()}generateWidget(){const e={classes:["progression_section","section","compact-header"],id:"progression_section",title:kt.lang.progressionSectionName,contentClasses:["progression__list","content-container"]},t=this.generateWidgetElement(e);kt.app.appendChild(t)}generateProgression(){const e=this.section.querySelector(".progression__list");const t=Object.values(xt.CHEEVOS)?.filter((e=>e.Type==ye.PROGRESSION||e.Type==ye.WIN)).sort(((e,t)=>0===e.DisplayOrder?e.ID-t.ID:e.DisplayOrder-t.DisplayOrder)),s=t.find((e=>this.uiProps.hardMode?!e.isHardcoreEarned:!e.isEarned))?.ID;e.innerHTML=t?.reduce(((e,i)=>(e+=function(e,t){const i=e.level,n=t?.find((e=>e.level>i))?.level??i+1,a=null!=i?Object.values(xt.CHEEVOS).filter((e=>e.level&&![ye.PROGRESSION,ye.WIN].includes(e.Type)&&e.level>=i&&e.level<n)):[],o=`\n                <li class="progression__item ${s===e.ID?"focus":""} ${e.Type}-cheevo">\n                    <p class="cheevo-date">${l(e.DateEarnedHardcore||e.DateEarned,{year:"2-digit"})}</p>\n                    <div class="mark ${e.isEarned?"earned":""} ${e.isHardcoreEarned?"hardcore":""}"></div>\n                    <div class="cheevo-container">\n                        <h3 class="cheevo-title" data-achiv-id="${e.ID}">${e.Title}</h3>\n                        <p class="cheevo-description">\n                            ${e.Description}</p>\n                        <div class="subcheevos-container">\n                            ${a?.reduce(((e,t)=>e+`<h3 class="progression__subcheevo ${t.isEarned?"earned":""} ${t.isHardcoreEarned?"hardcore":""}" data-achiv-id="${t.ID}">${t.Title}</h3>`),"")}\n                        </div>\n                    </div>\n                </li>\n            `;return o}(i,t),e)),"")??"",this.scrollToFocus()}scrollToFocus(){const e=this.section?.querySelector(".focus")||this.section?.querySelector(".win_condition-cheevo");e?.scrollIntoView({behavior:"auto",block:"center"})}}class nt extends _e{widgetIcon={description:"user statistics widget",iconID:"side-panel__stats",onChangeEvent:"ui.stats.VISIBLE = this.checked",iconClass:"stats-icon"};get contextMenuItems(){return[{label:kt.lang.showStats,elements:[{type:O.CHECKBOX,name:"context_show-points",id:"context_show-points",label:kt.lang.points,checked:this.SHOW_HP,event:'onchange="ui.stats.SHOW_HP = this.checked;"'},{type:O.CHECKBOX,name:"context_show-retropoints",id:"context_show-retropoints",label:kt.lang.retropoints,checked:this.SHOW_RP,event:'onchange="ui.stats.SHOW_RP = this.checked;"'},{type:O.CHECKBOX,name:"context_show-softpoints",id:"context_show-softpoints",label:kt.lang.softpoints,checked:this.SHOW_SP,event:'onchange="ui.stats.SHOW_SP = this.checked;"'},{type:O.CHECKBOX,name:"context_show-rank",id:"context_show-rank",label:kt.lang.rank,checked:this.SHOW_RANK,event:'onchange="ui.stats.SHOW_RANK = this.checked;"'},{type:O.CHECKBOX,name:"context_show-percentile",id:"context_show-percentile",label:kt.lang.percentile,checked:this.SHOW_PERCENTILE,event:'onchange="ui.stats.SHOW_PERCENTILE = this.checked;"'},{type:O.CHECKBOX,name:"context_show-true-ratio",id:"context_show-true-ratio",label:kt.lang.trueRatio,checked:this.SHOW_TR,event:'onchange="ui.stats.SHOW_TR = this.checked;"'},{type:O.CHECKBOX,name:"context_show-completion-chart",id:"context_show-completion-chart",label:kt.lang.completionChart,checked:this.SHOW_COMPLETION_CHART,event:'onchange="ui.stats.SHOW_COMPLETION_CHART = this.checked;"'}]},{label:kt.lang.style,elements:[{type:O.CHECKBOX,name:"context_show-header",id:"context_show-header",label:kt.lang.showHeader,checked:this.SHOW_HEADER,event:'onchange="ui.stats.SHOW_HEADER = this.checked;"'},{type:O.CHECKBOX,name:"context_show-bg",id:"context_show-bg",label:kt.lang.showBackground,checked:this.SHOW_BG,event:'onchange="ui.stats.SHOW_BG = this.checked;"'}]},{type:O.CHECKBOX,name:"context_show-session-progress",id:"context_show-session-progress",label:kt.lang.showSessionProgress,checked:this.SHOW_SESSION_PROGRESS,event:'onchange="ui.stats.SHOW_SESSION_PROGRESS = this.checked;"'}]}get SHOW_BG(){return Nt.ui?.stats_section?.showBG??!0}set SHOW_BG(e){this.saveProppertySetting("showBG",e),this.setElementsVisibility()}get SHOW_HEADER(){return Nt.ui?.stats_section?.showHeader??!1}set SHOW_HEADER(e){this.saveProppertySetting("showHeader",e),this.setElementsVisibility()}get SHOW_HP(){return Nt.ui?.stats_section?.showHP??!0}set SHOW_HP(e){this.saveProppertySetting("showHP",e),this.setElementsVisibility()}get SHOW_RP(){return Nt.ui?.stats_section?.showRP??!0}set SHOW_RP(e){this.saveProppertySetting("showRP",e),this.setElementsVisibility()}get SHOW_SP(){return Nt.ui?.stats_section?.showSP??!0}set SHOW_SP(e){this.saveProppertySetting("showSP",e),this.setElementsVisibility()}get SHOW_RANK(){return Nt.ui?.stats_section?.showRank??!0}set SHOW_RANK(e){this.saveProppertySetting("showRank",e),this.setElementsVisibility()}get SHOW_PERCENTILE(){return Nt.ui?.stats_section?.showPercentile??!0}set SHOW_PERCENTILE(e){this.saveProppertySetting("showPercentile",e),this.setElementsVisibility()}get SHOW_TR(){return Nt.ui?.stats_section?.showTrueRatio??!0}set SHOW_TR(e){this.saveProppertySetting("showTrueRatio",e),this.setElementsVisibility()}get SHOW_SESSION_PROGRESS(){return Nt.ui?.stats_section?.showSessionProgress??!0}set SHOW_SESSION_PROGRESS(e){this.saveProppertySetting("showSessionProgress",e),this.setElementsVisibility()}get SHOW_COMPLETION_CHART(){return Nt.ui?.stats_section?.completionChart??!1}set SHOW_COMPLETION_CHART(e){this.saveProppertySetting("completionChart",e),this.setElementsVisibility(),this.updateChart()}saveProppertySetting(e,t){Nt.ui.stats_section||(Nt.ui.stats_section={}),Nt.ui.stats_section[e]=t,Nt.writeConfiguration()}initialUserSummary;userSummary;constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.setElementsVisibility(),this.addEvents(),At.applyPosition({widget:this})}generateWidget(){const e=`\n            ${de()}\n            <button class=" header-button header-icon update-icon" id="" title="${kt.lang.forceReloadHint}"\n            onclick="ui.stats.updateStats({})"></button>\n        `,t={classes:["section","stats_section","compact-header"],id:"stats_section",title:kt.lang.statisticsSectionName,headerElementsHtml:e,contentClasses:["stats-container","content-container"]},s=this.generateWidgetElement(t);kt.app.appendChild(s)}initializeElements(){this.section=document.querySelector("#stats_section"),this.header=this.section.querySelector(".header-container"),this.container=this.section.querySelector(".stats-container"),this.generateStatsElements(),this.rankRateElement=this.section.querySelector("#stats_rank-rate"),this.rankElement=this.section.querySelector("#stats_rank"),this.pointsElement=this.section.querySelector("#stats_points"),this.retropointsElement=this.section.querySelector("#stats_retropoints"),this.softpointsElement=this.section.querySelector("#stats_softpoints"),this.trueRatioElement=this.section.querySelector("#stats_true-ratio"),this.completionElement=this.section.querySelector(".stats__chart-container"),this.masteredCountElement=this.section.querySelector("#stats_mastered-count"),this.beatenCountElement=this.section.querySelector("#stats_beaten-count"),this.playedCountElement=this.section.querySelector("#stats_played-count"),this.resizer=this.section.querySelector(".resizer")}setElementsVisibility(){this.pointsElement.closest("li").classList.toggle("hidden",!this.SHOW_HP),this.retropointsElement.closest("li").classList.toggle("hidden",!this.SHOW_RP),this.softpointsElement.closest("li").classList.toggle("hidden",!this.SHOW_SP),this.rankElement.closest("li").classList.toggle("hidden",!this.SHOW_RANK),this.rankRateElement.closest("li").classList.toggle("hidden",!this.SHOW_PERCENTILE),this.trueRatioElement.closest("li").classList.toggle("hidden",!this.SHOW_TR),this.completionElement.classList.toggle("hidden",!this.SHOW_COMPLETION_CHART),this.section.classList.toggle("compact-header",!this.SHOW_HEADER),this.section.classList.toggle("hide-bg",!this.SHOW_BG),this.container.classList.toggle("show-session-progress",this.SHOW_SESSION_PROGRESS)}addEvents(){super.addEvents()}initialSetStats({userSummary:e,completionProgress:t}){this.initialData={Rank:e.Rank,rankRate:+(100*e.Rank/e.TotalRanked).toFixed(2),TotalPoints:e.TotalPoints,TotalSoftcorePoints:e.TotalSoftcorePoints,TotalTruePoints:e.TotalTruePoints,trueRatio:+(e.TotalTruePoints/e.TotalPoints).toFixed(2)},e&&(this.userSummary=e,this.initialUserSummary=e,this.rankElement.innerText=e.Rank,this.rankRateElement.innerText=(100*e.Rank/e.TotalRanked).toFixed(2)+"%",this.pointsElement.innerText=e.TotalPoints,this.softpointsElement.innerText=e.TotalSoftcorePoints,this.retropointsElement.innerText=e.TotalTruePoints,this.trueRatioElement.innerText=(e.TotalTruePoints/e.TotalPoints).toFixed(2)),setTimeout((()=>this.updateChart()),1e3)}async updateStats({currentUserSummary:e}){e||(e=await Ot.getUserSummary({gamesCount:"0",achievesCount:0}));const t=(t,s)=>{let i=0,n=0,a=0,o=0;switch(s){case"rankRate":a=(100*e.Rank/e.TotalRanked).toFixed(2),o=(100*this.userSummary.Rank/this.userSummary.TotalRanked).toFixed(2),i=+(a-o).toFixed(2),n=-(a-this.initialData.rankRate).toFixed(2),a+="%";break;case"trueRatio":a=(e.TotalTruePoints/e.TotalPoints).toFixed(2),o=(this.userSummary.TotalTruePoints/this.userSummary.TotalPoints).toFixed(2),i=+(a-o).toFixed(2),n=+(a-this.initialData.trueRatio).toFixed(2);break;case"Rank":i=e[s]-this.userSummary[s],n=this.initialData[s]-e[s],a=e[s];break;default:i=e[s]-this.userSummary[s],n=e[s]-this.initialData[s],a=e[s]}if(0==i)return;const r=i<0,l=n<0;t.classList.add("delta"),t.classList.toggle("negative",r),t.dataset.delta=`${r||0==i?"":"+"}${i}`;setTimeout((()=>{const e=0==n?"":l?"▾"+-1*n:`▴${n}`;t.innerHTML=a+` <span class="session-progress ${l?"negative":""}">${e}</span>`,t.classList.remove("delta")}),0)};t(this.rankRateElement,"rankRate"),t(this.rankElement,"Rank"),t(this.pointsElement,"TotalPoints"),t(this.softpointsElement,"TotalSoftcorePoints"),t(this.retropointsElement,"TotalTruePoints"),t(this.trueRatioElement,"trueRatio"),this.userSummary=e}async updateChart(){if(!this.SHOW_COMPLETION_CHART)return;const e=this.section.querySelector(".stats__chart-container"),t=await Ot.SAVED_COMPLETION_PROGRESS,s=t?.Results??[],i=s.length,n=s.filter((e=>"mastered"===e.HighestAwardKind)).length/i*100,a=s.filter((e=>"completed"===e.HighestAwardKind)).length/i*100,o=s.filter((e=>"beaten-hardcore"===e.HighestAwardKind)).length/i*100,r=s.filter((e=>"beaten-softcore"===e.HighestAwardKind)).length/i*100;e.style.setProperty("--m",n+"%"),e.style.setProperty("--c",a+"%"),e.style.setProperty("--b",o+"%"),e.style.setProperty("--b-s",r+"%"),this.section.querySelector(".legend__value-mastered").innerText=n.toFixed(2)+"%",this.section.querySelector(".legend__value-completed").innerText=a.toFixed(2)+"%",this.section.querySelector(".legend__value-beaten").innerText=o.toFixed(2)+"%",this.section.querySelector(".legend__value-beaten-soft").innerText=r.toFixed(2)+"%",this.section.querySelector(".legend__value-progress").innerText=(100-n-a-o-r).toFixed(2)+"%"}statusProperties={percentile:{label:kt.lang.percentile,id:"stats_rank-rate",class:"stats__rank-value"},rank:{label:kt.lang.rank,id:"stats_rank",class:"stats__rank-value"},points:{label:kt.lang.points,id:"stats_points"},retropoints:{label:kt.lang.retropoints,id:"stats_retropoints"},trueRatio:{label:kt.lang.trueRatio,id:"stats_true-ratio"},softpoints:{label:kt.lang.softpoints,id:"stats_softpoints"}};generateStatsElements(){const e=Object.values(this.statusProperties).reduce(((e,t)=>e+=`\n          <li class="stats__stat-container">\n              <h2 class="stats__title">${t.label}</h2>\n              <p id="${t.id}" class="stats__value ${t.class}"></p>\n          </li>\n          `),""),t=`\n            <li class="stats__stat-container stats__chart-container">\n            <h2 class="stats__title">${kt.lang.completionChart}</h2>\n            <div class="round-stat__container ">\n                <div class="circle">\n                <div class="round-stat__total" id="sector"></div>\n                </div>\n                <div class="round-stat__legend">\n                    <div class="legend__award legend__mastered">mastered: <span class="legend__value-mastered">0%</span></div>\n                    <div class="legend__award legend__completed">completed: <span class="legend__value-completed">0%</div>\n                    <div class="legend__award legend__beaten">beaten: <span class="legend__value-beaten">0%</div>\n                    <div class="legend__award legend__beaten-soft">beaten soft: <span class="legend__value-beaten-soft">0%</div>\n                    <div class="legend__award legend__started">in progress: <span class="legend__value-progress">0%</div>\n                </div>\n            </div>\n            </li>\n        `;this.container.innerHTML=e+t}}class at extends _e{widgetIcon={description:"notifications widget",iconID:"side-panel__notifications",onChangeEvent:"ui.notifications.VISIBLE = this.checked",iconClass:"notification-icon"};get contextMenuItems(){return[{label:kt.lang.showHeader,type:O.CHECKBOX,id:"context_hide-notification-header",checked:this.uiProps.showHeader,event:'onchange="ui.notifications.uiProps.showHeader = this.checked;"'},{label:kt.lang.transparentBg,type:O.CHECKBOX,id:"context_hide-notification-bg",checked:this.uiProps.hideBg,event:'onchange="ui.notifications.uiProps.hideBg = this.checked;"'},{label:kt.lang.showTimestamps,type:O.CHECKBOX,id:"context_show-notification-time",checked:this.uiProps.showTimestamp,event:'onchange="ui.notifications.uiProps.showTimestamp = this.checked;"'}]}types={newGame:"newGame",earnedAchivs:"earnedAchivs"};uiDefaultValues={showTimestamp:!0,showHeader:!1,hideBg:!1};uiSetCallbacks={};uiValuePreprocessors={};get NOTIFICATIONS(){return this._notifications??{time:"",notifications:[]}}constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this.initializeElements(),this.addEvents(),this.setValues()}initializeElements(){this.section=document.querySelector("#notification_section"),this.sectionID=this.section.id,this.container=this.section.querySelector(".notification-container"),this.resizer=this.section.querySelector(".resizer")}generateWidget(){const e={classes:["notification_section","bg-visible","section","compact-header"],id:"notification_section",title:kt.lang.alertsSectionName,contentClasses:["notification-container","content-container"]},t=this.generateWidgetElement(e);kt.app.appendChild(t)}addEvents(){super.addEvents()}setElementsValues(){this.section.classList.toggle("compact-timestamp",!this.uiProps.showTimestamp),this.section.classList.toggle("compact-header",!this.uiProps.showHeader),this.section.classList.toggle("hide-bg",this.uiProps.hideBg)}setValues(){At.applyPosition({widget:this}),this.setElementsValues(),this.updateInterval=setInterval((()=>{this.container.querySelectorAll(".notification_timestamp").forEach((e=>{e.innerText=this.getDeltaTime(e.dataset.time)}))}),6e4)}gameChangeEvent(){const e=[{type:U.GAME,value:xt.GAME_DATA}];this.pushAlerts(e)}pushAlerts(e){const t=e=>{const t=this.generatePopupTime(),s=document.createElement("ul");return s.classList.add("notification_timeblock-list"),s.appendChild(t),e.forEach((e=>{s.appendChild(e)})),s};if(0==e.length)return;let s=[];if(e?.forEach((e=>{switch(e.type){case U.CHEEVO:s.push(this.cheevoAlertElement(e.value));break;case U.GAME:s.push(this.gameAlertElement(e.value));break;default:console.log("notification type doesn't exist")}})),s.length>0){const e=t(s);this.container.prepend(e);const i=e.getBoundingClientRect().height;this.container.style.setProperty("--offset-height",`${i}px`),e.classList.add("notification_popup")}}generatePopupTime(e){!e&&(e=(new Date).toLocaleString());const t=document.createElement("li"),s=(e?(e=>{const[t,s]=e.split(", "),[i,n,a]=t.split(".").map(Number),[o,r]=s.split(":").map(Number);return new Date(a,n-1,i,o,r)})(e):new Date).getTime();return t.dataset.time=s,t.classList.add("notification_timestamp"),t.innerHTML=`\n            ${this.getDeltaTime(s)}\n        `,t}gameAlertElement(e){const t=document.createElement("li");return t.classList.add("notification-game","new-game"),t.innerHTML=`\n        <div class="prev">\n          <img class="prev-img" src="${F(e.ImageIcon)}" alt=" ">\n        </div>\n        <div class="notification_details">\n          <h3 class="achiv-name">\n            <a target="_blanc" href="${V(e.ID??e.GameID)}">\n              ${e.Title}\n            </a>\n          </h3>\n          <p class="achiv-description">${e.Genre?e.Genre+",\n":""}${e.ConsoleName}</p>\n          <div class="notification_description-icons">\n            <p class="notification_description-text" data-title="${kt.lang.points}">\n              ${w.points}\n              ${e.totalPoints??""}\n            </p>\n            <p class="notification_description-text" data-title="${kt.lang.retropoints}">\n              ${w.cheevos}\n              ${e.NumAchievements??e.AchievementsTotal}\n            </p>\n            <p class="notification_description-text" data-title="${kt.lang.unlockedBy}">\n              ${w.players}\n              ${e.NumDistinctPlayersHardcore??""}\n            </p>\n          </div>\n        </div>\n      `,t}cheevoAlertElement(e){const t=(e=>{const t=document.createElement("li");t.classList.add("cheevo-column-item"),t.classList.toggle("earned",e.isEarned),t.classList.toggle("hardcore",e.isHardcoreEarned),t.dataset.achivId=e.ID;const s=e.level?.toString()?.split(".")[1],i=e.zone?s?`${e.zone} [${s}]`:e.zone:e.level?.toString()?.replace(".","-");return e.NumAwardedHardcore,e.totalPlayers,t.innerHTML=`\n            <div class="target__buttons-container">\n                <button class="header-button header-icon  target__comments-button edit-cheevo-button edit-icon" data-title="edit props" data-cheevo-id="${e.ID}"></button>\n                <button class="header-button header-icon  target__comments-button comments-button chat-icon" data-title="${ui.lang.showCommentsHint}"></button>\n                <button class="header-button header-icon  delete-icon delete-from-target" data-title="remove"></button>\n            </div>\n            <div class="prev">\n                <img\n                class="prev-img"\n                src="${e.prevSrc}"\n                alt="${e.Title}"\n                />\n            </div>\n            <div class="target__cheevo-details">\n                <h3 class="target__cheevo-header">\n                    ${i?P.cheevoLevel(i,!0):""}\n                    \x3c!--${e.genres.length>0?e.genres?.map((e=>D(e))).join(""):""}--\x3e\n                    <a target="_blanc" data-title="go to RA cheevo-page" href="https://retroachievements.org/achievement/${e.ID}">\n                        ${e.Title}\n                    </a>\n                </h3>\n                <p class="achiv-description">${e.Description}</p>\n                <div class="target-other-descriptions icons-row-list">\n                    ${w.cheevoType(e.Type)}\n                    ${v(e.Points)}\n                    ${E(e.TrueRatio)}\n                    ${f(e.rateEarnedHardcore)}\n                    ${_(e.retroRatio)}\n                    ${P.difficultBadge(e.difficulty)}\n                </div>\n            </div>\n            `,t})(e);return t.classList.add("notification-achiv","new-achiv"),t}getDeltaTime(e){let t=+e,s=~~(((new Date).getTime()-t)/1e3);return s<120?"moment ago":s<600?"few minutes ago":s<3600?~~(s/60)+" minutes ago":s<43200?new Date(t).toLocaleTimeString().replace(/:[^:]*$/gi,""):new Date(t).toLocaleString().replace(/:[^:]*$/gi,"")}}const ot={SEGA:{"SG-1000":"33","Master System":"11","Genesis/Mega Drive":"1","Game Gear":"15","Sega CD":"9","32X":"10",Saturn:"39",Dreamcast:"40"},Nintendo:{"NES/Famicom":"7","Game Boy":"4","SNES/Super Famicom":"3","Game Boy Color":"6","Nintendo 64":"2","Game Cube":"16","Game Boy Advance":"5","Virtual Boy":"28","Nintendo DS":"18","Nintendo DSi":"78","Pokemon Mini":"24"},NEC:{"PC Engine/TurboGrafx-16":"8","PC Engine CD/TurboGrafx-CD":"76","PC-8000/8800":"47","PC-FX":"49"},SONY:{PlayStation:"12","PlayStation 2":"21","PlayStation Portable":"41"},SNK:{"Neo Geo Pocket":"14","Neo Geo CD":"56"},Atari:{"Atari 2600":"25","Atari 7800":"51","Atari Lynx":"13","Atari Jaguar":"17","Atari Jaguar CD":"77"},Other:{"Magnavox Odyssey 2":"23",Arcade:"27","Apple II":"38","Amstrad CPC":"37",MSX:"29","3DO Interactive Multiplayer":"43",ColecoVision:"44",Intellivision:"45",Vectrex:"46",WonderSwan:"53","Fairchild Channel F":"57","Watara Supervision":"63","Mega Duck":"69",Arduboy:"71","WASM-4":"72","Arcadia 2001":"73","Interton VC 4000":"74","Elektor TV Games Computer":"75",Uzebox:"80"},Special:{Events:"101",Standalone:"102"}},rt=Object.freeze({RETAIL:"Retail",HACK:"Hack",UNLICENSED:"Unlicensed",DEMO:"Demo",HOMEBREW:"Homebrew",PROTOTYPE:"Prototype"}),lt={t:"FixedTitle",b:"badges",i:"ID",c:"ConsoleID",j:"ImageIcon",a:"NumAchievements",p:"Points",d:"Date",e:"Coop",r:"Rating",g:"Genres",h:"HLTB"};class ct extends _e{widgetIcon={description:"games widget",iconID:"side-panel__games",onChangeEvent:"ui.games.VISIBLE = this.checked",iconClass:"games-icon"};contextMenuItems(e){return[{type:O.BUTTON,id:"context-update-game",label:"**Update game**",event:`onclick="watcher.updateGameData(${e})"`},{type:O.CHECKBOX,id:"context-add-to-favourites",label:"fav",checked:kt.games.FAVOURITES.includes(+e),event:`onclick="ui.games.addToFavourite(event,${e})"`}]}get headerControls(){return[{type:O.SELECTOR,label:kt.lang.sort,id:"games__sort-selector",selectValues:[{type:O.RADIO,name:"games__sort-type",id:`games__sort-type-${Re}`,label:kt.lang.releaseDate,checked:this.SORT_NAME===Re,event:`onchange="ui.games.SORT_NAME = '${Re}'"`},{type:O.RADIO,name:"games__sort-type",id:`games__sort-type-${De}`,label:kt.lang.points,checked:this.SORT_NAME===De,event:`onchange="ui.games.SORT_NAME = '${De}'"`},{type:O.CHECKBOX,name:"games__sort-type-order",id:"games__sort-type-order",label:kt.lang.reverse,checked:this.REVERSE_SORT,event:'onchange="ui.games.REVERSE_SORT = this.checked"'}]},{type:O.CHECKBOX,label:kt.lang.filter,id:"games__filter-list-checkbox",onChange:"ui.games.showFilters(this.checked)",checked:!1},{type:O.SEARCH_INPUT,label:kt.lang.search,id:"games__search-text-input",value:"",onChange:"ui.games.searchInputEvent(event)",title:kt.lang.searchGameInputHint}]}get platformFilterItems(){return Object.keys(ot).reduce(((e,t)=>{const s={label:t,type:O.GROUP},i=Object.keys(ot[t]).reduce(((e,s)=>{const i={label:s,type:O.CHECKBOX,name:"filter-by-platform",checked:this.PLATFORMS_FILTER.includes(ot[t][s]),onChange:`ui.games.platformCheckboxChangeEvent(this,${ot[t][s]})`,id:`filter-by-platform-${ot[t][s]}`};return e.push(i),e}),[]);return e=[...e,s,...i]}),[])}get awardsFilterItems(){return Object.keys(this.awardTypes).reduce(((e,t)=>{const s={type:O.CHECKBOX,label:this.awardTypes[t],name:"filter-by-award",value:"award",checked:this.AWARD_FILTER.includes(t),onChange:`ui.games.awardCheckboxChangeEvent(this,'${t}')`,id:`filter-by-award-${t}`};return e.push(s),e}),[])}get releaseVersionFilterItems(){return Object.keys(rt).reduce(((e,t)=>{const s={type:O.CHECKBOX,label:rt[t],name:"filter-by-release",value:"release",checked:this.RELEASE_FILTER.includes(rt[t]),onChange:`ui.games.releaseCheckboxChangeEvent(this,'${rt[t]}')`,id:`filter-by-release-${t}`};return e.push(s),e}),[])}get genresFilterItems(){return Object.keys(a).reduce(((e,t)=>{const s={type:O.CHECKBOX,label:a[t],name:"filter-by-genre",checked:this.GENRE_FILTER.includes(t),onChange:`ui.games.genreCheckboxChangeEvent(this,'${t}')`,id:`filter-by-genre-${t}`};return e.push(s),e}),[])}get sortItems(){return[{type:O.RADIO,label:kt.lang.released,name:"games__sort-by",checked:this.SORT_NAME===Re,onChange:`ui.games.SORT_NAME = '${Re}'`,id:"games__sort-by-date"},{type:O.RADIO,label:kt.lang.points,name:"games__sort-by",checked:this.SORT_NAME===De,onChange:`ui.games.SORT_NAME = '${De}'`,id:"games__sort-by-points"}]}set FAVOURITES(e){this._favs=e,Nt.ui.favouritesGames=e,Nt.writeConfiguration()}get FAVOURITES(){return this._favs??[]}set COOP_FILTER(e){this.coopOnly=e,this.updateGamesList()}get COOP_FILTER(){return this.coopOnly??!1}awardCheckboxChangeEvent(e,t){let s=this.AWARD_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.AWARD_FILTER=s}releaseCheckboxChangeEvent(e,t){let s=this.RELEASE_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.RELEASE_FILTER=s}platformCheckboxChangeEvent(e,t){let s=this.PLATFORMS_FILTER;e.checked?s.push(t+""):s=s.filter((e=>e!=t)),this.PLATFORMS_FILTER=s}genreCheckboxChangeEvent(e,t){let s=this.GENRE_FILTER;e.checked?s.push(t):s=s.filter((e=>e!=t)),this.GENRE_FILTER=s}set YEARS_FILTER(e){this.yearsFilter=e,this.updateGamesList()}get YEARS_FILTER(){return this.yearsFilter??{from:-1/0,to:1/0}}set CHEEVOS_COUNT_FILTER(e){this.cheevosCountFilter=e,this.updateGamesList()}get CHEEVOS_COUNT_FILTER(){return this.cheevosCountFilter??{from:-1/0,to:1/0}}set POINTS_PER_CHEEVO_FILTER(e){this.ppcFilter=e,this.updateGamesList()}get POINTS_PER_CHEEVO_FILTER(){return this.ppcFilter??{from:-1/0,to:1/0}}set HLTB_FILTER(e){this.hltbFilter=e,this.updateGamesList()}get HLTB_FILTER(){return this.hltbFilter??{from:0,to:1/0}}set PLATFORMS_FILTER(e){let t=e.filter((e=>Object.keys(m).includes(e)));this.platformsFilter=t,this.updateGamesList()}get PLATFORMS_FILTER(){return this.platformsFilter??[]}set GENRE_FILTER(e){let t=e.filter((e=>Object.keys(a).includes(e)));this.genreFilter=t,this.updateGamesList()}get GENRE_FILTER(){return this.genreFilter??[]}set AWARD_FILTER(e){this.awardFilter=e,this.updateGamesList()}get AWARD_FILTER(){return this.awardFilter??[]}set RELEASE_FILTER(e){this.releaseFilter=e,this.updateGamesList()}get RELEASE_FILTER(){return this.releaseFilter??[rt.RETAIL]}set FAVOURITES_FILTER(e){this.favouritesFilter=e,this.updateGamesList()}get FAVOURITES_FILTER(){return this.favouritesFilter}get TYPES_FILTER(){return Nt.ui?.games_section?.typesFilter??["original"]}set TYPES_FILTER(e){const t=e.dataset.type??"",s=this.TYPES_FILTER;if(e.checked)s.push(t);else{const e=s.indexOf(t);-1!==e&&s.splice(e,1)}Nt.ui.games_section.typesFilter=s,Nt.writeConfiguration(),this.applyFilter()}set REVERSE_SORT(e){Nt._cfg.ui.games_section.reverse_sort=e?-1:1,Nt.writeConfiguration(),this.updateGamesList()}get REVERSE_SORT(){return Nt._cfg.ui?.games_section?.reverse_sort??-1}get SORT_METHOD(){return Ie[this.SORT_NAME]}get SORT_NAME(){return Nt._cfg.ui?.games_section?.sort_name??Re}set SORT_NAME(e){e===this.SORT_NAME&&(Nt._cfg.ui.games_section.reverse_sort=-1*this.REVERSE_SORT),Nt._cfg.ui.games_section.sort_name=e,Nt.writeConfiguration(),this.updateGamesList()}titleFilter="";applyFilter(){const e=this.titleFilter.split(/\s/).map((e=>`(?=.*${e})`)).join(""),t=new RegExp(e,"gi");this.games=this.titleFilter?this.GAMES.filter((e=>`${e.FixedTitle} ${e.badges?.join(" ")} ${m[e.ConsoleID]}`.match(t))):this.GAMES,this.COOP_FILTER&&(this.games=this.games?.filter((e=>"true"==e.Coop))),this.PLATFORMS_FILTER.length>0&&(this.games=this.games?.filter((e=>{let t=!1;for(let s of this.PLATFORMS_FILTER)s==e.ConsoleID&&(t=!0);return t}))),this.GENRE_FILTER.length>0&&(this.games=this.games?.filter((e=>{let t=!1;for(let s of this.GENRE_FILTER)e?.Genres?.includes(+s)&&(t=!0);return t}))),this.FAVOURITES_FILTER&&(this.games=this.games.filter((e=>this.FAVOURITES.includes(e.ID)))),this.AWARD_FILTER.length>0&&(this.games=this.games.filter((e=>{let t=!1;for(let s of this.AWARD_FILTER)s==e.Award&&(t=!0);return t}))),this.RELEASE_FILTER.length>0&&(this.games=this.games.filter((e=>{for(let t of this.RELEASE_FILTER)return t===rt.RETAIL?0===e.badges?.length:e.badges?.includes(t)}))),this.games=this.games.filter((e=>{const t=e.Points/e.NumAchievements;return t<=this.POINTS_PER_CHEEVO_FILTER.to&&t>=this.POINTS_PER_CHEEVO_FILTER.from})),this.games=this.games.filter((e=>{const t=Object.values(e.HLTB||{}),s=Math.min(...t.length?t:[0]);return s<=this.HLTB_FILTER.to&&s>=this.HLTB_FILTER.from})),this.games=this.games.filter((e=>{const t=parseInt(e.NumAchievements)??0;return t<=this.CHEEVOS_COUNT_FILTER.to&&t>=this.CHEEVOS_COUNT_FILTER.from})),this.games=this.games.filter((e=>{const t=+(e.Date?.split("-")?.[0]??0);return t<=this.YEARS_FILTER.to&&t>=this.YEARS_FILTER.from}))}applySort(){this.games=this.games.sort(((e,t)=>this.REVERSE_SORT*this.SORT_METHOD(e,t)))}platformCodes={};awardTypes={mastered:"mastered","beaten-hardcore":"beaten",completed:"completed","beaten-softcore":"beaten softcore",started:"started"};games={};gamesInfo={};constructor(){super(),this.generateWidget(),this.addWidgetIcon(),this._favs=Nt.ui.favouritesGames??[],this.initializeElements(),this.container.appendChild(this.sideMenuElement()),this.setValues(),this.addEvents(),this.gamesList.innerHTML='\n      <button class="games__load-button" onclick="ui.games.loadGames()"></button>\n      ',At.applyPosition({widget:this}),this.section.querySelector(".games__main-controls").innerHTML=this.headerControls.map((e=>k(e))).join("\n")}generateWidget(){const e=document.createElement("div");e.classList.add("games__main-controls");const t={classes:["games_setion","section"],id:"games_section",title:"RA Games Library",headerElementsHtml:`\n            ${Ee("ui.games.loadGames()")}\n            ${fe("ui.games.toggleFullscreen()")}\n        `,contentClasses:["games_container","content-container"]},s=this.generateWidgetElement(t),i=s.querySelector(".games_container");i.innerHTML='\n            <ul class="platform-list" id="games-list" data--console-id="all" data-current-games-array-position="0"></ul>\n        ',s.insertBefore(e,i),kt.app.appendChild(s)}initializeElements(){this.section=document.querySelector("#games_section"),this.header=this.section.querySelector(".header-container"),this.container=this.section.querySelector(".games_container"),this.searchbar=this.section.querySelector("#games__searchbar"),this.platformFiltersList=this.section.querySelector("#games_filter-platform-list"),this.gamesList=this.section.querySelector("#games-list")}setValues(){this.header.classList.add("fixed")}searchInputEvent(e){const t=e.target.value;this.titleFilter=t,e.target.classList.toggle("empty",""==t),this.updateGamesList()}addEvents(){super.addEvents(),this.section.addEventListener("contextmenu",(e=>{const t=e.target.closest(".games__game-item");if(t){e.preventDefault(),e.stopPropagation();const s=t.dataset.id;kt.showContextmenu({event:e,menuItems:this.contextMenuItems(s)})}})),this.section.querySelectorAll(".side-menu__subitem").forEach((e=>{const t=e.querySelector(".side-menu__item-header"),s=e.querySelector(".side-menu__header"),i=e.querySelector(".side-menu__subitem-content"),n=e.querySelector(".side-menu__submenu");t&&i&&t.addEventListener("click",(e=>{e.stopPropagation(),i.classList.add("active")})),s&&n&&s.addEventListener("click",(e=>{e.stopPropagation(),n.classList.remove("active")}))})),this.section.querySelectorAll(".statebox").forEach((e=>e.addEventListener("click",Ye)))}async loadWantToPlay(){const e=await Ot.getWantToPlayGames({});this._favs=Array.from(new Set([...e]))}updateGamesList(){this.applyFilter(),this.applySort(),this.gamesList.innerHTML="",function({list:e,items:t,callback:s}){const i=document.createElement("div");i.classList.add("lazy-load_trigger"),e.appendChild(i);let n=0;const a=20,o=i=>{for(let a=0;a<i&&n<t.length;a++)e.appendChild(s(t[n++]))};o(a);const r=(s,r)=>{s.forEach((s=>{s.isIntersecting&&(o(a),r.unobserve(i),e.appendChild(i),n<t.length&&r.observe(i))}))};new IntersectionObserver(r,{root:null,rootMargin:"0px",threshold:1}).observe(i)}({list:this.gamesList,items:this.games,callback:this.gameElement})}loadGames(){this.loadWantToPlay().then(this.getAllGames().then((()=>{this.updateGamesList()}))),this.loadGameInfo()}async loadGameInfo(){const e=await fetch("./json/games/all_info.json");this.gamesInfo=await e.json()}async getAllGames(){this.GAMES={};try{const e=await fetch("./json/games/all_ext_min.json"),t=(e=>e.map((e=>{let t={};if(Object.keys(e).forEach((s=>{t={...t,[lt[s]]:e[s]}})),t.HLTB){const e=Math.min(...Object.values(t.HLTB)),s=`${e>=60?`${~~(e/60)}hr${e>119?"s":""}`:""} ${e%60>0?e%60+"mins":""}`;t.timeToBeat=s}return t.ImageIcon=`/Images/${t.ImageIcon}.png`,!t.badges&&(t.badges=[]),!t.Genres&&(t.Genres=[]),t})))(await e.json()),s=await Ot.SAVED_COMPLETION_PROGRESS;for(let e of s.Results){let s=t.find((t=>e.ID===t.ID));s?(e.NumAwardedHardcore&&(s.NumAwardedHardcore=e.NumAwardedHardcore),e.HighestAwardKind?s.Award=e.HighestAwardKind:s.Award="started",e.MostRecentAwardedDate&&(s.MostRecentAwardedDate=e.MostRecentAwardedDate)):(s=e,s.ImageIcon=s.ImageIcon.match(/\d+/gi)[0],e.NumAwardedHardcore&&(s.NumAwardedHardcore=e.NumAwardedHardcore),e.HighestAwardKind?s.Award=e.HighestAwardKind:s.Award="started",s.Points="",t.push(s))}this.GAMES=t}catch(e){return[]}}gameElement(e){const t=document.createElement("li");var s,i;return t.classList.add("platform_game-item","games__game-item"),t.dataset.id=e.ID,t.innerHTML=`\n            <img class="game-preview_image" src="${F(e.ImageIcon)}" alt="game preview">\n            <h3 class="game-description_title">\n            <button data-title="${kt.lang.showGameInfoHint}" class="game-description_button"\n                    onclick="ui.games.showGameInfoPopup(${e.ID})">\n                    ${e.FixedTitle} \n                    ${e.Award?P.infoBadge(e.Award):""}\n                    ${e.badges?.length?I(e.badges,"infoBadge"):""} \n                    ${i=e.Coop,"true"===i?P.infoBadge("coop"):""} \n                    ${e.Genres?I((s=e.Genres,s.map((e=>a[e]))),"infoBadge"):""}\n            </button>\n            </h3>\n            <div class="game-description__info icons-row-list"> \n                ${S(e.ConsoleID)}\n                ${y(e.Date||"n/a")}\n                ${A(e.Rating||"n/a")}\n                ${p((e.NumAwardedHardcore?e.NumAwardedHardcore+"/":"")+e.NumAchievements)}\n                ${v(e.Points)}\n                ${T(e.timeToBeat)}\n            </div>\n        `,t}addToFavourite(e,t){const s=this.FAVOURITES.includes(t);this.FAVOURITES=s?this.FAVOURITES.filter((e=>e!=t)):[t,...this.FAVOURITES]}showFilters(e=!0){this.section.querySelector(".section__side-menu")?.classList.toggle("active",e)}toggleFilterList(e,t){const s=()=>{this.section.querySelector(".games__filters-list")?.remove(),this.section.querySelectorAll(".games__filter-header .extended").forEach((e=>e.classList.remove("extended")))},i=e.target.closest("button");if(i.classList.contains("extended"))s();else{let e;switch(s(),i.classList.add("extended"),t){case"platform":e=this.generateCheckboxList(this.platformFilterItems);break;case"award":e=this.generateCheckboxList(this.awardsFilterItems);break;case"genre":e=this.generateCheckboxList(this.genresFilterItems)}this.section.append(e),this.section.querySelector(".games__filter-container").appendChild(e)}}toggleSortList(e){const t=()=>{this.section.querySelector(".games__filters-list")?.remove(),this.section.querySelectorAll(".games__filter-header .extended").forEach((e=>e.classList.remove("extended")))};if(e.target.classList.contains("extended"))t();else{e.target.classList.toggle("extended");const t=this.generateCheckboxList(this.sortItems);this.section.append(t),this.section.querySelector(".games__filter-container").appendChild(t)}}generateCheckboxList(e){const t=Object.values(e).reduce(((e,t)=>{if("group"==t.type){const s=document.createElement("li");s.classList.add("filter-list__platform-header"),s.innerText=t.label+": ",e.appendChild(s)}else{const s=document.createElement("li");s.classList.add("checkbox-input_container"),s.innerHTML=k(t),e.appendChild(s)}return e}),document.createElement("ul"));return t.classList.add("games__filters-list"),t}async showGameInfoPopup(e=1){const t=({label:e,value:t})=>`\n            <div class="game-description__property">\n                ${e}: <span>${t}</span>\n            </div>\n        `,s=e=>`<img src="${F(e)}" alt="game preview" class="game__image">`;document.querySelectorAll(".game-popup__section").forEach((e=>e.remove()));const i=document.createElement("div"),n=await Ot.getGameInfoAndProgress({gameID:e});i.innerHTML=`\n            <section class="section game-popup__section">\n                <div class="game-popup__header-container header-container">\n                    <h2 class="widget-header-text"><a href="${V(n.ID)}" target="_blank">${n.FixedTitle} ${I(n.badges)}</a></h2>\n                    ${ge("this.closest('section').remove();")}\n                </div>\n                <div class="game-info__container">\n                    <div class="game-info__images-container scrollable">\n                        ${s(n.ImageBoxArt)}\n                        ${s(n.ImageIngame)}\n                        ${s(n.ImageTitle)}\n                    </div>\n                    <div class="game-info__descriptions-container">\n                        ${t({label:kt.lang.platform,value:n?.ConsoleName})}\n                        ${t({label:kt.lang.developer,value:n?.Developer})}\n                        ${t({label:kt.lang.genre,value:n?.Genre})}\n                        ${t({label:kt.lang.publisher,value:n?.Publisher})}\n                        ${t({label:kt.lang.released,value:n?.Released})}\n                        ${t({label:kt.lang.cheevosCount,value:`${n?.NumAwardedToUserHardcore} / ${n?.NumAwardedToUser} / ${n?.NumAchievements}`})}\n                        ${t({label:kt.lang.retropoints,value:`${n?.earnedStats.hard.retropoints} / ${n?.TotalRetropoints}`})}\n                        ${t({label:kt.lang.points,value:`${n?.earnedStats.hard.points} / ${n?.earnedStats.soft.points} / ${n?.totalPoints}`})}\n                        ${t({label:kt.lang.retroRatio,value:n?.retroRatio})}\n                        ${t({label:kt.lang.players,value:`${n?.masteredCount} / ${n?.beatenCount} / ${n?.players_total}`})}\n                        ${t({label:kt.lang.completion,value:`${n?.masteryRate}% / ${n?.beatenRate}%`})}\n                    </div>\n                    <div class="game-info__cheevos-container"></div>\n                </div>\n            </section>\n        `,kt.app.appendChild(i)}toggleFullscreen(){this.section.classList.toggle("fullscreen")}sideMenuElement(e,t){e?t=`<-- ${t}`:(t=`${kt.lang.filters}`,e=[{title:`${kt.lang.platform}`,type:"submenu",submenu:[{elements:this.platformFilterItems}]},{title:`${kt.lang.genre}`,type:"submenu",submenu:[{elements:this.genresFilterItems}]},{title:`${kt.lang.releaseYear}:`,elements:[{type:O.NUM_INPUT,id:"side-list-released-from",label:`${kt.lang.from}`,onChange:"ui.games.YEARS_FILTER =  {...ui.games.YEARS_FILTER, from: Number(this.value) || 0}"},{type:O.NUM_INPUT,id:"side-list-released-to",label:`${kt.lang.to}`,onChange:"ui.games.YEARS_FILTER =  {...ui.games.YEARS_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${kt.lang.cheevosCount}:`,elements:[{type:O.NUM_INPUT,id:"side-list-cheevos-from",label:`${kt.lang.from}`,onChange:"ui.games.CHEEVOS_COUNT_FILTER =  {...ui.games.CHEEVOS_COUNT_FILTER, from: Number(this.value) || 0}"},{type:O.NUM_INPUT,id:"side-list-cheevos-to",label:`${kt.lang.to}`,onChange:"ui.games.CHEEVOS_COUNT_FILTER =  {...ui.games.CHEEVOS_COUNT_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${kt.lang.pointsPerCheevo}:`,elements:[{type:O.NUM_INPUT,id:"side-list-ppc-from",label:`${kt.lang.from}`,onChange:"ui.games.POINTS_PER_CHEEVO_FILTER = {...ui.games.POINTS_PER_CHEEVO_FILTER, from: Number(this.value) || 0}"},{type:O.NUM_INPUT,id:"side-list-ppc-to",label:`${kt.lang.to}`,onChange:"ui.games.POINTS_PER_CHEEVO_FILTER = {...ui.games.POINTS_PER_CHEEVO_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${kt.lang.hltb}:`,elements:[{type:O.NUM_INPUT,id:"side-list-hltb-from",label:`${kt.lang.from}`,onChange:"ui.games.HLTB_FILTER =  {...ui.games.HLTB_FILTER, from: Number(this.value) || 0}"},{type:O.NUM_INPUT,id:"side-list-released-to",label:`${kt.lang.to}`,onChange:"ui.games.HLTB_FILTER =  {...ui.games.HLTB_FILTER, to: Number(this.value) || Infinity}"}]},{title:`${kt.lang.highestAward}:`,elements:this.awardsFilterItems},{title:`${kt.lang.releaseVersion}:`,elements:this.releaseVersionFilterItems},{title:`${kt.lang.other}:`,elements:[{type:O.CHECKBOX,label:"WTPlay",checked:this.FAVOURITES_FILTER,onChange:"ui.games.FAVOURITES_FILTER = this.checked",id:"filter-by-wtp"},{type:O.CHECKBOX,label:"Coop",checked:this.COOP_FILTER,onChange:"ui.games.COOP_FILTER = this.checked",id:"filter-by-coop"}]}]);const s=({title:e,elements:t,type:s,submenu:i})=>{const n=e=>`<h3 class="side-menu__item-header">\n                        ${e}\n                    </h3>`,a=(e,t)=>`\n                <div class="side-menu__item-container side-menu__subitem" >\n                    ${t?n(t):"<br>"}\n                    <div class="side-menu__subitem-content side-menu__submenu">\n                        ${this.sideMenuElement(e,t).outerHTML}\n                    </div>\n                </div>\n            `;return"submenu"===s?a(i,e):`\n                <div class="side-menu__item-container">\n                    ${e?n(e):"<br>"}\n                    <div class="side-menu__item-inputs">\n                        ${t.map((e=>"object"==typeof e?k(e):e)).join("\n")}\n                    </div>\n                </div>\n            `},i=document.createElement("div");return i.classList.add("section__side-menu"),i.innerHTML=`\n            <h2 class="side-menu__header">${t}</h2>\n            <div class="side-menu__content scrollable">\n                ${e.map((e=>s(e))).join("")}\n            </div>\n        `,i}}class ht extends _e{widgetIcon={description:"status widget (v2)",iconID:"side-panel__status-v2",onChangeEvent:"ui.status.VISIBLE = this.checked",badgeLabel:"v2",iconClass:"status-icon"};get contextMenuItems(){return[{label:kt.lang.elements,elements:[{type:O.CHECKBOX,id:"context-show-rp",label:kt.lang.richPresence,checked:this.uiProps.showRichPresence,event:'onchange="ui.status.uiProps.showRichPresence = this.checked"'},{type:O.CHECKBOX,id:"context-show-ticker",label:kt.lang.ticker,checked:this.uiProps.showTicker,event:'onchange="ui.status.uiProps.showTicker = this.checked"'},{type:O.CHECKBOX,id:"context-show-progression",label:kt.lang.progression,checked:this.uiProps.showProgression,event:'onchange="ui.status.uiProps.showProgression = this.checked"'},{type:O.CHECKBOX,id:"context-show-progressbar",label:kt.lang.progressbar,checked:this.uiProps.showProgressbar,event:'onchange="ui.status.uiProps.showProgressbar = this.checked"'}]},{label:kt.lang.time,elements:[{type:O.RADIO,name:"context_game-time",id:"context_show-playTime",label:kt.lang.gameTime,checked:"playTime"==this.uiProps.time,event:"onclick=\"ui.status.uiProps.time = 'playTime';\""},{type:O.RADIO,name:"context_game-time",id:"context_show-sessionTime",label:kt.lang.sessionGameTime,checked:"sessionTime"==this.uiProps.time,event:"onclick=\"ui.status.uiProps.time = 'sessionTime';\""},{type:O.RADIO,name:"context_game-time",id:"context_show-totalTime",label:kt.lang.totalTime,checked:"totalSessionTime"==this.uiProps.time,event:"onclick=\"ui.status.uiProps.time = 'totalSessionTime';\""},{type:O.RADIO,name:"context_game-time",id:"context_show-timer",label:kt.lang.timer,checked:"timer"==this.uiProps.time,event:"onclick=\"ui.status.uiProps.time = 'timer';\""},{prefix:kt.lang.timer,postfix:kt.lang.min,type:O.NUM_INPUT,id:"context-menu_stats-timer-duration",label:kt.lang.timer,value:~~(this.uiProps.timerTime/60*100)/100,event:'onchange="ui.status.uiProps.timerTime = this.value;"',onChange:"ui.status.uiProps.timerTime = this.value;"}]}]}uiProps=new Proxy({},{get:(e,t)=>{const s=this.uiDefaultValues[t]??!0;return Nt.getUIProperty({sectionID:this.sectionID,property:t})??s},set:(e,t,s)=>{const i=this.uiValuePreprocessors[t];"function"==typeof i&&(s=i(s)),Nt.saveUIProperty({sectionID:this.sectionID,property:t,value:s});const n=this.uiSetCallbacks?.[t];return"function"==typeof n?n.call(this,s):this.setElementsProperties(),!0}});uiDefaultValues={time:"playTime",timerTime:30};uiSetCallbacks={time(e){this.gameElements.time.innerText=this.getActiveTime()}};uiValuePreprocessors={timerTime:e=>(e<=0&&(e=1),e>1440&&(e=1440),60*e)};ACHIV_DURATION=15e3;IS_HARD_MODE=!0;getActiveTime=()=>{let e=0;switch(this.uiProps.time){case"totalSessionTime":e=xt.playTime.sessionTime;break;case"playTime":e=xt.playTime.totalGameTime;break;case"sessionTime":e=xt.playTime.gameTime;break;case"timer":e=this.uiProps.timerTime-xt.playTime.gameTime}return o(e,!0)};constructor(){super(),this.addWidgetIcon(),this.initializeElements(),At.applyPosition({widget:this}),this.setElementsProperties(),this.addEvents()}initializeElements(){this.section=document.querySelector(".rp__section"),this.sectionID=this.section.id,this.watchButton=this.section.querySelector("#rp__watch-button"),this.indicatorElement=this.section.querySelector(".rp__indicator"),this.gameElements={icon:this.section.querySelector(".rp__game-image"),title:this.section.querySelector(".rp__game-title"),platform:this.section.querySelector(".rp__game-platform"),gameIcons:this.section.querySelector(".rp__game-icons"),time:this.section.querySelector(".rp__game-time")},this.alertElements={container:this.section.querySelector(".rp__alert-container"),preview:this.section.querySelector(".rp__alert-preview"),title:this.section.querySelector(".rp__alert-title"),description:this.section.querySelector(".rp__alert-description"),badges:this.section.querySelector(".rp__alert-badges")},this.richPresenceElement=this.section.querySelector(".rp__rich-presence"),this.progressionElements={header:this.section.querySelector(".rp__progression-target"),pointsContainer:this.section.querySelector(".rp__progression-points")},this.progressbarElements={container:this.section.querySelector(".rp__progressbar-container"),title:this.section.querySelector(".rp__progressbar-title"),lastCheevos:this.section.querySelector(".rp__last-cheevos")},this.tickerElement=this.section.querySelector(".rp__ticker"),this.ticker=ze({container:this.tickerElement,textGenerator:je}),this.cheevosList=this.section.querySelector(".rp__target-cheevos")}addEvents(){this.section.addEventListener("mousemove",(e=>{this.section.classList.remove(...Object.values(ne).map((e=>"hover-"+e)),"resize-hover");const t=oe(e,this.section);t&&this.section.classList.add(`hover-${t}`,"resize-hover")})),this.section.addEventListener("mousedown",(e=>{const t=oe(e,this.section);e.target.matches(".resizer")||t?(this.section.classList.add("resized"),ae({event:e,section:this.section,resizeDirection:e.target.matches(".resizer")?ne.bottomRight:t})):e.target.matches(".comments-button")?(e.stopPropagation(),Ge(xt.GAME_DATA?.ID,1)):e.target.matches(".game-props-button")?(e.stopPropagation(),qe().open(xt.GAME_DATA)):e.target.matches(".close-icon")?(e.stopPropagation(),this.close()):ie(this.section,e)})),this.section.addEventListener("contextmenu",(e=>{kt.showContextmenu({event:e,menuItems:this.contextMenuItems})})),this.watchButton.addEventListener("click",(e=>{e.stopPropagation(),xt.isActive?xt.stop():xt.start()}))}setElementsProperties(){this.cheevosList.classList.toggle("grid-list","grid"==this.LIST_TYPE),this.section.classList.toggle("show-ticker",this.uiProps.showTicker),this.section.classList.toggle("show-progression",this.uiProps.showProgression),this.section.classList.toggle("show-progressbar",this.uiProps.showProgressbar),this.richPresenceElement.classList.toggle("hidden",!this.uiProps.showRichPresence),this.uiProps.showTicker&&xt.GAME_DATA&&this.ticker.startScrolling()}gameChangeEvent(e=!1){e&&xt.IS_WATCHING&&this.addAlertsToQuery([{type:U.GAME,value:xt.GAME_DATA}]),this.fillGameData(),this.uiProps.showTicker&&this.ticker.startScrolling()}fillProgression=()=>{const e=e=>this.IS_HARD_MODE?e.isHardcoreEarned?"earned":"":e.isEarned?"earned":"",t=Object.values(xt.CHEEVOS).filter((e=>e.Type==ye.PROGRESSION)).sort(((e,t)=>Ie.default(e,t))),s=Object.values(xt.CHEEVOS).filter((e=>e.Type==ye.WIN)),i=t.reduce(((t,s)=>t+=`\n                    <div class="rp__progression-point ${e(s)}" data-achiv-id=${s.ID}></div>\n                `),""),n=s.reduce(((t,s)=>t+=`<div class="rp__progression-point win ${e(s)}" data-achiv-id=${s.ID}></div>`),"");this.progressionElements.pointsContainer.innerHTML=i+n;const a=Object.values(xt.CHEEVOS).filter((e=>Te.progression(e))).sort(((e,t)=>Ie.default(e,t))),o=a.find((t=>!e(t))),r=a.findIndex((t=>!e(t)));this.progressionElements.header.innerHTML=o?`${P.gold(`${r+1}/${a?.length}`)} ${o.Description}`:xt.GAME_DATA?.progressionAward?kt.lang.gameBeatenMsg:kt.lang.noProgressionMsg;const l=this.progressionElements.pointsContainer.querySelector(`[data-achiv-id="${o?.ID}"`);l?.classList.add("focus"),Oe({container:this.progressionElements.pointsContainer,element:l||this.progressionElements.pointsContainer.querySelector(".rp__progression-point:last-child"),scrollByY:!1,scrollByX:!0})};fillGameData(){(()=>{const{ImageIcon:e,FixedTitle:t,badges:s,ConsoleName:i,ConsoleID:n,ID:a,NumAchievements:o,totalPoints:r,retroRatio:l}=xt.GAME_DATA;this.gameElements.icon.setAttribute("src",F(e)),this.gameElements.title.innerHTML=`\n            ${t||"Some game name"}\n            ${I(s)}\n            `,this.gameElements.title.setAttribute("href",V(a)),setTimeout((()=>this.startAutoScrollElement(this.gameElements.title,!0,1e4)),1e4),this.gameElements.platform.innerHTML=S(n),this.richPresenceElement.innerText=kt.lang.richPresence,this.gameElements.gameIcons.innerHTML=`\n                ${p(o)}\n                ${v(r)}\n                ${_(l)}\n            `;const c=this.getActiveTime();this.gameElements.time.innerHTML=c})(),this.fillProgression(),(()=>{const e=this.IS_HARD_MODE?xt.GAME_DATA?.earnedStats?.hard?.count??0:xt.GAME_DATA?.earnedStats?.soft?.count??0,t=xt.GAME_DATA?.NumAchievements??"";this.progressbarElements.title.innerHTML=(()=>{switch(xt.GAME_DATA.award){case"mastered":return kt.lang.gameMasteredMsg;case"completed":return kt.lang.gameCompletedMsg;default:const s=`${e}/${t} ${P.gold(parseInt(100*e/t)+"%")}`;return kt.lang.unlockProgressMsg?.replace("***",s)}})(),this.progressbarElements.container.style.setProperty("--earnedRate",100*e/t+"%");const s=Object.values(xt.CHEEVOS).filter((e=>Te.earned(e))).sort(((e,t)=>Ie.latest(e,t,1,!0))).slice(0,6).reverse();this.progressbarElements.lastCheevos.innerHTML=s.reduce(((e,t)=>e+=`\n                <li class="last-cheevo" data-achiv-id="${t.ID}"><img class="last-cheevo__img"\n                            src="${B(t.BadgeName)}" alt=""></li>\n            `),"")})(),this.startAutoScrollElement(this.richPresenceElement,!0,1e4)}updateProgress({earnedAchievementIDs:e}){const t=()=>{const e=this.IS_HARD_MODE?xt.GAME_DATA?.earnedStats?.hard?.count??0:xt.GAME_DATA?.earnedStats?.soft?.count??0,t=xt.GAME_DATA?.NumAchievements??"";this.progressbarElements.title.innerHTML=(()=>{switch(xt.GAME_DATA.award){case"mastered":return kt.lang.gameMasteredMsg;case"completed":return kt.lang.gameCompletedMsg;default:const s=`${e}/${t} ${P.gold(parseInt(100*e/t)+"%")}`;return kt.lang.unlockProgressMsg?.replace("***",s)}})(),this.progressbarElements.container.style.setProperty("--earnedRate",100*e/t+"%");const s=Object.values(xt.CHEEVOS).filter((e=>Te.earned(e))).sort(((e,t)=>Ie.latest(e,t,1,!0))).slice(0,6).reverse();this.progressbarElements.lastCheevos.innerHTML=s.reduce(((e,t)=>e+=`\n                <li class="last-cheevo cheevo-popup" data-achiv-id="${t.ID}"><img class="last-cheevo__img"\n                            src="${B(t.BadgeName)}" alt=""></li>\n            `),"")};e?.length>0&&(this.IS_HARD_MODE=!!xt.CHEEVOS[e[0]].isHardcoreEarned),e.forEach((e=>{const s=xt.CHEEVOS[e]?.isHardcoreEarned?"hardcore":"-";this.section.querySelectorAll(`[data-achiv-id="${e}"]`).forEach((e=>e.classList.add("earned",s))),this.fillProgression(),t()}))}alertsQuery=[];addAlertsToQuery(e){this.alertsQuery.length>0?this.alertsQuery=[...this.alertsQuery,...e]:(this.alertsQuery=[...e],this.startAlerts())}async startAlerts(){const e=()=>{this.alertElements.container.classList.remove("hide-alert","show-alert","new-game","new-achiv","new-award","stats","beaten","mastered","hardcore","mastered","beaten-softcore","completed")},t=e=>{const{FixedTitle:t,badges:s,ImageIcon:i,totalPoints:n,ConsoleName:a,TotalRetropoints:o,NumAchievements:r,masteryRate:l,beatenRate:c}=e;this.alertElements.preview.src=F(i),this.alertElements.title.innerHTML=`${t} ${I(s)}\n            <i class="badge">${a}</i>\n            `;let h=`\n                ${D(w.cheevos+r)}\n                ${D(w.points+n)}\n                ${D(w.retropoints+o)}\n                ${D(l+"% MASTERED RATE")}\n                ${D(c+"% BEATEN RATE")}\n            `;this.alertElements.description.innerText="",this.alertElements.badges.innerHTML=h,this.alertElements.container.classList.add("new-game")},s=e=>{const{isHardcoreEarned:t,Title:s,prevSrc:i,Points:n,TrueRatio:a,rateEarned:o,rateEarnedHardcore:r,difficulty:l}=e;this.alertElements.preview.src=i,this.alertElements.title.innerHTML=`\n                ${s}`,this.alertElements.description.innerText=e.Description;let c=t?`\n                    ${D(w.points+" +"+n)}\n                    ${D(w.retropoints+" +"+a)}\n                    ${D("TOP"+r)}\n                    ${P.difficultBadge(l)}\n                `:`\n                    ${D(w.points+" +"+n)}\n                    ${D("TOP"+o)}\n                    ${P.difficultBadge(l)}\n                `,h=e.genres?.map((e=>D(e)))?.join("\n")??"";this.alertElements.badges.innerHTML=h+c,this.alertElements.container.classList.toggle("hardcore",e.isHardcoreEarned),this.alertElements.container.classList.add("new-achiv")},i=(e,t)=>{const{FixedTitle:s,badges:i,ImageIcon:n,totalPoints:a,earnedStats:o,TotalRetropoints:r,masteryRate:l,beatenRate:c,completedRate:h,beatenSoftRate:d,ID:m,NumAchievements:g,TimePlayed:u}=e,p="mastered"==t?l:"beaten"==t?c:"completed"==t?h:d,v=(e=>{const t=~~(e/3600),s=~~((e-3600*t)/60);return`\n          ${t>0?1==t?"1 hour ":t+" hours ":""}\n          ${t>0&&s>0?"and ":""}\n          ${s>0?1==s?"1 minute":s+" minutes":""}\n            `})(u);this.alertElements.preview.src=F(n),this.alertElements.title.innerHTML=`${s} ${I(i)}\n            ${D("GAINED AWARD")}`;let E=`\n                ${D(`${t} IN ${v}`)}\n                ${D(`TOP${p}%`)}\n                ${D(`${w.cheevos}${o.hard.count}/${g}`)}\n                ${D(`${w.points}${o.hard.points}/${a}`)}\n                ${D(`${w.retropoints}${o.hard.retropoints}/${r}`)}\n            `;this.alertElements.badges.innerHTML=E,this.alertElements.description.innerText="",this.alertElements.container.classList.add(t),this.alertElements.container.classList.add("new-award")},n=e=>{this.alertElements.preview.src=Nt.userImageSrc,this.alertElements.title.innerHTML=`\n                ${Nt.USER_NAME.toUpperCase()} statistics:\n            `;let t=`\n                ${e.rank?D(`Rank: ${e.rank} ${e.deltaRank}`):""}\n                ${e.percentile?D(`TOP ${e.percentile.toFixed(2)}% ${e.deltaPercentile}`):""}\n                ${D(`${w.cheevos} +${e.cheevosCount}`)}\n                ${D(`${w.points}${e.points} ${e.deltaPoints}`)}\n                ${D(`${w.retropoints}${e.retroPoints} ${e.deltaRetroPoints}`)}\n                ${D(`${w.points}${e.softPoints}SP ${e.deltaSoftPoints}`)}\n            `;this.alertElements.badges.innerHTML=t,this.alertElements.description.innerText="",this.alertElements.container.classList.add("stats")},a=a=>{switch(e(),a.type){case U.GAME:t(a.value);break;case U.CHEEVO:s(a.value);break;case U.AWARD:i(a.value,a.award);break;case U.STATS:n(a.value)}};for(;this.alertsQuery.length>0;){const t=this.alertsQuery[0];if(!t.value)return void this.alertsQuery.shift();const s=()=>{a(t),this.alertElements.container.classList.add("show-alert"),setTimeout((()=>{this.startAutoScrollElement(this.alertElements.title),this.startAutoScrollElement(this.alertElements.badges),this.startAutoScrollElement(this.alertElements.description)}),2e3)},i=()=>{this.alertElements.container.classList.add("hide-alert"),setTimeout((()=>e()),500),this.alertsQuery.shift(),this.stopAutoScrollElement(this.alertElements.badges,!0),this.stopAutoScrollElement(this.alertElements.description,!0),this.stopAutoScrollElement(this.alertElements.title,!0)};await G(1e3),s(),await G(this.ACHIV_DURATION),i()}}timeWatcher(){this.watchButton.classList.toggle("active",xt.isActive),this.section.classList.toggle("watching",xt.IS_ONLINE&&xt.isActive);return{start:()=>{this.timeWatcher().stop(),this.indicatorElement.classList.add("online"),this.gameTimeInterval=setInterval((()=>{"timer"===this.uiProps.time&&xt.playTime.timer<0&&this.section.classList.add("timer-timeout");const e=this.getActiveTime();e&&e!==this.gameElements.time.innerHTML&&(this.gameElements.time.innerHTML=e)}),1e3)},stop:()=>{this.gameTimeInterval&&clearInterval(this.gameTimeInterval),this.indicatorElement.classList.remove("offline","online","error","blink","realtime")}}}BLINK_ON_UPDATE=!0;blinkUpdate(){this.indicatorElement.classList.remove("offline","blink"),this.section.classList.toggle("offline",!xt.IS_ONLINE),this.indicatorElement.classList.toggle("online",xt.IS_ONLINE),this.indicatorElement.classList.toggle("realtime",xt.IS_ONLINE&&xt.isLogOK),this.BLINK_ON_UPDATE&&xt.IS_ONLINE||xt.IS_ONLINE}autoscrollAlertInterval={};startAutoScrollElement(e,t=!0,s=1e3){const i=e.id||e.className;this.autoscrollAlertInterval[i]?this.stopAutoScrollElement(e):this.autoscrollAlertInterval[i]={};const n=e;this.autoscrollAlertInterval[i].interval=setInterval((()=>{n.clientWidth==n.scrollWidth?(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),1e4)):t?(n.scrollLeft++,n.scrollLeft+n.clientWidth>=n.scrollWidth&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!1,s)),s))):(n.scrollLeft--,0==n.scrollLeft&&(this.stopAutoScrollElement(e),this.autoscrollAlertInterval[i].timeout=setTimeout((()=>this.startAutoScrollElement(e,!0,s)),s)))}),50)}stopAutoScrollElement(e,t=!1){t&&(e.scrollLeft=0);const s=e.id||e.className;clearInterval(this.autoscrollAlertInterval[s].interval),clearTimeout(this.autoscrollAlertInterval[s].timeout)}fitCheevosSize(e){let t,s;e.style.flex="1",t=e.clientHeight-2,s=e.clientWidth-10,e.style.flex="";const i=e.querySelectorAll(".target-achiv:not(.removed)").length;if(0===i)return;let n,a,o=Math.floor(Math.sqrt(s*t/i));do{o--,n=Math.floor(t/(o+2)),a=Math.floor(s/(o+2))}while(n*a<i&&o>36);o=o<36?36:o>128?128:o,e.style.setProperty("--achiv-height",o+"px")}}class dt{}class mt extends _e{widgetIcon={description:"game series",iconID:"side-panel__game-list",onChangeEvent:"ui.gameList.VISIBLE = this.checked",iconClass:"playlist-icon"};set VISIBLE(e){super.VISIBLE=e,xt.GAME_DATA?.ID!==this.gameSetID&&this.generateGamesSet()}get VISIBLE(){return super.VISIBLE}constructor(){super(),this.generateWidget(),this.initializeElements(),this.addWidgetIcon(),this.setElementsVisibility(),this.addEvents(),At.applyPosition({widget:this})}initializeElements(){this.section=document.getElementById("game-list"),this.content=this.section.querySelector(".widget-content__container")}gameChangeEvent(){this.VISIBLE&&this.generateGamesSet()}setElementsVisibility(){}addEvents(){super.addEvents(),this.section.querySelector(".update-icon")?.addEventListener("click",(()=>this.generateGamesSet()))}generateWidget(){const e=`\n            <div class="header-button header-icon update-icon" title="${kt.lang.forceReloadHint}"></div>\n        `,t={classes:["game-list__section","section"],id:"game-list",title:kt.lang.gameSeriesSectionName,headerElementsHtml:e},s=this.generateWidgetElement(t);kt.app.appendChild(s)}generateWidgetContent(){this.content.innerHTML=""}async generateGamesSet(){const e=this.gameSetID=xt.GAME_DATA?.ID,t=await gt(e),s=(await Ot.SAVED_COMPLETION_PROGRESS)?.Results,i=this.section.querySelector(".widget-header-text"),n=this.section.querySelector(".widget-content__container");t.value=(await Promise.all(t?.value?.map((async e=>{const t=await ut(e.ID);return e.Date=t?.Date,e.Award=s.find((t=>e.ID===t.GameID))?.HighestAwardKind??"",e}))))?.sort(((e,t)=>Ie.date(e,t)));const a=t?.value.reduce(((t,s)=>{var i;return t+=`\n                <li class="game-info__set-item main-column-item right-bg-icon award-type ${s.Award} ${e==s.ID?"focus":""}">\n                    <img class="awards__game-preview" src="${i=s.ImageIcon,`https://media.retroachievements.org/Images/${i}.png`}" alt=" ">\n                    <h3 class="game-title">\n                        <a target="_blank" data-title="${kt.lang.goToRAHint}" href="${V(s.ID)}">\n                    ${s.Title} ${I(s?.badges)}</a></h3>\n                    <p class="awards__game-description">${s.Console}</p>\n                    <p class="awards__game-description">${s.Date??"Date unavailable"}</p>\n                </li>\n            `}),"");i.innerHTML=`${t.name} Series`,n.innerHTML=`<ul class="flex-main-list">${a}<ul>`,n.querySelector(".focus")?.scrollIntoView()}}const gt=async(e=1)=>{if(!xt.gamesSets){const e=await fetch("./json/games/gamesSets.json");xt.gamesSets=await e.json()}const t=Object.keys(xt.gamesSets);for(let s=0;s<t.length;s++){const i=t[s];if(xt.gamesSets[i].find((t=>t.ID===e)))return{name:i,value:xt.gamesSets[i]}}},ut=async e=>{if(!kt.gamesExtInfo){const e=await fetch("./json/games/all_ext.json");kt.gamesExtInfo=await e.json()}return e?kt.gamesExtInfo.find((t=>t.ID==e)):void 0};class pt extends _e{widgetIcon={description:"links widget",iconID:"side-panel__links",onChangeEvent:"ui.links.VISIBLE = this.checked",iconClass:"link-icon"};links=[{name:"RetroAchievements",url:"https://retroachievements.org"},{name:"RA API docs",url:"https://api-docs.retroachievements.org"},{name:"ROM Patcher",url:"https://www.marcrobledo.com/RomPatcher.js/"},{name:"WoWRoMs",url:"https://wowroms.com/en/"},{name:"Emu-Land",url:"https://www.emu-land.net/en/"},{name:"GitHub [Project]",url:"https://github.com/taras240/retro-api"},{name:"Discord [Project]",url:"https://discord.gg/apzc6kCAbH"}];constructor(){super(),this.generateWidget(),this.initializeElements(),this.addWidgetIcon(),this.addEvents(),this.generateWidgetContent(),At.applyPosition({widget:this})}generateWidget(){const e={classes:["links_section","section"],id:"links_section",title:kt.lang.linksSectionName,contentClasses:["links-container","content-container","flex-main-list"]},t=this.generateWidgetElement(e);kt.app.appendChild(t)}initializeElements(){this.section=document.querySelector("#links_section")}addEvents(){super.addEvents()}generateWidgetContent(){const e=this.section.querySelector(".links-container"),t=this.links.map((({name:e,url:t,iconUrl:s})=>`<li class="links__link-item">\n                <a class="signed-icon links__link-container" href="${t}" target="_blank">\n                    ${s?`<img class="links__link-image" src="${s}" alt="${e}">`:" "}\n                    <span class="links__link-title">${e}</span>\n                </a>\n            </li> `)).join("");e.innerHTML=`<ul class="flex-main-list links-list">${t}</ul>`}}const vt=["Level","Levels","Stage\\b","Stages","Area","World","Mission","Chapter","Section","Zone","Phase","Realm","Domain","Episode","Act","Acts","Tier","Floor","Floors","Dimension","Region","Scene","Screen","Round\\b","Course","Board"],Et=[...vt,...vt.map((e=>e.toLowerCase())),"🚩","\\bin\\b"],ft=["Zone","Stage","Area","Mission","Chapter","Section","World","Scene"],_t={one:"1",first:"1",two:"2",second:"2",three:"3",third:"3",four:"4",fourth:"4",five:"5",fifth:"5",six:"6",sixth:"6",seven:"7",seventh:"7",eight:"8",eighth:"8",nine:"9",ninth:"9",ten:"10",tenth:"10",eleven:"11",eleventh:"11",twelve:"12",twelfth:"12",thirteen:"13",thirteenth:"13",fourteen:"14",fourteenth:"14",fifteen:"15",fifteenth:"15",sixteen:"16",sixteenth:"16",seventeen:"17",seventeenth:"17",eighteen:"18",eighteenth:"18",nineteen:"19",nineteenth:"19",twenty:"20",twentieth:"20"};function yt(e){e=e.replaceAll(/(\d)(st|nd|rd|th)/gi,((e,t)=>t));const t=new RegExp(Object.keys(_t).map((e=>`\\b${e}\\b`)).join("|"),"gi");return e=e.replace(t,(e=>_t[e.toLowerCase().trim()]))}const Tt=({title:e="Message!",message:t="",elements:s=[]})=>{const i=document.createElement("div");return i.addEventListener("mousedown",(e=>e.stopPropagation())),i.classList.add("dialog-window","section"),i.innerHTML=`\n        <h2 class="dialog__header">${e}</h2>\n        <button class="dialog-close-icon header-icon header-button close-icon" onclick="this.closest('.section').remove();"></button>\n        <p>${t}</p>\n        <div class="dialog__inputs-row">${s.map((e=>k(e))).join("")}</div>\n    `,i};class At{VERSION="0.81";isCEF=!("Notification"in window);CURRENT_LEVEL;AUTOCLOSE_CONTEXTMENU=!1;STICK_MARGIN=1;STICK_TOLERANCE=7;hltb={};twitchClient=new dt;gamePopup=()=>qe();constructor(){this.initUI()}async loadLang(){const e=await fetch(Je(Ze.en)),t=await e.json(),s=Nt.ui?.local??Ze.en;if(s===Ze.en)this.lang=t;else{const e=await fetch(Je(s)),i=await e.json();this.lang={...t,...i}}await G(25)}async initUI(){await this.loadLang(),await async function(){if("/test.html"===window.location.pathname)try{for(const e in n){const t=n[e],s=await fetch(t);if(!s.ok)throw new Error(`Failed to fetch section: ${t}`);const i=await s.text(),a=document.createElement("div");a.innerHTML=i,document.querySelector(".wrapper").appendChild(a)}}catch(e){console.error("Error loading sections:",e)}}(),this.initializeElements(),this.addEvents(),At.updateColors(),Ft.bgVisibility=Ft.bgVisibility,Nt.identConfirmed&&(Ft.startOnLoad?xt.start():xt.updateGameData(),setTimeout((()=>{Ot.getUserSummary({}).then((e=>{this.userInfo?.update({userSummary:e}),this.stats?.initialSetStats({userSummary:e}),this.statusPanel?.updateStatistics({userSummary:e})}))}),3e3)),setTimeout((()=>document.querySelector(".loading-section").classList.add("hidden")),500)}initializeElements(){this.app=document.querySelector(".wrapper"),this.statusPanel=new Ke,this.status=new ht,this.achievementsBlock=[new Me],this.createAchievementsTemplate(),this.target=new We,this.gameCard=new st,this.stats=new nt,this.gameList=new mt,this.progression=new it,this.note=new et,this.awards=new tt,this.notifications=new at,this.games=new ct,this.settings=new Qe,this.links=new pt,this.buttons=new Xe}static applyPosition({widget:e}){if(!e)return;const t=e.section.id,s=()=>{e.section.classList.add("hidden","disposed")};if(Nt.ui[t]){const{x:i,y:n,width:a,height:o,hidden:r}=Nt.ui[t];i&&(e.section.style.left=i<0?0:i),n&&(e.section.style.top=n<0?0:n),a&&(e.section.style.width=a),o&&(e.section.style.height=o);(r??!0)&&s()}else!e.VISIBLE&&s();e.widgetIcon?.element&&(e.widgetIcon.element.checked=!1===Nt.ui?.[e.section?.id]?.hidden??!e.VISIBLE)}addEvents(){const e=async e=>{e.stopPropagation();const t=e.target.closest("[data-title]")?.dataset.title,s=e.target.closest("[data-achiv-id]")?.dataset?.achivId,i=xt.CHEEVOS[s],n=document.querySelectorAll(".popup");if(t&&t===n[0]?.innerText)return;if(!t&&n[0]?.dataset.id&&n[0]?.dataset.id==s)return;(async e=>{e.forEach((e=>e.remove()))})(n);const a=t?function(e){let t=document.createElement("div");return t.classList.add("popup","hint","hint-popup"),t.innerHTML=`\n      <p>${e}</p>\n      `,t}(t):i?function(e){const t=(e,t,s=!0)=>{const i=Array.isArray(t)?[...new Set(t)].join('<span class="popup__value-divider"> | </span>'):t;return s?`\n        <p><span class="popup__prop-title">${e}: </span>${i}</p>\n    `:""},s=e.level?.toString()?.split(".")[1],i=e.zone?s?`${e.zone} [${s}]`:e.zone:e.level?.toString()?.replace(".","-");let n=document.createElement("div");return n.classList.add("cheevo-popup","popup",e.isHardcoreEarned?"hardcore":e.isEarned?"softcore":"f"),n.dataset.id=e.ID,n.innerHTML=`\n        <div class="cheevo-popup__header">\n            <h3 class="cheevo-popup__title">${e.Title}</h3>\n            <div class="cheevo-popup__description"> ${e.Description} </div>\n            ${((e,t)=>e||0!==t.length?`\n            <div class="cheevo-popup__icons">${I([e&&`LVL: ${e}`,...t],"selection")}</div>\n        `:"")(i,e.genres)}\n            <div class="points">\n                ${v(e.Points)}\n                ${E(e.TrueRatio)}\n                ${f(e.rateEarnedHardcore)}\n                ${_(e.retroRatio)}\n                ${w.cheevoType(e.Type)}\n                ${P.difficultBadge(e.difficulty)}\n            </div>\n        </div>\n        <div class="cheevo-popup__props">\n            ${t(ui.lang.unlockDate,l(e.DateEarnedHardcore),!!e.DateEarnedHardcore)}\n            ${t(ui.lang.unlockDate+ui.lang.casual_,l(e.DateEarned),!!e.DateEarned&&e.DateEarnedHardcore!=e.DateEarned)}\n            ${t(ui.lang.playersTotal,[e.totalPlayers])}\n            ${t(ui.lang.unlockedBy,[e.NumAwardedHardcore,e.NumAwarded])}\n            ${t(ui.lang.unlockRate,[e.rateEarnedHardcore,e.rateEarned])}\n            ${t(ui.lang.timeToUnlock,[r(e.timeToUnlock),r(e.timeToUnlockSoftcore)])}\n            ${t(ui.lang.created,[c(e.DateCreated),c(e.DateModified)])}\n            ${t(ui.lang.createdBy,e.Author)}\n        </div>\n    `,n}(i):void 0;a&&(this.app.appendChild(a),function(e,t){const s=(e,t,s,i=10)=>s+e+i<t?s+i:s-e-i<0?5:s-e-i,i=document.documentElement.clientWidth,n=document.documentElement.clientHeight,a=t.x,o=t.y;e.style.top=s(e.offsetHeight,n,o)+"px",e.style.left=s(e.offsetWidth,i,a)+"px"}(a,e),setTimeout((()=>a.classList.add("visible")),50)),(e=>{e.clientX<20&&this.buttons.show()})(e)};this.app.addEventListener("mousemove",e),this.app.addEventListener("mouseleave",(()=>{document.querySelectorAll(".popup").forEach((e=>e.remove())),this.buttons.section.classList.remove("expanded")})),this.app.addEventListener("click",(()=>{document.querySelectorAll(".context-menu").forEach((e=>e.remove()))})),this.app.addEventListener("contextmenu",(e=>{this.showContextmenu({event:e,menuItems:this.settings.contextMenuItems})})),this.app.addEventListener("mousedown",(t=>{this.app.removeEventListener("mousemove",e),document.querySelectorAll(".popup, .dialog-window")?.forEach((e=>e.remove()))})),this.app.addEventListener("mouseup",(t=>{this.app.addEventListener("mousemove",e)}))}gameChangeEvent(e){this.achievementsBlock.forEach((e=>e?.parseGameAchievements(xt.GAME_DATA))),["statusPanel","status","target","notifications","gameList","gameCard"].forEach((t=>this[t]?.gameChangeEvent(e))),this.note?.updateGame(),this.progression?.generateProgression()}updateWidgets({earnedAchievementsIDs:e,isLog:t}){const s=e?.map((e=>({type:U.CHEEVO,value:xt.CHEEVOS[e]})))??[];this.notifications.pushAlerts(s),this.achievementsBlock.forEach((t=>t.updateEarnedAchieves({earnedAchievementIDs:e}))),this.target.updateEarnedAchieves({earnedAchievementIDs:e}),this.target.delayedRemove(),this.awards.VISIBLE&&this.awards.updateAwards(),this.statusPanel.updateProgress({earnedAchievementIDs:e}),this.status.updateProgress({earnedAchievementIDs:e}),this.progression.update({earnedAchievementIDs:e}),t||!this.stats?.VISIBLE&&!this.statusPanel?.uiProps?.showStatisticsAlert||(this.userInfoTimeout&&clearTimeout(this.userInfoTimeout),this.userInfoTimeout=setTimeout((async()=>{const e=await Ot.getUserSummary({gamesCount:0,achievesCount:0});kt.stats.updateStats({currentUserSummary:e}),kt.statusPanel?.updateStatistics({userSummary:e})}),16e3*e.length))}showAwardsAlerts(e=[]){j(e),e.forEach((e=>{Ft.discordNewAward&&J(e)})),this.statusPanel.addAlertsToQuery(e),this.status.addAlertsToQuery(e),this.gameCard.section.dataset.award=xt.GAME_DATA?.award??"-",this.gameCard.section.dataset.progressionAward=xt.GAME_DATA?.progressionAward??"-",e.length&&setTimeout((()=>kt.stats.updateChart()),4e3)}showCheevoAlerts(e=[]){let t=e.map((e=>({type:U.CHEEVO,value:xt.CHEEVOS[e]})));t.forEach((e=>{const t=e.value,{minPointsDiscordAlert:s,minRetroPointsDiscordAlert:i,hardOnlyDiscordAlert:n,discordNewCheevo:a}=Ft,o=t.Points>=s||t.TrueRatio>=i,r=!n||t.isHardcoreEarned;a&&o&&r&&J(e)})),j(t),this.statusPanel.addAlertsToQuery(t),this.status.addAlertsToQuery(t)}updateWidgetsRichPresence(e="Rich presence"){this.statusPanel.frontSide.richPresence.innerText=e,this.status.richPresenceElement.innerText=e;const t=(e=>{const t=Et.join("|"),s=((e,s)=>{const i=new RegExp(`(${t})(\\s|-\\s*|:\\s*)((\\d+-\\d+)|(\\d+))`,"gi"),n=new RegExp(`\\b${s?.join("\\b|\\b")}\\b`,"gi"),a=e.match(n),o=a?xt.GAME_DATA.zones?.indexOf(a[0]):void 0,r=e.matchAll(i);let l;for(const e of r)l=e[3]?.replace("-",".");return o>=0&&(l=`${o+1}${l?.includes(".")?"."+l:""}`),Number(l)})(yt(e),xt.GAME_DATA.zones);return!!Number.isFinite(s)&&s})(e);this.CURRENT_LEVEL=t,t&&(this.target.highlightCurrentLevel(t),this.achievementsBlock.forEach((e=>e.highlightCurrentLevel(t))))}showContextmenu({event:e,menuItems:t,sectionCode:s=""}){e.preventDefault(),e.stopPropagation(),document.querySelector(".context-menu")?.remove(),this.contextMenu=x({menuItems:t,sectionCode:s}),this.app.appendChild(this.contextMenu),(()=>{this.contextMenu.style.left=e.x+"px",this.contextMenu.style.top=e.y+"px",window.innerWidth-e.x<3*this.contextMenu.offsetWidth&&this.contextMenu.classList.add("to-left"),window.innerHeight-e.y<2*this.contextMenu.offsetHeight&&this.contextMenu.classList.add("to-top")})(),this.contextMenu.classList.remove("hidden")}createAchievementsTemplate(){2===this.achievementsBlock.length?At.switchSectionVisibility(this.achievementsBlock[1]):(this.achievementsBlock.push(new Me(!0)),xt.GAME_DATA&&this.achievementsBlock.at(-1).parseGameAchievements(xt.GAME_DATA))}stopWatching(){kt.IS_WATCHING=!1,this.statusPanel.frontSide.watchButton.classList.remove("active"),clearInterval(kt.apiTrackerInterval)}static updateColors(e){const{style:s}=document.body,{mainColor:i,secondaryColor:n,accentColor:a,fontColor:o,selectionColor:r}=(e=>{let s;return s="custom"===e?Ft.customColors:t[e]||t.default,s.selectionColor||(s.selectionColor=function(e,t=1){3===(e=e.replace(/^#/,"")).length&&(e=e.split("").map((e=>e+e)).join(""));const s=parseInt(e,16);return`rgba(${s>>16&255}, ${s>>8&255}, ${255&s}, ${t})`}(s.accentColor,.1)),s})(Ft.preset);s.setProperty("--main-color",i),s.setProperty("--secondary-color",n),s.setProperty("--accent-color",a),s.setProperty("--font-color",o),s.setProperty("--selection-color",r)}static addDraggingEventForElements(e,t){}static switchSectionVisibility({section:e,visible:t=!1}){e.classList.contains("hidden")||t?(e.classList.remove("disposed"),setTimeout((()=>e.classList.remove("hidden")),100),Nt.setNewPosition({id:e.id,hidden:!1})):(e.classList.add("hidden"),setTimeout((()=>e.classList.add("disposed")),300),Nt.setNewPosition({id:e.id,hidden:!0}))}exportCompletionDataToXlsx=()=>ee.completion();exportWantToPlayToCSV=()=>ee.wantToPlay();exportSettingsToJson=e=>{if(e)te(e);else{const e=Tt({title:kt.lang.exportSettings,message:kt.lang.exportSettingsMessage,elements:[{type:O.BUTTON,id:"dialog-download",label:kt.lang.download,event:"onclick=\"ui.exportSettingsToJson({direction:'file'});\""},{type:O.BUTTON,id:"dialog-copy",label:kt.lang.copyToClipboard,event:"onclick=\"ui.exportSettingsToJson({direction:'clipboard'});\""},{type:O.BUTTON,id:"dialog-discord",label:kt.lang.sendToDS,event:"onclick=\"ui.exportSettingsToJson({direction:'discord'});\""}]});kt.app.appendChild(e)}};importSettingsFromJson(){const e=document.createElement("input");e.type="file",e.accept=".json",e.addEventListener("change",(function(e){const t=e.target.files[0];if(t){const e=new FileReader;e.onload=function(e){try{const t=JSON.parse(e.target.result);console.log("Imported Settings:",t),kt.applySettings(t)}catch(e){console.error("Error parsing JSON:",e)}},e.onerror=function(){console.error("Error reading file:",e.error)},e.readAsText(t)}else console.log("No file selected")})),e.click()}applySettings(e){e.version>=.65?(Nt._cfg=e,Nt.writeConfiguration(),setTimeout((()=>location.reload()),1e3)):console.log("Unsupported file")}}const St="retroApiConfig";class bt{get version(){return this._cfg.version??"0"}set version(e){this._cfg.version=e,this.writeConfiguration()}get API_KEY(){return this._cfg.identification.RAApi_key}set API_KEY(e){this._cfg.identification.RAApi_key=e,this.writeConfiguration()}get USER_NAME(){return this._cfg.identification.RAApi_login}set USER_NAME(e){this._cfg.identification.RAApi_login=e,this.writeConfiguration()}get identConfirmed(){return this._cfg.identification.identConfirmed??!1}set identConfirmed(e){this._cfg.identification.identConfirmed=e,this.writeConfiguration()}get userImageSrc(){return this._cfg.identification.userImageSrc||""}set userImageSrc(e){this._cfg.identification.userImageSrc=e,this.ui.buttons&&(kt.buttons.userImage.src=e),this.writeConfiguration()}configData=new Proxy({},{get:(e,t)=>{const s=this.configDefaultValues[t]??!0;return this.getSettingProperty(t)??s},set:(e,t,s)=>{const i=this.configValuePreprocessors[t];"function"==typeof i&&(s=i(s)),this.saveSettingProperty(t,s);const n=this.configSetCallbacks?.[t];return"function"==typeof n&&n.call(this,s),!0}});configDefaultValues={bgVisibility:!0,startOnLoad:!1,targetUser:"",gameID:1,updateDelaySec:5,customColors:t.default,preset:"default",fsAlertDuration:15,fsNewCheevo:!0,fsNewAward:!0,minPointsDiscordAlert:0,minRetroPointsDiscordAlert:0,hardOnlyDiscordAlert:!1,fontSize:14,fontFamilyName:"default",pauseIfOnline:!0,discordNewGame:!0,discordNewCheevo:!0,discordNewAward:!0,discordStartSession:!0,discordWebhook:"",parseLog:!1};configValuePreprocessors={updateDelaySec:e=>parseInt(e)<5?5:parseInt(e),customColors:({colorProperty:e,color:t})=>({...configData.customColors,[e]:t}),fsAlertDuration:e=>e<5?5:e>60?60:e,minPointsDiscordAlert:e=>parseInt(e)>=0?e:0,minRetroPointsDiscordAlert:e=>parseInt(e)>=0?e:0};configSetCallbacks={targetUser(){this.identConfirmed&&(kt.settings.getLastGameID(),kt.awards.updateAwards())},bgVisibility(e){document.querySelector("#background-animation").style.display=e?"block":"none"},customColors(){this.configData.preset="custom"},preset(e){At.updateColors()},fontSize(e){document.documentElement.style.setProperty("font-size",`${e}px`)},fontFamilyName(e){if(Object.keys(s).includes(e)){const t=document.createElement("link");t.rel="stylesheet",t.href=s[e],document.head.appendChild(t),document.documentElement.style.setProperty("--font-family",`"${e}", system-ui, sans-serif`)}else document.documentElement.style.setProperty("--font-family","system-ui, sans-serif")}};get aotw(){const e=this._cfg.aotw;return!!(e&&function(e){const t=new Date,s=new Date;return s.setDate(t.getDate()-7),new Date(e)>s}(e.StartAt))&&this._cfg.aotw}set aotw(e){this._cfg.aotw=e,this.writeConfiguration()}get ui(){return this._cfg.ui}get gamesDB(){return this._cfg.gamesDB||(this._cfg.gamesDB={}),this._cfg.gamesDB}get cheevosDB(){return this._cfg.cheevosDB||(this._cfg.cheevosDB={}),this._cfg.cheevosDB}async getFileHandle(e="log"){return await async function(e="log"){const t=await i();return new Promise(((s,i)=>{const n=t.transaction("handles","readonly").objectStore("handles").get(e);n.onsuccess=e=>s(e.target.result),n.onerror=e=>i(e.target.error)}))}(e)}constructor(){this.readConfiguration(),this.fixConfig()}fixConfig=()=>{if(3!==this.version)try{this.ui.update_section?.playTime&&(this._cfg.playTime={...this._cfg.playTime,...this.ui.update_section?.playTime}),Object.getOwnPropertyNames(this._cfg.playTime??{}).forEach((e=>{this.gamesDB[e]={...this.gamesDB[e],TimePlayed:this._cfg.playTime[e]}})),delete this._cfg.playTime,delete this.ui.update_section?.playTime,this.ui.game_section?.contextMenuPropertiesItems&&(this.ui.game_section.contextMenuPropertiesItems.forEach((e=>{let t=e.id.replace(/context_show-/gi,"");t="show"+t.charAt(0).toUpperCase()+t.slice(1);const s=!!e.checked;this.saveUIProperty({sectionID:"game_section",property:t,value:s})})),delete this.ui.game_section?.contextMenuPropertiesItems,delete this.ui.game_section?.contextMenuItems,delete this.ui.game_section?.gameInfoElements);const e=this.ui.note_section?.game_notes||{};Object.keys(e).forEach((t=>{this.gamesDB[t]={...this.gamesDB[t],notes:e[t]??""},delete this.ui.note_section.game_notes[t]})),delete this._cfg.settings?.filterTargetBy,delete this._cfg.settings?.sortTargetBy,delete this._cfg.settings?.reverseSortTarget,delete this._cfg.settings?.filterTargetBy,delete this._cfg.settings?.reverseFilterTarget;let s={filterName:this.ui.achievements_section?.filterBy??"all",state:this.ui.achievements_section?.reverseFilter?-1:1};if("all"!==s.filterName&&(this.ui.achievements_section.filters={[s.filterName]:s}),delete this.ui.achievements_section?.filterBy,delete this.ui.achievements_section?.reverseFilter,s={filterName:this.ui["achievements_section-1"]?.filterBy??"all",state:this.ui["achievements_section-1"]?.reverseFilter?-1:1},"all"!==s.filterName&&(this.ui["achievements_section-1"].filters={[s.filterName]:s}),delete this.ui["achievements_section-1"]?.filterBy,delete this.ui["achievements_section-1"]?.reverseFilter,this._cfg.settings.fontFamilyName=this._cfg.settings.fontSelectorName,this._cfg.settings.pauseIfOnline=this._cfg.discordNewGame,this._cfg.settings.discordNewGame=this._cfg.discordNewGame,this._cfg.settings.discordNewCheevo=this._cfg.discordNewCheevo,this._cfg.settings.discordNewAward=this._cfg.discordNewAward,this._cfg.settings.discordStartSession=this._cfg.discordStartSession,this._cfg.settings.discordWebhook=this._cfg.discordWebhook,!this._cfg.settings.customColors){this._cfg.settings.customColors=t.default;const{fontColor:e,mainColor:s,secondaryColor:i,accentColor:n,selectionColor:a}=this._cfg.settings;e&&(this._cfg.settings.customColors.fontColor=e),s&&(this._cfg.settings.customColors.mainColor=s),i&&(this._cfg.settings.customColors.secondaryColor=i),n&&(this._cfg.settings.customColors.accentColor=n),a&&(this._cfg.settings.customColors.selectionColor=a),delete this._cfg.settings.fontColor,delete this._cfg.settings.mainColor,delete this._cfg.settings.secondaryColor,delete this._cfg.settings.accentColor,delete this._cfg.settings.selectionColor}delete this._cfg.settings.fontSelectorName,delete this._cfg.discordNewGame,delete this._cfg.discordNewGame,delete this._cfg.discordNewCheevo,delete this._cfg.discordNewAward,delete this._cfg.discordStartSession,delete this._cfg.discordWebhook,delete this._cfg.settings.ACHIV_MIN_SIZE,delete this._cfg.settings.ACHIV_MAX_SIZE,this.version=3,this.writeConfiguration()}catch(e){console.error(e)}};setNewPosition({id:e,xPos:t,yPos:s,width:i,height:n,hidden:a}){this._cfg.ui.hasOwnProperty(e)||(this._cfg.ui[e]={id:e,x:t,y:s,width:i,height:n,hidden:a}),t&&(this._cfg.ui[e].x=t),s&&(this._cfg.ui[e].y=s),i&&(this._cfg.ui[e].width=i+"px"),n&&(this._cfg.ui[e].height=n+"px"),void 0!==a&&(this._cfg.ui[e].hidden=a),this.writeConfiguration()}readConfiguration(){let e=JSON.parse(localStorage.getItem(St));e||(e={identification:{RAApi_key:"",RAApi_login:""},settings:{updateDelaySec:5},ui:{}}),this._cfg=e,localStorage.setItem(St,JSON.stringify(this._cfg)),this.writeConfiguration()}saveUIProperty({sectionID:e,property:t,value:s}){e&&t&&(this.ui[e]||(this.ui[e]={}),this.ui[e][t]=s,this.writeConfiguration())}saveSettingProperty(e,t){e&&(this._cfg.settings[e]=t,this.writeConfiguration())}getUIProperty({sectionID:e,property:t}){if(e&&t)return this.ui[e]?this.ui[e][t]:void 0}getSettingProperty(e){if(e)return this._cfg.settings[e]}delayedWrite;writeConfiguration(){clearTimeout(this.delayedWrite),this.delayedWrite=setTimeout((()=>{localStorage.setItem(St,JSON.stringify(this._cfg))}),500)}async selectLogFile(e){let[t]=await window.showOpenFilePicker({types:[{description:"Log files",accept:{"text/plain":[".log"]}}]});await async function(e,t="log"){const s=(await i()).transaction("handles","readwrite");s.objectStore("handles").put(e,t),s.oncomplete=()=>console.log("Handle saved in IndexedDB"),s.onerror=e=>console.error("Error:",e)}(t,e),await async function(e){"granted"!==await e.queryPermission({mode:"read"})?console.warn("Доступ не надано"):console.log("Доступ надано")}(t)}}const wt="gameTimes",Ct=Object.freeze({userProfile:"API_GetUserProfile.php",gameInfoAndProgress:"API_GetGameInfoAndUserProgress.php",gameTimesInfo:"API_GetGameProgression.php",recentAchieves:"API_GetUserRecentAchievements.php",gameInfo:"API_GetGame.php",extendedGameInfo:"API_GetGameExtended.php",recentlyPlayedGames:"API_GetUserRecentlyPlayedGames.php",userAwards:"API_GetUserAwards.php",userGameRankAndScore:"API_GetUserGameRankAndScore.php",completionProgress:"API_GetUserCompletionProgress.php",gameList:"API_GetGameList.php",userSummary:"API_GetUserSummary.php",achievementOfTheWeek:"API_GetAchievementOfTheWeek.php",comments:"API_GetComments.php",wantToPlay:"API_GetUserWantToPlayList.php"}),It={1:167,2:83,3:79,4:26,5:24,6:43,7:49,8:null,9:119,10:117,11:74,12:27,13:46,14:null,15:77,17:112,18:9,21:15,23:null,24:null,25:23,27:12,28:null,29:null,33:null,37:null,38:41,39:107,40:106,41:17,43:111,44:null,45:null,46:null,47:null,49:null,51:28,53:null,56:null,57:null,63:null,69:null,71:null,72:null,73:null,74:null,75:null,76:null,77:null,78:13,80:null,101:null,102:null};function Pt(e){Object.values(e.Achievements).forEach((e=>{e.genres=[],(e=>{const t="\\b"+["Level","Stage","Area","World","Mission","Chapter","Section","Zone","Phase","Realm","Domain","Episode","Act","Tier","Floor","Scene","Screen","Round"].join("\\b|\\b")+"\\b",s="\\b"+["first","second","third","fourth","fifth","sixth","seventh","eighth"].join("\\b|\\b")+"\\b",i="\\b"+["(D|d)efeat(ing)*","(K|k)ill(ing)*","(B|b)eat"].join("\\b|\\b")+"\\b",n="\\b"+["(?:T|t)he\\b","\\ba\\b","(?:M|m)rs{0,1}\\b[.]*","(?:D|d)r\\b[.]*","his\\b"].join("|\\b"),a="\\b"+["All","((Hi)*(-)*(S|s)core)","((T|t)he\\s)*(G|g)ame","(P|p)ro"].join("\\b|\\b")+"\\b";return new RegExp(`((${i})\\s*(${n})*\\s*(${s})*\\s*(?!(${a}|${t}))(?:(['"]*[A-Z]\\w*\\b)|((all)*[\\s\\w]*boss(es)*)))`,"g").exec(e.Description)})(e)&&e.genres.push(d.BOSSFIGHT),(e=>{const t="\\b"+["(?:C|c)ollect","(A|a)ccumulate","by collecting","(?:O|o)btain","(?:S|s)till","(?:P|p)ick\\sup"].join("\\b|\\b")+"\\b",s=["(?:P|p)oints","(G|g)old","(?:S|s)core","(?:O|o)ver"].join("|");return new RegExp(`(?:${t})(?![^.]*(?:${s}))[^.]+(?:.|w$)`,"g").exec(e.Description)})(e)&&e.genres.push(d.COLLECTOR),(e=>new RegExp("(((W|w)ithout|no)\\b[\\s\\w]*((D|d)amage|(H|h)armed|(G|g)ettings(H|h)it\b)|(\\b(with)|at)\\b\\sfull\\s(\\b(health)|(life)))","gi").exec(e.Description))(e)&&e.genres.push(d.NO_DAMAGE),(e=>{const t="("+["without\\s([\\w\\s]*or\\s)*dying","(without|\\bno(t)*)\\s[\\w\\s]*losing\\s(a)*\\slife","\\bno(t)*\\s(dying|death(s)*)"].join(")|(")+")";return new RegExp(`${t}`,"gi").exec(e.Description)})(e)&&e.genres.push(d.NO_DEATH),(e=>{const t=["\\b(?:M|m)inute","\\b(?:S|s)econds","\\b(?:H|h)our"].join("|");return new RegExp(`((?:\\bin\\b|\\bless|\\bunder|\\bfor|\\bwith(in)*)[\\s\\w\\d:]*(?:${t}))|(.*\\d{0,2}:\\d{2})|(.*\\d+['m]\\d{2}["s])`,"g").exec(e.Description)})(e)&&e.genres.push(d.TIMETRIAL),(e=>{const t="\\b"+["score(d|s)*","point(s)*","PTS|pts|Pts","earn","dollars"].join("\\b|\\b")+"\\b",s="\\d+[.,']{0,1}(\\d{3,}[.,']{0,1})*";return new RegExp(`((${t})[^.]+)${s}|(?:${s}[^.]+(?:${t}))|\\bbeat\\s(the\\s)*((Hi)*(\\-)*score\\b)`,"gi").exec([e.Title,e.Description].join(". "))})(e)&&e.genres.push(d.SCORE),(e=>new RegExp("((without|no)\\b[\\s\\w]*(hitting|harming|killing))","gi").exec(e.Description))(e)&&e.genres.push(d.PACIFIST),(e=>/(beat|kill|defeat)(ing)*\s(\d+|(your\s)*first)\s*enem(y|ies)/gi.exec(e.Description))(e)&&e.genres.push(d.KILLER)}))}function Lt(e){const t=Object.values(e.Achievements).sort(((e,t)=>0!=e.DisplayOrder?e.DisplayOrder-t.DisplayOrder:e.ID-t.ID)),s=t.reduce(((e,t)=>{const s=(e=>{const t=["Beat","Reach","Select","Bonus","No","Any","Mario","The"],s=["Win","Clear","Complete","Finish","Start","Enter","In"],i=function(e){const i="\\b"+[...ft,...ft.map((e=>e.toLowerCase()))].join("\\b|\\b")+"\\b",n="\\b"+[...s,...s.map((e=>e.toLowerCase()))].join("\\b|\\b")+"\\b",a="\\b"+t.join("\\b|\\b")+"\\b",o="[A-Z]\\w+\\s*(?:\\bof\\s)*",r=new RegExp([`(?:(?:${n})\\s+)((${o}\\s*){1,2})(?:${i}(?!\\s*\\d))`,`|(?!${n}|${a}\\s+)((${o}\\s*){1,2})(?:${i}(?!\\s*\\d))`,`|(?:(?:${n})\\s*["]((${o}\\s*){1,2})(?:["]))`,`|(?:${n}\\s*?!${i}\\s*((${o}\\s*){1,2}))`].join(""),"gm").exec(e),l=r&&(r[1]||r[3]||r[5]||r[7]);return l?.trim()}(yt(` ${e.Description}.${e.Title}.`));return i})(t);s&&(e.zoneCount++,!e.zoneNames.includes(s)&&e.zoneNames.push(s));const i=(e=>{const t=function(e){const t=[...vt,...vt.map((e=>e.toLowerCase()))].join("|"),s="(?!\\d{4,}|\\d+%)(\\d{1,3}(?:-\\d{1,3}\\b){0,1})",i=new RegExp(`(?:(${t})\\s(?<level1>${s}))|(?<level2>${s})\\s(?:(${t}))|(?<level3>\\b\\d{1,3}-\\d{1,2}\\b)`,"gi").exec(e);if(i){const e=i.groups.level1||i.groups.level2||i.groups.level3;return e?.replace("-",".")}return null}(yt(e.Description));return t})(t);return i&&(e.levelCount++,e.levelNums.add(i)),e.data.push({ID:t.ID,zone:s,level:i}),e}),{zoneCount:0,levelCount:0,levelNums:new Set,data:[],zoneNames:[]});s?.zoneNames?.forEach(((t,i)=>{Object.values(e.Achievements).forEach((e=>{const i=s.data.find((t=>t.ID===e.ID)),n=new RegExp(`\\b${t}\\b`,"gi");(n.test(e.Description)||n.test(e.Title)&&!i.zone)&&(s.zoneCount++,s.data.push({ID:e.ID,zone:t,level:i?.level}))}))})),s.zoneNames.length>=3&&s.zoneCount>4&&s.zoneNames.length>=s.levelNums.size?(s.zoneNames=((e,t)=>e.reduce(((e,s)=>(t.forEach((t=>{const i=new RegExp(`\\b${t}\\b`,"g");!e.includes(t)&&(i.test(s.Title)||i.test(s.Description))&&e.push(t)})),e)),[]))(t,s.zoneNames),e.zones=s.zoneNames,s.data.forEach((t=>{t.zone&&(e.Achievements[t.ID].zone=t.zone,e.Achievements[t.ID].level=+`${e.zones.indexOf(t.zone)+1}${t.level?"."+t.level:""}`)}))):s.levelCount>3&&s.levelNums.size>3?s.data.forEach((t=>{const s=t.ID,i=t.level,n=e.Achievements[s];n.level=i,delete n.zone})):s.data.forEach((t=>{delete e.Achievements[t.ID].zone,delete e.Achievements[t.ID].level}))}function Dt(e){let t=e.Title;const s=[/\[SUBSET[^\[]*\]/gi,/~[^~]*~/g,".HACK//"].reduce(((s,i)=>{const n=new RegExp(i,"gi"),a=e.Title.match(n);return a&&a.forEach((e=>{t=t.replace(e,"");let i=e;s.push(i.replace(/[~\.\[\]]|subset -|\/\//gi,""))})),s}),[]);return e.badges=s,e.FixedTitle=t.trim(),{badges:s,FixedTitle:t.trim()}}const $t="raApiCache";class Rt{initializeCache=async()=>{let e=await JSON.parse(localStorage.getItem($t))||{[wt]:{}};this._cache=e};clearCache(){this._cache={[wt]:{}},localStorage.setItem($t,JSON.stringify(this._cache))}getCachedData=async({dataType:e,ID:t})=>{let s;if(this._cache||await this.initializeCache(),e===wt)s=this._cache[wt]?this._cache[wt][t]:void 0;return s};pushToCache=async({dataType:e,data:t})=>{if(this._cache||await this.initializeCache(),e===wt)this._cache[wt]||(this._cache[wt]={}),this._cache[wt][t.ID]=t;localStorage.setItem($t,JSON.stringify(this._cache))};get _savedCompletionProgress(){return Nt._cfg?.apiWorker?.completionProgress??{}}get SAVED_COMPLETION_PROGRESS(){let e=this._savedCompletionProgress;if(e?.Total&&Nt._cfg.apiWorker.targetUser===Ft.targetUser){return new Date-this._savedCompletionProgress.Date<6e4?this._savedCompletionProgress:this.updateCompletionProgress({batchSize:10,savedArray:e.Results}).then((()=>this._savedCompletionProgress))}return this.updateCompletionProgress({batchSize:500}).then((()=>this._savedCompletionProgress))}set SAVED_COMPLETION_PROGRESS(e){e.Results=e.Results.map((e=>(delete e.ConsoleName,delete e.NumLeaderboards,e))),Nt._cfg.apiWorker||(Nt._cfg.apiWorker={}),Nt._cfg.apiWorker.targetUser=Ft.targetUser,Nt._cfg.apiWorker.completionProgress=e,Nt.writeConfiguration()}gamesTimes={};baseUrl="https://retroachievements.org/API/";getUrl({endpoint:e,targetUser:t,gameID:s,minutes:i,apiKey:n,userName:a,achievesCount:o,count:r,offset:l,type:c,sort:h}){kt.isTest&&(this.baseUrl=`${window.location.origin}/json/apiTemplates/`);let d=new URL(e,this.baseUrl),m={y:n||Nt.API_KEY,z:a||Nt.USER_NAME,u:t||Ft.targetUser||Nt.USER_NAME,g:s??Ft.gameID,m:i||2e3,i:s||Ft.gameID,f:1,h:1,a:o||5,c:r||20,o:l||0,t:c,sort:h};return e===Ct.userProfile&&delete m.i,d.search=new URLSearchParams(m),d}getAotW(){let e=this.getUrl({endpoint:Ct.achievementOfTheWeek});return fetch(e).then((e=>e.json())).then((e=>{const t=e.Unlocks.find((e=>e.User.toLowerCase()===Ft.targetUser?.toLowerCase()?.trim()));return{...e.Achievement,ConsoleName:e.Console.Title,ForumTopic:e.ForumTopic.ID,GameID:e.Game.ID,GameTitle:e.Game.Title,StartAt:e.StartAt,TotalPlayers:e.TotalPlayers,UnlocksHardcoreCount:e.UnlocksHardcoreCount,isEarned:!!t,isEarnedHardcore:!!t&&!!t.HardcoreMode}}))}getUserGameRank({targetUser:e,gameID:t}){let s=this.getUrl({endpoint:Ct.userRankAndScore});return fetch(s).then((e=>e.json()))}getProfileInfo({targetUser:e}){let t=this.getUrl({targetUser:e,endpoint:Ct.userProfile});return fetch(t).then((e=>e.json()))}getUserCompelitionProgress({targetUser:e,count:t,offset:s}){let i=this.getUrl({targetUser:e||Ft.targetUser,count:t||100,offset:s||0,endpoint:Ct.completionProgress});return fetch(i).then((e=>e.json())).then((e=>(e.Results=e.Results.map((e=>(e.ID=e.GameID,e.NumAchievements=e.MaxPossible,delete e.MaxPossible,delete e.NumLeaderboards,e))),e)))}getUserAwards({targetUser:e}){let t=this.getUrl({targetUser:e||Ft.targetUser,endpoint:Ct.userAwards});return fetch(t).then((e=>e.json())).then((e=>(e.VisibleUserAwards=e.VisibleUserAwards.map((e=>({...e,DateEarnedHardcore:e.AwardedAt,timeString:l(e.AwardedAt),award:"Events"==e.ConsoleName?"event":"Game Beaten"==e.AwardType?"1"==e.AwardDataExtra?"beaten":"beaten_softcore":"1"==e.AwardDataExtra?"mastered":"completed"}))),e)))}getGameInfoAndProgress({targetUser:e,gameID:t}){let s=this.getUrl({endpoint:Ct.gameInfoAndProgress,targetUser:e||Ft.targetUser,gameID:t||Ft.gameID});const i={TotalRealPlayers:0,TotalRetropoints:0,totalPoints:0,progressionRetroRatio:0,beatenCount:1/0,masteredCount:1/0,beatenSoftCount:1/0,completedCount:1/0,earnedStats:{soft:{count:0,points:0,retropoints:0,progressionCount:0},hard:{count:0,points:0,retropoints:0,progressionCount:0}},hasZeroPoints:!1};return fetch(s).then((e=>e.json())).then((e=>{e={...e,...Dt(e),...i};const t={Count:0,WinCount:0,WinAwardedCount:0,WinAwardedSoftCount:0,WinEarnedCount:0},s={isBeaten:!0,isBeatenSoftcore:!0,isWinEarned:!1,isWinEarnedSoftcore:!1};for(let i of Object.values(e.Achievements))e.TotalRetropoints+=i.TrueRatio,e.totalPoints+=i.Points,e.TotalRealPlayers<i.NumAwarded&&(e.TotalRealPlayers=i.NumAwarded),0!==i.Points||i.DateEarnedHardcore||(e.hasZeroPoints=!0),i.DateEarned&&(e.earnedStats.soft.count+=1,e.earnedStats.soft.points+=i.Points,e.earnedStats.soft.retropoints+=i.TrueRatio,i.Type!==ye.PROGRESSION&&i.Type!==ye.WIN||e.earnedStats.soft.progressionCount++),i.DateEarnedHardcore&&(e.earnedStats.hard.count+=1,e.earnedStats.hard.points+=i.Points,e.earnedStats.hard.retropoints+=i.TrueRatio,i.Type!==ye.PROGRESSION&&i.Type!==ye.WIN||e.earnedStats.hard.progressionCount++),i.Type===ye.PROGRESSION?(t.Count++,!i.DateEarned&&(s.isBeatenSoftcore=!1),!i.DateEarnedHardcore&&(s.isBeaten=!1),e.beatenCount=Math.min(i.NumAwardedHardcore,e.beatenCount),e.beatenSoftCount=Math.min(i.NumAwarded,e.beatenSoftCount)):i.Type===ye.WIN&&(t.WinCount++,t.WinAwardedCount=Math.max(i.NumAwardedHardcore,t.WinAwardedCount),t.WinAwardedSoftCount=Math.max(i.NumAwarded,t.WinAwardedSoftCount),i.DateEarnedHardcore&&t.WinEarnedCount++,s.isWinEarned=!!i.DateEarnedHardcore,s.isWinEarnedSoftcore=!!i.DateEarned),e.masteredCount=Math.min(i.NumAwardedHardcore,e.masteredCount),e.completedCount=Math.min(i.NumAwarded,e.completedCount);(e={...e,winVariantCount:t.WinCount,winEarnedCount:t.WinEarnedCount,progressionSteps:t.WinCount>0?t.Count+1:t.Count}).award=e.NumAchievements===e.NumAwardedToUserHardcore?q.MASTERED:e.NumAchievements===e.NumAwardedToUser?q.COMPLETED:e.award,e.progressionSteps&&(e.progressionAward=s.isBeaten&&e.earnedStats.hard.progressionCount>=e.progressionSteps?q.BEATEN:s.isBeatenSoftcore&&e.earnedStats.soft.progressionCount>=e.progressionSteps?q.BEATEN_SOFTCORE:e.progressionAward),t.WinCount>0&&(e.beatenCount=t.WinAwardedCount,e.beatenSoftCount=t.WinAwardedSoftCount),e.beatenCount!=1/0&&(e.beatenRate=~~(1e4*e.beatenCount/e.TotalRealPlayers)/100),e.beatenSoftCount!=1/0&&(e.beatenSoftRate=~~(1e4*e.beatenSoftCount/e.TotalRealPlayers)/100),e.masteredCount!=1/0&&(e.masteryRate=~~(1e4*e.masteredCount/e.TotalRealPlayers)/100),e.completedCount!=1/0&&(e.completedRate=~~(1e4*e.completedCount/e.TotalRealPlayers)/100);const n=~~(e.TotalRetropoints/e.totalPoints*100)/100;e.retroRatio=n,this.gameData=JSON.parse(JSON.stringify(e)),Lt(e),Pt(e),function(e){const t=Object.values(e.Achievements);if(0===t.length||0!==t[0].DisplayOrder)return;t.sort(((e,t)=>Ie.unlockRate(e,t))).forEach(((e,t)=>{e.DisplayOrder=[ye.PROGRESSION,ye.WIN].includes(e.Type)?t:1e3*++t}))}(e),Object.values(e.Achievements).map((t=>this.fixAchievement(t,e))),e={...e,TimePlayed:0,...Nt.gamesDB[e?.ID]};const a=Object.values(e.Achievements);return e.masteryDifficulty=Math.max(...a.map((e=>e.difficulty))),e.progressionSteps>0&&(e.gameDifficulty=0===e.winVariantCount?Math.max(...a.filter((e=>e.Type===ye.PROGRESSION)).map((e=>e.difficulty))):Math.min(...a.filter((e=>e.Type===ye.WIN)).map((e=>e.difficulty)))),e}))}async getGameTimesInfo({gameID:e,targetUser:t}){const s=this.getUrl({endpoint:Ct.gameTimesInfo,targetUser:t||Ft.targetUser,gameID:e||Ft.gameID});let i=await this.getCachedData({dataType:wt,ID:e});if(!i){const e=await fetch(s).then((e=>e.json())),t=e.Achievements.reduce(((e,{ID:t,MedianTimeToUnlock:s,MedianTimeToUnlockHardcore:i})=>(e[t]={ID:t,MedianTimeToUnlock:s,MedianTimeToUnlockHardcore:i},e)),{}),{ID:n,MedianTimeToBeat:a,MedianTimeToBeatHardcore:o,MedianTimeToMaster:r,MedianTimeToComplete:l}=e;i={ID:n,MedianTimeToBeat:a,MedianTimeToBeatHardcore:o,MedianTimeToMaster:r,MedianTimeToComplete:l,Achievements:t},this.pushToCache({dataType:wt,data:i})}return i}getRecentAchieves({targetUser:e,minutes:t}){let s=this.getUrl({endpoint:Ct.recentAchieves,targetUser:e,minutes:t});return fetch(s).then((e=>e.json())).then((e=>e.map((e=>(e.localDate=l(e.Date),e)))))}getGameInfo({gameID:e,extended:t}){let s=this.getUrl({endpoint:this.endpoints[t?"extendedGameInfo":"gameInfo"],gameID:e});return fetch(s).then((e=>e.json()))}getWantToPlayGamesList({targetUser:e,count:t,offset:s}){let i=this.getUrl({endpoint:Ct.wantToPlay,targetUser:e,count:t||50,offset:s||0});return fetch(i).then((e=>e.json())).then((e=>e.Results||[]))}getWantToPlayGames({targetUser:e,count:t,offset:s}){let i=this.getUrl({endpoint:Ct.wantToPlay,targetUser:e,count:t||50,offset:s||0});return fetch(i).then((e=>e.json())).then((e=>(e.Results||[]).map((e=>e.ID))))}getRecentlyPlayedGames({targetUser:e,count:t}){let s=this.getUrl({endpoint:Ct.recentlyPlayedGames,targetUser:e,count:t||50});return fetch(s).then((e=>e.json())).then((e=>e.map(((e,t)=>({...e,...Dt(e),ID:e.GameID,Points:e.ScoreAchievedHardcore+"/"+e.PossibleScore,NumAchievements:e.NumAchievedHardcore+"/"+e.AchievementsTotal,DateEarnedHardcore:e.LastPlayed})))))}getUserProfile({userName:e}){let t=this.getUrl({targetUser:e,userName:e,endpoint:Ct.userProfile});return fetch(t).then((e=>e.json()))}getUserSummary({targetUser:e,gamesCount:t,achievesCount:s}){let i=this.getUrl({targetUser:e,gameID:t??3,achievesCount:s,endpoint:Ct.userSummary});return fetch(i).then((e=>e.json())).then((e=>(e.RecentlyPlayed=e.RecentlyPlayed.map((t=>(t.LastPlayed=l(t.LastPlayed),e.Awarded[t.GameID]&&(t={...t,...e.Awarded[t.GameID]}),t))),e.RecentAchievements=Object.values(e.RecentAchievements).flatMap((e=>Object.values(e))).map((e=>(e.DateAwarded=l(e.DateAwarded),e))),e.RecentlyPlayed.length&&(e.isInGame=new Date-new Date(e.RecentlyPlayed[0].LastPlayed)<3e5),e)))}getComments({targetUser:e,id:t,offset:s=0,count:i=200,type:n=2,sort:a="-submitted"}){let o=this.getUrl({targetUser:e,gameID:t,type:n,offset:s,count:i,sort:a,endpoint:Ct.comments});return fetch(o).then((e=>e.json())).then((e=>e.Results?.filter((e=>"Server"!==e.User))||[]))}verifyUserIdent({userName:e,apiKey:t}){let s=this.getUrl({targetUser:e,userName:e,apiKey:t,endpoint:Ct.userProfile});return fetch(s).then((e=>e.json()))}getGameList({userName:e,apiKey:t,systemID:s}){let i=this.getUrl({userName:e,apiKey:t,gameID:s,endpoint:Ct.gameList});return fetch(i).then((e=>e.json()))}doTestEndpoint({endpoint:e}){let t=this.getUrl({endpoint:e});return fetch(t).then((e=>e.json())).then((e=>console.log(e)))}async updateCompletionProgress({savedArray:e=[],completionProgress:t=[],batchSize:s=500}){let i=await this.getUserCompelitionProgress({count:s,offset:t.length}),n=(t=[...t,...i.Results]).at(-1);if(e.findIndex((e=>e.hasOwnProperty("GameID")&&e.GameID===n.GameID&&e.MostRecentAwardedDate===n.MostRecentAwardedDate))>=0||t.length===i.Total){const s=t.map((e=>e.GameID));e=e.filter((e=>!s.includes(e.GameID))),e=[...t,...e],this.SAVED_COMPLETION_PROGRESS={Date:new Date,Total:e.length,Results:e}}else setTimeout((()=>this.updateCompletionProgress({savedArray:e,completionProgress:t,batchSize:s})),100)}fixAchievement(e,t){const{BadgeName:s,DateEarned:i,DateEarnedHardcore:n,NumAwardedHardcore:a,NumAwarded:o,TrueRatio:r,ID:l,Points:c}=e,{NumDistinctPlayers:h,NumAwardedToUserHardcore:d,TotalRealPlayers:m}=t,g=100*(a-.5*d)/(.5*(h+m)-.5*d),u=100*a/h;t.Achievements[l]={...e,totalPlayers:h,isEarned:!!i,isHardcoreEarned:!!n,prevSrc:B(s),rateEarned:~~(100*o/h)+"%",rateEarnedHardcore:u<10?`${u.toFixed(1)}%`:`${u.toFixed(0)}%`,trend:g,retroRatio:(r/Math.max(1,c)).toFixed(2),difficulty:g<=.2&&r>1e3&&a<100?11:g<=1&&r>300||r>=500?10:g<=1.5&&r>300||r>=500?9:g<=3&&r>100||r>=300?8:g<8&&r>24?7:g<13&&r>10?6:g<20&&r>5||r>10?5:4,...Nt.cheevosDB[l]}}async rawgSearchGame({gameTitle:e,platformID:t}){e=e.split("|")[0];const s=It[t];if(!s)return!1;let i=new URL("games","https://api.rawg.io/api/"),n={search:e,platforms:s,key:"179353905bcb491d975b1fc03b3c8bd6"};i.search=new URLSearchParams(n);try{const s=await fetch(i);if(!s.ok)return console.log(`HTTP error! status: ${s.status}`),!1;const n=await s.json(),a=n.results?n.results[0]:null,o=e.replace(/[^a-z0-9]/gi," ").trim(),r=a?.name.replace(/[^a-z0-9]/gi," ").trim()??"";if(!a||o!==r)return console.log(`Game not found for title: ${e} on platform: ${t}`),!1;const l=["name","playtime","released","background_image","rating","ratings","added","metacritic","score","community_rating","genres"];return Object.fromEntries(Object.entries(a).filter((([e])=>l.includes(e))))}catch(e){return console.log(`Fetch error: ${e.message}`),!1}}}let Nt,kt,Ot,xt,Ht=0,Mt=!0;async function Ut(e){const t=await e.getFile();if(t.size<Ht&&(Ht=0),t.size>Ht){const e=t.slice(Ht,t.size),s=await e.text();Ht=t.size;const i=function(e){let t,s=[];return e.split("\n").forEach((e=>{if(e.includes("Awarding achievement")){const t=e.match(/(?:Awarding\sachievement\s)(\d+)/);if(t){const e=t[1];s.push(e)}}else if(e.includes("loaded")){const s=e.match(/(?:Game\s)(\d+)(?:\sloaded,\shardcore\s)(enabled|disabled)/);if(s){const e=s[1];Mt="enabled"===s[2],t={gameID:e,isHardmode:Mt}}}})),{unlockedCheevos:[...new Set(s)].map((e=>({AchievementID:+e,HardcoreMode:Mt?1:0,Date:new Date}))),currentGame:t}}(s);return i}return{}}class Gt{RP_DATA={text:"",lastChange:""};IS_ONLINE=!0;IS_HARD_MODE=!0;IS_WATCHING=!1;RECENT_ACHIVES_RANGE_MINUTES=10;CHECK_FOR_ONLINE_DELAY_MS=6e4;CHECK_FOR_ONLINE_AFTER_SILENCE_MS=18e4;watcherInterval;playTime={totalGameTime:0,gameTime:0,sessionTime:0,timer:60};points={hard:0,soft:0};zeroCheckTime=new Date;get CHEEVOS(){return this.GAME_DATA?.Achievements??{}}get GAME_DATA(){return this._gameData}set GAME_DATA(e){this.savePlayTime();const t=this.GAME_DATA&&e.ID!=this.GAME_DATA?.ID;this._gameData=e,this.initPlayTime(),kt.gameChangeEvent(t)}constructor(){this.isActive=!1}initPlayTime=()=>{const e=this.GAME_DATA?.ID??0,t=this.GAME_DATA?.TimePlayed;this.playTime={...this.playTime,gameID:e,totalGameTime:t,gameTime:0,timer:60}};gameChangeEvent(){}async checkForOnline(){const e=()=>{this.RP_DATA.lastChange=new Date,this.zeroCheckTime=new Date,!this.IS_ONLINE&&(this.IS_ONLINE=!0,this.checkApiUpdates()),this.IS_ONLINE=!0};if(!Ft.pauseIfOnline)return void e();console.log("Checking for online...");const t=(e=>{!/(\+00\:00$)|(z$)/gi.test(e)&&(e+="+00:00");return new Date(e)})((await Ot.getRecentlyPlayedGames({count:1}))[0].LastPlayed);if(new Date-t<3e5)e();else{if(this.IS_ONLINE=!1,!this.IS_WATCHING)return;setTimeout((()=>this.checkForOnline()),this.CHECK_FOR_ONLINE_DELAY_MS)}}apiTrackerInterval;async checkApiUpdates(e=!1){const t=e=>{this.points.hard=e.TotalPoints,this.points.soft=e.TotalSoftcorePoints};if(!e&&!this.IS_ONLINE)return;const s=await Ot.getProfileInfo({});(s.LastGameID!=this.GAME_DATA?.ID||e)&&(Ft.gameID=s.LastGameID,e&&t(s),await this.updateGameData(s.LastGameID),(Ft.discordNewGame||e&&Ft.discordStartSession)&&J({type:U.GAME})),(e=>e.TotalPoints!=this.points.hard||e.TotalSoftcorePoints!=this.points.soft)(s)?(t(s),this.updateCheevos(),this.RP_DATA.lastChange=new Date,this.zeroCheckTime=new Date):this.GAME_DATA.hasZeroPoints&&new Date-this.zeroCheckTime>16e3&&(this.updateCheevos(),this.zeroCheckTime=new Date);const i=s.RichPresenceMsg;kt.updateWidgetsRichPresence(i),i===this.RP_DATA.text&&Ft.pauseIfOnline?!e&&this.RP_DATA.lastChange&&new Date-this.RP_DATA.lastChange>this.CHECK_FOR_ONLINE_AFTER_SILENCE_MS&&await this.checkForOnline():(this.RP_DATA.lastChange=new Date,this.RP_DATA.text=s.RichPresenceMsg,this.IS_ONLINE=!0)}async checkLogUpdates(){const e=e=>{kt.app.appendChild(Tt({title:"Info",message:e})),clearInterval(this.logWatcherInterval),this.isLogOK=!1},t=await Nt.getFileHandle("rarch");if(!t)return void e("Select log file");let s={};try{s=await Ut(t)}catch{console.warn("log file error"),e("Something wrong with log file")}const{unlockedCheevos:i,currentGame:n}=s;i?.length>0&&this.updateCheevos(!0,i),this.isLogOK=!0}async updateGameData(e){e||(e=await(async()=>{const e=Object.values(await Ot.getRecentlyPlayedGames({count:1}))[0]?.ID;return Ft.gameID=e,e})());try{const t=await Ot.getGameInfoAndProgress({gameID:e});let s;await G(150);try{s=await Ot.getGameTimesInfo({gameID:e})}catch(e){console.log(e)}this.GAME_DATA=((e,t)=>t&&t.ID?(e={...e,timeToBeat:t.MedianTimeToBeatHardcore,timeToMaster:t.MedianTimeToMaster},Object.values(e.Achievements).map((s=>((e,t,s)=>{e.Achievements[t.ID]={...t,timeToUnlock:s.MedianTimeToUnlockHardcore,timeToUnlockSoftcore:s.MedianTimeToUnlock}})(e,s,t?.Achievements[s.ID]))),e):e)(t,s)}catch(e){this.stop,console.error(e)}}async updateCheevos(e=!1,t){const s=e=>{let t=[];e?.forEach((e=>{const s=this.CHEEVOS[e.AchievementID];if(s){const i=1===e.HardcoreMode&&!s?.isHardcoreEarned;(!s.isEarned||i)&&t.push(e)}})),(e=>{e?.forEach((e=>{const{HardcoreMode:t,Date:s}=e,i=this.CHEEVOS[e.AchievementID],n=1==t;this.IS_HARD_MODE=n,n&&(i.isHardcoreEarned=!0,i.DateEarnedHardcore=s,this.GAME_DATA.earnedStats.hard.count++,this.GAME_DATA.earnedStats.hard.points+=i.Points,this.GAME_DATA.earnedStats.hard.retropoints+=i.TrueRatio,i.Type!=ye.PROGRESSION&&i.Type!=ye.WIN||this.GAME_DATA.earnedStats.hard.progressionCount++),this.GAME_DATA.earnedStats.soft.count++,this.GAME_DATA.earnedStats.soft.points+=i.Points,i.Type!=ye.PROGRESSION&&i.Type!=ye.WIN||this.GAME_DATA.earnedStats.soft.progressionCount++,i.isEarned=!0,i.DateEarned=i.DateEarned??s,this.CHEEVOS[e.AchievementID]=i}))})(t);const s=t?.map((e=>e.AchievementID));return s},i=()=>{let e=[];return"mastered"!==this.GAME_DATA.award&&this.GAME_DATA.earnedStats.hard.count===this.GAME_DATA.NumAchievements?(this.GAME_DATA.award="mastered",e.push({type:U.AWARD,award:"mastered",value:this.GAME_DATA})):this.GAME_DATA.award||this.GAME_DATA.earnedStats.soft.count!==this.GAME_DATA.NumAchievements||(this.GAME_DATA.award="completed",e.push({type:U.AWARD,award:"completed",value:this.GAME_DATA})),this.GAME_DATA.progressionSteps>0&&"beaten"!==this.GAME_DATA.progressionAward&&this.GAME_DATA.earnedStats.hard.progressionCount>=this.GAME_DATA.progressionSteps?(this.GAME_DATA.progressionAward="beaten",e.push({type:U.AWARD,award:"beaten",value:this.GAME_DATA})):this.GAME_DATA.progressionSteps>0&&!this.GAME_DATA.progressionAward&&this.GAME_DATA.earnedStats.soft.progressionCount>=this.GAME_DATA.progressionSteps&&(this.GAME_DATA.progressionAward="beaten-softcore",e.push({type:U.AWARD,award:"beaten-softcore",value:this.GAME_DATA})),e},n=()=>{this.GAME_DATA.hasZeroPoints=Object.values(this.CHEEVOS).filter((({Points:e,isHardcoreEarned:t})=>0===e&&!t))?.length>0};try{e||(t=await Ot.getRecentAchieves({minutes:this.RECENT_ACHIVES_RANGE_MINUTES}));const a=s(t),o=i();this.GAME_DATA.hasZeroPoints&&n(),kt.showCheevoAlerts(a),kt.showAwardsAlerts(o),kt.updateWidgets({earnedAchievementsIDs:a,isLog:e})}catch(e){console.error(e)}}start(){const e=()=>{this.IS_ONLINE&&(this.playTime.totalGameTime++,this.playTime.gameTime++,this.playTime.sessionTime++,this.playTime.timer--)},t=()=>{kt.statusPanel.blinkUpdate(),kt.status.blinkUpdate()};this.stop(),(()=>{this.checkApiUpdates(!0),this.IS_WATCHING=!0,Ft.parseLog&&(this.logWatcherInterval=setInterval((()=>{this.checkLogUpdates()}),1e3)),this.apiTrackerInterval=setInterval((()=>{t(),this.checkApiUpdates()}),1e3*Ft.updateDelaySec)})(),(()=>{this.isActive=!0,this.initPlayTime()})(),kt.statusPanel.timeWatcher().start(),kt.status.timeWatcher().start(),this.watcherInterval=setInterval((()=>{e(),this.playTime.gameTime%60==0&&this.savePlayTime()}),1e3)}stop(){clearInterval(this.apiTrackerInterval),clearInterval(this.logWatcherInterval),this.IS_WATCHING=!1,this.isActive=!1,this.playTime.totalGameTime&&this.savePlayTime(),this.watcherInterval&&clearInterval(this.watcherInterval),this.playTime.sessionTime=0,kt.statusPanel.timeWatcher().stop(),kt.status.timeWatcher().stop()}reset(){this._gameData={...this._gameData,...Nt.gamesDB[this._gameData.ID]},this.initPlayTime(),(()=>{const e=!1;kt.statusPanel.gameChangeEvent(e),kt.status?.gameChangeEvent(e),kt.gameList?.gameChangeEvent(),kt.gameCard?.updateGameCardInfo(this.GAME_DATA)})()}resetCheevo(e){kt.target?.refreshCheevo(e)}savePlayTime(){const e=this.playTime.totalGameTime;e>5&&(this.GAME_DATA.TimePlayed=e,Nt.gamesDB[this.GAME_DATA.ID]||(Nt.gamesDB[this.GAME_DATA.ID]={}),Nt.gamesDB[this.GAME_DATA.ID].TimePlayed=e,Nt.writeConfiguration())}}const Bt=navigator.userAgent||navigator.vendor||window.opera;/android/i.test(Bt)||/iPhone/.test(Bt)&&!window.MSStream?window.location.href="./mobile/index.html":(Nt=new bt,kt=new At,Ot=new Rt,xt=new Gt,window.ui=kt,window.config=Nt,window.configData=Nt.configData,window.apiWorker=Ot,window.watcher=xt),Nt.identConfirmed||(console.log("redirect to login"),window.location.href="./login");const{configData:Ft}=Nt})();